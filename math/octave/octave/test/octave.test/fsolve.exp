#
# Tests for fsolve
#

set test fsolve-setup
send "clear
function retval = f (p)

  x = p(1);
  y = p(2);
  z = p(3);

  retval = zeros (3, 1);

  retval(1) = sin(x) + y^2 + log(z) - 7;
  retval(2) = 3*x + 2^y -z^3 + 1;
  retval(3) = x + y + z - 5;

end

\[x, info\] = fsolve (\"f\", \[ 0.5, 2.0, 2.5 \]);

val = f (x);

x_opt = \[ 0.599053756672622
           2.39593140236921
           2.00501484095816 \];

tol = 1.0e-5;\n"

expect {
	-re "$resync"	{ }
}

set test fsolve-1
send "info_bad = (info != 1)\n"
expect {
	-re "info_bad = 0$nl.*$prompt$"		{ pass "$test" }
	-re "info_bad = 1$nl.*$prompt$"		{ fail "$test" }
}

set test fsolve-2
send "solution_bad = sum (abs (x - x_opt) > tol)\n"
expect {
	-re "solution_bad = 0$nl.*$prompt$"	{ pass "$test" }
	-re "solution_bad = 1$nl.*$prompt$"	{ fail "$test" }
}

set test fsolve-3
send "value_bad = sum (abs (val) > tol)\n"
expect {
	-re "value_bad = 0$nl.*$prompt$"		{ pass "$test" }
	-re "value_bad = 1$nl.*$prompt$"		{ fail "$test" }
}

set test fsolve-setup
send "function retval = f (p)

  x = p(1);
  y = p(2);
  z = p(3);
  w = p(4);

  retval = zeros (4, 1);

  retval(1) = 3*x + 4*y + exp (z + w) - 1.007;
  retval(2) = 6*x - 4*y + exp (3*z + w) - 11;
  retval(3) = x^4 - 4*y^2 + 6*z - 8*w - 20;
  retval(4) = x^2 + 2*y^3 + z - w - 4;

end

\[x, info\] = fsolve ('f', \[-1, 1, 2, -1\]);

val = f (x);

x_opt = \[ -0.767297326653401;
           0.590671081117440;
           1.47190018629642;
          -1.52719341133957 \];

tol = 1.0e-5;\n"

expect {
	-re "$resync"	{ }
}

set test fsolve-1
send "info_bad = (info != 1)\n"
expect {
	-re "info_bad = 0$nl.*$prompt$"		{ pass "$test" }
	-re "info_bad = 1$nl.*$prompt$"		{ fail "$test" }
}

set test fsolve-2
send "solution_bad = sum (abs (x - x_opt) > tol)\n"
expect {
	-re "solution_bad = 0$nl.*$prompt$"	{ pass "$test" }
	-re "solution_bad = 1$nl.*$prompt$"	{ fail "$test" }
}

set test fsolve-3
send "value_bad = sum (abs (val) > tol)\n"
expect {
	-re "value_bad = 0$nl.*$prompt$"		{ pass "$test" }
	-re "value_bad = 1$nl.*$prompt$"		{ fail "$test" }
}
