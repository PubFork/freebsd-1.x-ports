
		RECENT CHANGES

Version 1.61 is mainly to get out a version of Point that works with the
new version fo tcl and tk, that is, tcl7.0/tk3.3 and tcl7.1/tk3.4.
I have fixed a number of small bugs and made some changes.  The main change
of significance:
	* Point detects when I file it has edited and is about to save
		has changed since Point read it.  It warns you and lets
		you cancel the save.

I am going to try to get out a version (soon?) that deal with a number of
suggestions that have been made to me.  Also I plan to use the configure
utility for the make file.  Next time.


		THE POINT TEXT EDITOR FOR X

Point is a text editor for X windows.  It is specifically designed to use
the mouse as much as possible in editing.  It also provided convenient
ways to keep a number of windows open on files and ways to copy text
between and within files using the mouse.

Some features of Point:
* Unlimited number of windows and files
* Easy move and copy within and between windows
* Completely configurable: menus, key meanings, titles, etc.
* Extensive options to modify the look and behavior
* Uses Tcl as a macro language and the Tk toolkit
* Flexible searching: for selection, for last string searched for,
    for a regular expression, for the last regular expression,
    for a string in a list of files, for a C tag.
* File browsers vaguely similar to NeXT to load files.
* Circular mouse menus, that is, "gesture" commands
* Unlimited undo, redo and again (repeat last command)

If you have any problems please feel free to call me or send me email.


		FIRST GET TK/TCL

Point uses the Tk/Tcl distribution, using Tcl as its macro language and
Tk as its widget set.  In order to build point you have to first build
Tk/Tcl.  This version of Point works with Tcl version 7.0 and 7.1 and
Tk version 3.3 and 3.4.  The first thing to do is to get the Tcl and Tk
distributions.  You can get these from ftp.cs.berkeley.edu in /ucb/tcl.
Get the files tk3.4.tar.Z and tcl7.1.tar.Z.  These packages build very
easily in allmost all machines.

Tcl/Tk is very interesting in its own right and I encourage you to look
through it.


		THEN BUILD POINT

Once you have built Tk/Tcl you can build Point:

1. Execute "zcat point1.61.tar.Z | tar xvf -" to uncompress and untar the
   files.  It will put everything in a directory called "point1.61".
   Note: previous the point tar files put things in the current directory.
   This is no longer the case.

2. On a System V UNIX set the SYSV preprocessor variable at the top of pt.h.
   The SYSV variable only affects the way opendir and readdir are used.
   You might look at that code and see which form your system supports
   by looking at the man page for "opendir".

3. Set the TK_INCDIR and TCL_INCDIR variables in Imakefile and/or Make.dist
   to the path name of the directory of the tk and tcl include files can
   be found.  Similarly set TK_LIBDIR and TCL_LIBDIR to where the tk and
   tcl libraries can be found.

4. The POINT_LIBRARY variable must be set correctly, that is, to the
   subdirectory of the Point distribution where the startup file is.
   This should be a full pathname that Point will work no matter which
   directory you start point in.

5. Use "xmkmf" to create the Makefile from the Imakefile.
   If you do not have or do not like imake you can use "Make.dist",
   use "ln Make.dist Makefile;make" or "make -f Make.dist".
   You will have to modify the link step if you keep your X libraries
   in a place other than /usr/lib.  We keep our's in /usr/local/X11/lib.

6. Run make.

7. To install Point:
	make Makefiles
	make install
   Due to my inexperience with imake files it is likely the make install
   will not work right.  You might just want to install things by hand.


		THEN BE SURE THE INITIALIZATION FILES ARE IN ORDER

Point requires a number of files to run correctly and these must be in files
where Point can find them.  The key is the POINT_LIBRARY which was
specified in the Makefile.  This allows Point to start up from any
directory and always find the necessary files.  These files can be in a
system area or in your personal directory tree if you are building Point
for your own use and not installing it on the system in general.
The default startup file is the file "POINT_LIBRARY/startup.tcl" which
completes the Point initialization.  It tries three things until one works:

1. Look for ~/.ptrc and use it as the initialization file.  Otherwise:

2. Look for ./ptsetup.tcl and use it as the initialization file.  Otherwise:

3. Look for $POINT_LIBRARY/ptsetup.tcl and use it as the initialization
     file.  Otherwise give up.


This gets you to "ptsetup.tcl" which does the main initialization:

1. It sets up some variables used in other tcl files.

2. It sets personal option preferences.

3. It initializes tcl and autoloading and explicitly loads in the files
     necessary to run point.

Thus there is one important directory that contains all the tcl files.
This is "tclLib" in the distribution.  Setting POINT_LIBRARY to "tclLib"
and using the default files there should make everything work.

This may all seem complicated and it is.  I set things up this way so
that Point would always find system default files no matter where you
start it.  Also the minimum information is kept in the Point binary
and almost all of the setup sequence is in tcl code that is easily changed.


		THEN RUN POINT

Now you can run "point README" to test it out.

You can generate the manual page(s) from doc/point.man with nroff or troff
or ptroff or whatever ("ptroff -man doc/point.man" in my system).
The reference manual is in doc/userman.tex. The reference manual is in
LaTeX format but I have also included a Postscript version in doc/userman.ps.

If you are getting this from comp.sources.x then there will be no Postscript
file and doc/userman.tex will be divided into userman.part1 and userman.part2.
Just cat them together to create the tex file:
	cat userman.part[12] >userman.tex
	rm userman.part[12]


		PROBLEMS?

If you have any problems building Point please call me at 505-277-5446
or email me at crowley@unmvax.cs.unm.edu and I will try my best to
help you overcome your problem.  Even if you find a workaround for a
build problem I would like to hear about it so I can fix it in my stuff.

Point is still under active development and any suggestions for changes
and improvement are welcome and very much appreciated.  Also bug reports,
of course.  I will be happy to add features for people who make suggestions.
The file TODO records some of my plans for improvements.


		HISTORY

Point is an X version of a PC text editor of the same name that was bundled
with the Logitech mouse for a couple of years.  I have been working on the X
version off and on for several years (mostly off unfortunately).

