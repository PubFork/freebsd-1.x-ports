This is Info file eplain.info, produced by Makeinfo-1.55 from the input
file eplain.texi.

  This file documents the Eplain macros.

  Copyright (C) 1989, 90, 91, 92, 93, 94 Karl Berry.  Steven Smith
wrote the documentation for the commutative diagram macros.  (He also
wrote the macros.)

  Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

  Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided also that the
section entitled "GNU General Public License" is included exactly as in
the original, and provided that the entire resulting derived work is
distributed under the terms of a permission notice identical to this
one.

  Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that the section entitled "GNU General Public License"
may be included in a translation approved by the author instead of in
the original English.


File: eplain.info,  Node: Copying,  Next: Freedom,  Prev: Programming definitions,  Up: Top

GNU GENERAL PUBLIC LICENSE
**************************

                         Version 2, June 1991

     Copyright (C) 1989, 1991 Free Software Foundation, Inc.
     675 Mass Ave, Cambridge, MA 02139, USA
     
     Everyone is permitted to copy and distribute verbatim copies
     of this license document, but changing it is not allowed.

Preamble
========

  The licenses for most software are designed to take away your freedom
to share and change it.  By contrast, the GNU General Public License is
intended to guarantee your freedom to share and change free
software--to make sure the software is free for all its users.  This
General Public License applies to most of the Free Software
Foundation's software and to any other program whose authors commit to
using it.  (Some other Free Software Foundation software is covered by
the GNU Library General Public License instead.)  You can apply it to
your programs, too.

  When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
this service if you wish), that you receive source code or can get it
if you want it, that you can change the software or use pieces of it in
new free programs; and that you know you can do these things.

  To protect your rights, we need to make restrictions that forbid
anyone to deny you these rights or to ask you to surrender the rights.
These restrictions translate to certain responsibilities for you if you
distribute copies of the software, or if you modify it.

  For example, if you distribute copies of such a program, whether
gratis or for a fee, you must give the recipients all the rights that
you have.  You must make sure that they, too, receive or can get the
source code.  And you must show them these terms so they know their
rights.

  We protect your rights with two steps: (1) copyright the software, and
(2) offer you this license which gives you legal permission to copy,
distribute and/or modify the software.

  Also, for each author's protection and ours, we want to make certain
that everyone understands that there is no warranty for this free
software.  If the software is modified by someone else and passed on, we
want its recipients to know that what they have is not the original, so
that any problems introduced by others will not reflect on the original
authors' reputations.

  Finally, any free program is threatened constantly by software
patents.  We wish to avoid the danger that redistributors of a free
program will individually obtain patent licenses, in effect making the
program proprietary.  To prevent this, we have made it clear that any
patent must be licensed for everyone's free use or not licensed at all.

  The precise terms and conditions for copying, distribution and
modification follow.

    TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

  1. This License applies to any program or other work which contains a
     notice placed by the copyright holder saying it may be distributed
     under the terms of this General Public License.  The "Program",
     below, refers to any such program or work, and a "work based on
     the Program" means either the Program or any derivative work under
     copyright law: that is to say, a work containing the Program or a
     portion of it, either verbatim or with modifications and/or
     translated into another language.  (Hereinafter, translation is
     included without limitation in the term "modification".)  Each
     licensee is addressed as "you".

     Activities other than copying, distribution and modification are
     not covered by this License; they are outside its scope.  The act
     of running the Program is not restricted, and the output from the
     Program is covered only if its contents constitute a work based on
     the Program (independent of having been made by running the
     Program).  Whether that is true depends on what the Program does.

  2. You may copy and distribute verbatim copies of the Program's
     source code as you receive it, in any medium, provided that you
     conspicuously and appropriately publish on each copy an appropriate
     copyright notice and disclaimer of warranty; keep intact all the
     notices that refer to this License and to the absence of any
     warranty; and give any other recipients of the Program a copy of
     this License along with the Program.

     You may charge a fee for the physical act of transferring a copy,
     and you may at your option offer warranty protection in exchange
     for a fee.

  3. You may modify your copy or copies of the Program or any portion
     of it, thus forming a work based on the Program, and copy and
     distribute such modifications or work under the terms of Section 1
     above, provided that you also meet all of these conditions:

       a. You must cause the modified files to carry prominent notices
          stating that you changed the files and the date of any change.

       b. You must cause any work that you distribute or publish, that
          in whole or in part contains or is derived from the Program
          or any part thereof, to be licensed as a whole at no charge
          to all third parties under the terms of this License.

       c. If the modified program normally reads commands interactively
          when run, you must cause it, when started running for such
          interactive use in the most ordinary way, to print or display
          an announcement including an appropriate copyright notice and
          a notice that there is no warranty (or else, saying that you
          provide a warranty) and that users may redistribute the
          program under these conditions, and telling the user how to
          view a copy of this License.  (Exception: if the Program
          itself is interactive but does not normally print such an
          announcement, your work based on the Program is not required
          to print an announcement.)

     These requirements apply to the modified work as a whole.  If
     identifiable sections of that work are not derived from the
     Program, and can be reasonably considered independent and separate
     works in themselves, then this License, and its terms, do not
     apply to those sections when you distribute them as separate
     works.  But when you distribute the same sections as part of a
     whole which is a work based on the Program, the distribution of
     the whole must be on the terms of this License, whose permissions
     for other licensees extend to the entire whole, and thus to each
     and every part regardless of who wrote it.

     Thus, it is not the intent of this section to claim rights or
     contest your rights to work written entirely by you; rather, the
     intent is to exercise the right to control the distribution of
     derivative or collective works based on the Program.

     In addition, mere aggregation of another work not based on the
     Program with the Program (or with a work based on the Program) on
     a volume of a storage or distribution medium does not bring the
     other work under the scope of this License.

  4. You may copy and distribute the Program (or a work based on it,
     under Section 2) in object code or executable form under the terms
     of Sections 1 and 2 above provided that you also do one of the
     following:

       a. Accompany it with the complete corresponding machine-readable
          source code, which must be distributed under the terms of
          Sections 1 and 2 above on a medium customarily used for
          software interchange; or,

       b. Accompany it with a written offer, valid for at least three
          years, to give any third party, for a charge no more than your
          cost of physically performing source distribution, a complete
          machine-readable copy of the corresponding source code, to be
          distributed under the terms of Sections 1 and 2 above on a
          medium customarily used for software interchange; or,

       c. Accompany it with the information you received as to the offer
          to distribute corresponding source code.  (This alternative is
          allowed only for noncommercial distribution and only if you
          received the program in object code or executable form with
          such an offer, in accord with Subsection b above.)

     The source code for a work means the preferred form of the work for
     making modifications to it.  For an executable work, complete
     source code means all the source code for all modules it contains,
     plus any associated interface definition files, plus the scripts
     used to control compilation and installation of the executable.
     However, as a special exception, the source code distributed need
     not include anything that is normally distributed (in either
     source or binary form) with the major components (compiler,
     kernel, and so on) of the operating system on which the executable
     runs, unless that component itself accompanies the executable.

     If distribution of executable or object code is made by offering
     access to copy from a designated place, then offering equivalent
     access to copy the source code from the same place counts as
     distribution of the source code, even though third parties are not
     compelled to copy the source along with the object code.

  5. You may not copy, modify, sublicense, or distribute the Program
     except as expressly provided under this License.  Any attempt
     otherwise to copy, modify, sublicense or distribute the Program is
     void, and will automatically terminate your rights under this
     License.  However, parties who have received copies, or rights,
     from you under this License will not have their licenses
     terminated so long as such parties remain in full compliance.

  6. You are not required to accept this License, since you have not
     signed it.  However, nothing else grants you permission to modify
     or distribute the Program or its derivative works.  These actions
     are prohibited by law if you do not accept this License.
     Therefore, by modifying or distributing the Program (or any work
     based on the Program), you indicate your acceptance of this
     License to do so, and all its terms and conditions for copying,
     distributing or modifying the Program or works based on it.

  7. Each time you redistribute the Program (or any work based on the
     Program), the recipient automatically receives a license from the
     original licensor to copy, distribute or modify the Program
     subject to these terms and conditions.  You may not impose any
     further restrictions on the recipients' exercise of the rights
     granted herein.  You are not responsible for enforcing compliance
     by third parties to this License.

  8. If, as a consequence of a court judgment or allegation of patent
     infringement or for any other reason (not limited to patent
     issues), conditions are imposed on you (whether by court order,
     agreement or otherwise) that contradict the conditions of this
     License, they do not excuse you from the conditions of this
     License.  If you cannot distribute so as to satisfy simultaneously
     your obligations under this License and any other pertinent
     obligations, then as a consequence you may not distribute the
     Program at all.  For example, if a patent license would not permit
     royalty-free redistribution of the Program by all those who
     receive copies directly or indirectly through you, then the only
     way you could satisfy both it and this License would be to refrain
     entirely from distribution of the Program.

     If any portion of this section is held invalid or unenforceable
     under any particular circumstance, the balance of the section is
     intended to apply and the section as a whole is intended to apply
     in other circumstances.

     It is not the purpose of this section to induce you to infringe any
     patents or other property right claims or to contest validity of
     any such claims; this section has the sole purpose of protecting
     the integrity of the free software distribution system, which is
     implemented by public license practices.  Many people have made
     generous contributions to the wide range of software distributed
     through that system in reliance on consistent application of that
     system; it is up to the author/donor to decide if he or she is
     willing to distribute software through any other system and a
     licensee cannot impose that choice.

     This section is intended to make thoroughly clear what is believed
     to be a consequence of the rest of this License.

  9. If the distribution and/or use of the Program is restricted in
     certain countries either by patents or by copyrighted interfaces,
     the original copyright holder who places the Program under this
     License may add an explicit geographical distribution limitation
     excluding those countries, so that distribution is permitted only
     in or among countries not thus excluded.  In such case, this
     License incorporates the limitation as if written in the body of
     this License.

 10. The Free Software Foundation may publish revised and/or new
     versions of the General Public License from time to time.  Such
     new versions will be similar in spirit to the present version, but
     may differ in detail to address new problems or concerns.

     Each version is given a distinguishing version number.  If the
     Program specifies a version number of this License which applies
     to it and "any later version", you have the option of following
     the terms and conditions either of that version or of any later
     version published by the Free Software Foundation.  If the Program
     does not specify a version number of this License, you may choose
     any version ever published by the Free Software Foundation.

 11. If you wish to incorporate parts of the Program into other free
     programs whose distribution conditions are different, write to the
     author to ask for permission.  For software which is copyrighted
     by the Free Software Foundation, write to the Free Software
     Foundation; we sometimes make exceptions for this.  Our decision
     will be guided by the two goals of preserving the free status of
     all derivatives of our free software and of promoting the sharing
     and reuse of software generally.

                                NO WARRANTY

 12. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO
     WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE
     LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
     HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT
     WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT
     NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
     FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE
     QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
     PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY
     SERVICING, REPAIR OR CORRECTION.

 13. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN
     WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY
     MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE
     LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL,
     INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR
     INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
     DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU
     OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY
     OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN
     ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

                      END OF TERMS AND CONDITIONS

Appendix: How to Apply These Terms to Your New Programs
=======================================================

  If you develop a new program, and you want it to be of the greatest
possible use to the public, the best way to achieve this is to make it
free software which everyone can redistribute and change under these
terms.

  To do so, attach the following notices to the program.  It is safest
to attach them to the start of each source file to most effectively
convey the exclusion of warranty; and each file should have at least
the "copyright" line and a pointer to where the full notice is found.

     ONE LINE TO GIVE THE PROGRAM'S NAME AND A BRIEF IDEA OF WHAT IT DOES.
     Copyright (C) 19YY  NAME OF AUTHOR
     
     This program is free software; you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation; either version 2 of the License, or
     (at your option) any later version.
     
     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
     
     You should have received a copy of the GNU General Public License
     along with this program; if not, write to the Free Software
     Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

  Also add information on how to contact you by electronic and paper
mail.

  If the program is interactive, make it output a short notice like this
when it starts in an interactive mode:

     Gnomovision version 69, Copyright (C) 19YY NAME OF AUTHOR
     Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
     This is free software, and you are welcome to redistribute it
     under certain conditions; type `show c' for details.

  The hypothetical commands `show w' and `show c' should show the
appropriate parts of the General Public License.  Of course, the
commands you use may be called something other than `show w' and `show
c'; they could even be mouse-clicks or menu items--whatever suits your
program.

  You should also get your employer (if you work as a programmer) or
your school, if any, to sign a "copyright disclaimer" for the program,
if necessary.  Here is a sample; alter the names:

     Yoyodyne, Inc., hereby disclaims all copyright interest in the program
     `Gnomovision' (which makes passes at compilers) written by James Hacker.
     
     SIGNATURE OF TY COON, 1 April 1989
     Ty Coon, President of Vice

  This General Public License does not permit incorporating your
program into proprietary programs.  If your program is a subroutine
library, you may consider it more useful to permit linking proprietary
applications with the library.  If this is what you want to do, use the
GNU Library General Public License instead of this License.


File: eplain.info,  Node: Freedom,  Next: Macro index,  Prev: Copying,  Up: Top

Regain your programming freedom
*******************************

  Until a few years ago, programmers in the United States could write
any program they wished.  This freedom has now been taken away by two
developments: software patents, which grant the patent holder an
absolute monopoly on some programming technique, and user interface
copyright, which forbid compatible implementations of an existing user
interface.

  In Europe, especially through the GATT treaty, things are rapidly
approaching the same pass.

* Menu:

* Software patents::            Algorithm monopolies.
* User interface copyright::    Forbidding upward-compatibility.
* What to do?::                 What to do?


File: eplain.info,  Node: Software patents,  Next: User interface copyright,  Up: Freedom

Software patents
================

  The U.S. Patent and Trademark Office has granted numerous software
patents on software techniques.  Patents are an absolute
monopoly--independent reinvention is precluded.  This monopoly lasts
for seventeen years, i.e., forever (with respect to computer science).

  One patent relevant to TeX is patent 4,956,809, issued to the Mark
Williams company on September 11, 1990, applied for in 1982, which
covers (among other things)
     representing in a standardized order consisting of a standard
     binary structure file stored on auxiliary memory or transported on
     a communications means, said standardized order being different
     from a different order used on at least one of the different
     computers;

     Converting in each of the different computers binary data read
     from an auxiliary data storage or communications means from the
     standardized order to the natural order of the respective host
     computer after said binary data are read from said auxiliary data
     storage or communications means and before said binary data are
     used by the respective host computer; and

     Converting in each of the different computers binary data written
     into auxiliary data storage or communications means from the
     natural order of the respective host computer to the standardized
     order prior to said writing.

... in other words, storing data on disk in a machine-independent
order, as the DVI, TFM, GF, and PK file formats specify.  Even though
TeX is "prior art" in this respect, the patent was granted (the patent
examiners not being computer scientists, even less computer
typographers).  Since there is a strong presumption in the courts of a
patent's validity once it has been granted, there is a good chance that
users or implementors of TeX could be successfully sued on the issue.

  As another example, the X window system, which was intended to be able
to be used freely by everyone, is now being threatened by two patents:
4,197,590 on the use of exclusive-or to redraw cursors, held by Cadtrak,
a litigation company (this has been upheld twice in court); and
4,555,775, held by AT&T, on the use of backing store to redraw windows
quickly.

  Here is one excerpt from a recent mailing by the League for
Programming Freedom (*note What to do?::.) which I feel sums up the
situation rather well.  It comes from an article in `Think' magazine,
issue #5, 1990.  The comments after the quote were written by Richard
Stallman.

         "You get value from patents in two ways," says Roger Smith, IBM
        Assistant General Counsel, intellectual property law.
     "Through fees,     and through licensing negotiations that give
     IBM access to other     patents.

     "The IBM patent portfolio gains us the freedom to do what we need
     to     do through cross-licensing--it gives us access to the
     inventions of     others that are the key to rapid innovation.
     Access is far more     valuable to IBM than the fees it receives
     from its 9,000 active     patents.  There's no direct calculation
     of this value, but it's many     times larger than the fee income,
     perhaps an order of magnitude     larger."

  This information should dispel the belief that the patent system will
"protect" a small software developer from competition from IBM.  IBM
can always find patents in its collection which the small developer is
infringing, and thus obtain a cross-license.

  However, the patent system does cause trouble for the smaller
companies which, like IBM, need access to patented techniques in order
to do useful work in software.  Unlike IBM, the smaller companies do
not have 9,000 patents and cannot usually get a cross-license.  No
matter how hard they try, they cannot have enough patents to do this.

  Only the elimination of patents from the software field can enable
most software developers to continue with their work.

  The value IBM gets from cross-licensing is a measure of the amount of
harm that the patent system would do to IBM if IBM could not avoid it.
IBM's estimate is that the trouble could easily be ten times the good
one can expect from one's own patents--even for a company with 9,000 of
them.


File: eplain.info,  Node: User interface copyright,  Next: What to do?,  Prev: Software patents,  Up: Freedom

User interface copyright
========================

  (This section is copied from the GCC manual, by Richard Stallman.)

     This section is a political message from the League for Programming
     Freedom to the users of the GNU font utilities.  It is included
     here as an expression of support for the League on my part.

  Apple, Lotus and Xerox are trying to create a new form of legal
monopoly: a copyright on a class of user interfaces.  These monopolies
would cause serious problems for users and developers of computer
software and systems.

  Until a few years ago, the law seemed clear: no one could restrict
others from using a user interface; programmers were free to implement
any interface they chose.  Imitating interfaces, sometimes with changes,
was standard practice in the computer field.  The interfaces we know
evolved gradually in this way; for example, the Macintosh user interface
drew ideas from the Xerox interface, which in turn drew on work done at
Stanford and SRI.  1-2-3 imitated VisiCalc, and dBase imitated a
database program from JPL.

  Most computer companies, and nearly all computer users, were happy
with this state of affairs.  The companies that are suing say it does
not offer "enough incentive" to develop their products, but they must
have considered it "enough" when they made their decision to do so.  It
seems they are not satisfied with the opportunity to continue to compete
in the marketplace--not even with a head start.

  If Xerox, Lotus, and Apple are permitted to make law through the
courts, the precedent will hobble the software industry:

   * Gratuitous incompatibilities will burden users.  Imagine if each
     car manufacturer had to arrange the pedals in a different order.

   * Software will become and remain more expensive.  Users will be
     "locked in" to proprietary interfaces, for which there is no real
     competition.

   * Large companies have an unfair advantage wherever lawsuits become
     commonplace.  Since they can easily afford to sue, they can
     intimidate small companies with threats even when they don't
     really have a case.

   * User interface improvements will come slower, since incremental
     evolution through creative imitation will no longer be permitted.

   * Even Apple, etc., will find it harder to make improvements if they
     can no longer adapt the good ideas that others introduce, for fear
     of weakening their own legal positions.  Some users suggest that
     this stagnation may already have started.

   * If you use GNU software, you might find it of some concern that
     user interface copyright will make it hard for the Free Software
     Foundation to develop programs compatible with the interfaces that
     you already know.


File: eplain.info,  Node: What to do?,  Prev: User interface copyright,  Up: Freedom

What to do?
===========

  (This section is copied from the GCC manual, by Richard Stallman.)

  To protect our freedom from lawsuits like these, a group of
programmers and users have formed a new grass-roots political
organization, the League for Programming Freedom.

  The purpose of the League is to oppose new monopolistic practices such
as user-interface copyright and software patents; it calls for a return
to the legal policies of the recent past, in which these practices were
not allowed.  The League is not concerned with free software as an
issue, and not affiliated with the Free Software Foundation.

  The League's membership rolls include John McCarthy, inventor of Lisp,
Marvin Minsky, founder of the Artificial Intelligence lab, Guy L.
Steele, Jr., author of well-known books on Lisp and C, as well as
Richard Stallman, the developer of GNU CC.  Please join and add your
name to the list.  Membership dues in the League are $42 per year for
programmers, managers and professionals; $10.50 for students; $21 for
others.

  The League needs both activist members and members who only pay their
dues.

  To join, or for more information, phone (617) 492-0023 or write to:

     League for Programming Freedom
     1 Kendall Square #143
     P.O. Box 9171
     Cambridge, MA 02139

  You can also send electronic mail to `league@prep.ai.mit.edu'.

  Here are some suggestions from the League for things you can do to
protect your freedom to write programs:

   * Don't buy from Xerox, Lotus or Apple.  Buy from their competitors
     or from the defendants they are suing.

   * Don't develop software to work with the systems made by these
     companies.

   * Port your existing software to competing systems, so that you
     encourage users to switch.

   * Write letters to company presidents to let them know their conduct
     is unacceptable.

   * Tell your friends and colleagues about this issue and how it
     threatens to ruin the computer industry.

   * Above all, don't work for the look-and-feel plaintiffs, and don't
     accept contracts from them.

   * Write to Congress to explain the importance of this issue.

          House Subcommittee on Intellectual Property
          2137 Rayburn Bldg
          Washington, DC 20515
          
          Senate Subcommittee on Patents, Trademarks and Copyrights
          United States Senate
          Washington, DC 20510

     (These committees have received lots of mail already; let's give
     them even more.)

  Express your opinion!  You can make a difference.


File: eplain.info,  Node: Macro index,  Next: Concept index,  Prev: Freedom,  Up: Top

Macro index
***********

* Menu:

* .aux file:                            Cross-references.
* .aux file:                            Citations.
* .bbl file:                            Citations.
* .bib file:                            Citations.
* .bst files:                           Citations.
* .fmt file:                            Installation.
* .fmt file:                            Invoking Eplain.
* .toc file:                            Contents.
* abovecolumnspenalty:                  Tables.
* abovedoublecolumnskip:                Multiple columns.
* abovelistpenalty:                     Formatting lists.
* abovelistskip:                        Formatting lists.
* abovelistskipamount:                  Formatting lists.
* adjarrow:                             Arrows and morphisms.
* adjmapdown:                           Arrows and morphisms.
* adjmapleft:                           Arrows and morphisms.
* adjmapright:                          Arrows and morphisms.
* adjmapup:                             Arrows and morphisms.
* advancebottommargin:                  Margins.
* advanceleftmargin:                    Margins.
* advancerightmargin:                   Margins.
* advancetopmargin:                     Margins.
* AMSLaTeX:                             Logos.
* amsppt.sty:                           Invoking Eplain.
* AMSTeX:                               Logos.
* arrow:                                Arrows and morphisms.
* arrow:                                Arrows and morphisms.
* bblem:                                Formatting bibliographies.
* bblfilebasename:                      Citations.
* bblhook:                              Formatting bibliographies.
* bblnewblock:                          Formatting bibliographies.
* bblrm:                                Formatting bibliographies.
* bblsc:                                Formatting bibliographies.
* beginlist:                            Formatting lists.
* belowdoublecolumnskip:                Multiple columns.
* belowfootnoterulespace:               Footnotes.
* belowlistskip:                        Formatting lists.
* belowlistskipamount:                  Formatting lists.
* biarrow:                              Arrows and morphisms.
* biblabelcontents:                     Formatting bibliographies.
* biblabelextraspace:                   Formatting bibliographies.
* biblabelprint:                        Formatting bibliographies.
* biblabelwidth:                        Formatting bibliographies.
* bibliography:                         Citations.
* bibliographystyle:                    Citations.
* BibTeX:                               Logos.
* bihline:                              Arrows and morphisms.
* bimapdown:                            Arrows and morphisms.
* bimapleft:                            Arrows and morphisms.
* bimapright:                           Arrows and morphisms.
* bimapup:                              Arrows and morphisms.
* bisline:                              Arrows and morphisms.
* bivline:                              Arrows and morphisms.
* blackbox:                             Boxes.
* blanklineskipamount in justified text: Justification.
* blanklineskipamount in obeyed text:   Obeying spaces.
* bottommargin:                         Margins.
* boxit:                                Boxes.
* boxitspace:                           Boxes.
* catcode:                              Category codes.
* center:                               Justification.
* centereddisplays:                     Displays.
* channelwidth:                         Commutative diagram parameters.
* channelwidth:                         Arrows and morphisms.
* cite:                                 Citations.
* columnfill:                           Multiple columns.
* commdiag:                             Construction of commutative diagrams.
* commdiagbaselines:                    Construction of commutative diagrams.
* commdiagbaselines:                    Commutative diagram parameters.
* csn:                                  \csn and \ece.
* definexref:                           Defining generic references.
* discretionaries:                      Paths.
* displaylines:                         Displays.
* doublecolumns:                        Multiple columns.
* drawline:                             Slanted lines and vectors.
* drawvector:                           Slanted lines and vectors.
* eattoken:                             Macro arguments.
* ece:                                  \csn and \ece.
* edefappend:                           \edefappend.
* ehrule:                               Rules.
* endlist:                              Formatting lists.
* endnumberedlist:                      Lists.
* endorderedlist:                       Lists.
* endunorderedlist:                     Lists.
* eplain:                               Invoking Eplain.
* eplain.aux:                           Installation.
* eqalignno:                            Displays.
* eqconstruct:                          Formatting equation references.
* eqdef:                                Equation references.
* eqdefn:                               Equation references.
* eqnumber:                             Equation references.
* eqprint:                              Formatting equation references.
* eqref:                                Equation references.
* eqrefn:                               Equation references.
* eqsubdef:                             Subequation references.
* eqsubdefn:                            Subequation references.
* eqsubreftext:                         Subequation references.
* everyfootnote:                        Footnotes.
* evrule:                               Rules.
* expandonce:                           \expandonce.
* fileexists (conditional):             Auxiliary files.
* flushleft:                            Justification.
* flushright:                           Justification.
* fmtversion:                           Introduction.
* footnotemarkseparation:               Footnotes.
* footnoteruleheight:                   Footnotes.
* footnoterulewidth:                    Footnotes.
* for:                                  Iteration.
* frac:                                 Fractions.
* fullmonthname:                        Time of day.
* futurenonspacelet:                    \futurenonspacelet.
* generaldisplay:                       Formatting displays.
* getproperty:                          Properties.
* gloggingall:                          Diagnostics.
* gobble:                               Macro arguments.
* gobbletwo:                            Macro arguments.
* gridcommdiag:                         Construction of commutative diagrams.
* gtracingall:                          Diagnostics.
* gutter:                               Multiple columns.
* harrowlength:                         Commutative diagram parameters.
* harrowlength:                         Arrows and morphisms.
* hchannel:                             Commutative diagram parameters.
* hgrid:                                Commutative diagram parameters.
* hgrid:                                Construction of commutative diagrams.
* hline:                                Arrows and morphisms.
* hmorphposn:                           Commutative diagram parameters.
* hmorphposn:                           Arrows and morphisms.
* hmorphposndn:                         Commutative diagram parameters.
* hmorphposndn:                         Arrows and morphisms.
* hmorphposnlft:                        Arrows and morphisms.
* hmorphposnlft:                        Commutative diagram parameters.
* hmorphposnrt:                         Commutative diagram parameters.
* hmorphposnrt:                         Arrows and morphisms.
* hmorphposnup:                         Arrows and morphisms.
* hmorphposnup:                         Commutative diagram parameters.
* hookaction:                           Hooks.
* hookactiononce:                       Hooks.
* hookappend:                           Hooks.
* hookprepend:                          Hooks.
* hookrun:                              Hooks.
* hruledefaultdepth:                    Rules.
* hruledefaultheight:                   Rules.
* hsize:                                Margins.
* identity:                             Macro arguments.
* iffileexists:                         Auxiliary files.
* ifrewritetocfile:                     Contents.
* ifundefined:                          \ifundefined.
* innerdef:                             Allocation macros.
* innerinnerdef:                        Allocation macros.
* innernewbox:                          Allocation macros.
* innernewcount:                        Allocation macros.
* innernewdimen:                        Allocation macros.
* innernewfam:                          Allocation macros.
* innernewhelp:                         Allocation macros.
* innernewif:                           Allocation macros.
* innernewinsert:                       Allocation macros.
* innernewlanguage:                     Allocation macros.
* innernewread:                         Allocation macros.
* innernewskip:                         Allocation macros.
* innernewtoks:                         Allocation macros.
* innernewwrite:                        Allocation macros.
* interfootnoteskip:                    Footnotes.
* interitemskip:                        Formatting lists.
* interitemskipamount:                  Formatting lists.
* itemletter:                           Formatting lists.
* itemnumber:                           Formatting lists.
* jobname:                              Citations.
* jobname:                              Auxiliary files.
* LAMSTeX:                              Logos.
* LaTeX:                                Logos.
* lbracechar:                           Category codes.
* leftdisplayindent:                    Displays.
* leftdisplays:                         Displays.
* leftdisplaysetup:                     Formatting displays.
* leftmargin:                           Margins.
* leqalignno:                           Displays.
* letreturn:                            Category codes.
* letter:                               Category codes.
* lft:                                  Arrows and morphisms.
* li:                                   Lists.
* linenumberedlisting:                  Verbatim listing.
* listcompact:                          Lists.
* listing:                              Verbatim listing.
* listingfont:                          Verbatim listing.
* listleftindent:                       Formatting lists.
* listmarkerspace:                      Formatting lists.
* listrightindent:                      Formatting lists.
* loggingall:                           Diagnostics.
* makeactive:                           Category codes.
* makeblankbox:                         Boxes.
* makecolumns:                          Tables.
* mapdown:                              Arrows and morphisms.
* mapdown:                              Arrows and morphisms.
* mapleft:                              Arrows and morphisms.
* mapleft:                              Arrows and morphisms.
* mapright:                             Arrows and morphisms.
* mapright:                             Arrows and morphisms.
* mapup:                                Arrows and morphisms.
* mapup:                                Arrows and morphisms.
* matrix:                               Construction of commutative diagrams.
* MF:                                   Logos.
* monthname:                            Time of day.
* morphdist:                            Arrows and morphisms.
* morphdist:                            Commutative diagram parameters.
* new...:                               Allocation macros.
* noarrow:                              Invoking Eplain.
* noauxfile:                            Invoking Eplain.
* nobibtex:                             Invoking Eplain.
* nocite:                               Citations.
* numberedfootnote:                     Footnotes.
* numberedlist:                         Lists.
* numberedlistdepth:                    Formatting lists.
* numberedmarker:                       Formatting lists.
* numbername:                           Writing out numbers.
* obeywhitespace:                       Obeying spaces.
* orderedlist:                          Lists.
* other:                                Category codes.
* outer:                                Allocation macros.
* pagetotal:                            Multiple columns.
* paperheight:                          Margins.
* paperwidth:                           Margins.
* path:                                 Paths.
* percentchar:                          Category codes.
* previouseverydisplay:                 Formatting displays.
* printbetweencitations:                Formatting citations.
* printcitefinish:                      Formatting citations.
* printcitenote:                        Formatting citations.
* printcitestart:                       Formatting citations.
* printitem:                            Formatting lists.
* quadcolumns:                          Multiple columns.
* rbracechar:                           Category codes.
* readtocfile:                          Contents.
* ref:                                  Using generic references.
* refn:                                 Using generic references.
* refs:                                 Using generic references.
* rewritetocfile (conditional):         Contents.
* rightmargin:                          Margins.
* rt:                                   Arrows and morphisms.
* sanitize:                             Converting to characters.
* sarrowlength:                         Arrows and morphisms.
* sarrowlength:                         Commutative diagram parameters.
* setproperty:                          Properties.
* setuplistinghook:                     Verbatim listing.
* singlecolumn:                         Multiple columns.
* sline:                                Arrows and morphisms.
* sline:                                Arrows and morphisms.
* SLiTeX:                               Logos.
* specialpathdelimiters (conditional):  Paths.
* subeqnumber:                          Subequation references.
* testfileexistence:                    Auxiliary files.
* TeX:                                  Logos.
* timestamp:                            Time of day.
* timestring:                           Time of day.
* toc...entry:                          Contents.
* tocfilebasename:                      Contents.
* today:                                Time of day.
* topmargin:                            Margins.
* tracingall:                           Diagnostics.
* tracingboxes:                         Diagnostics.
* tracingoff:                           Diagnostics.
* triplecolumns:                        Multiple columns.
* uncatcodespecials:                    Category codes.
* unorderedlist:                        Lists.
* unorderedlistdepth:                   Formatting lists.
* unorderedmarker:                      Formatting lists.
* varrowlength:                         Arrows and morphisms.
* varrowlength:                         Commutative diagram parameters.
* vchannel:                             Commutative diagram parameters.
* verbatim:                             Verbatim listing.
* verbatimescapechar:                   Verbatim listing.
* vgrid:                                Construction of commutative diagrams.
* vgrid:                                Commutative diagram parameters.
* vline:                                Arrows and morphisms.
* vmorphposn:                           Arrows and morphisms.
* vmorphposn:                           Commutative diagram parameters.
* vmorphposndn:                         Arrows and morphisms.
* vmorphposndn:                         Commutative diagram parameters.
* vmorphposnlft:                        Arrows and morphisms.
* vmorphposnlft:                        Commutative diagram parameters.
* vmorphposnrt:                         Arrows and morphisms.
* vmorphposnrt:                         Commutative diagram parameters.
* vmorphposnup:                         Commutative diagram parameters.
* vmorphposnup:                         Arrows and morphisms.
* vpenalty:                             Mode-specific penalties.
* vruledefaultwidth:                    Rules.
* writenumberedtocentry:                Contents.
* writetocentry:                        Contents.
* xeplain.tex:                          Introduction.
* xrdef:                                Page references.
* xref:                                 Page references.
* xrefn:                                Using generic references.
* xrefwarning conditional:              Using generic references.
* xrefwarningfalse:                     Citations.
* xrlabel:                              Converting to characters.

