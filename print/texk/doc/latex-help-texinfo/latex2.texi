@comment %**start of header (This is for running Texinfo on a region.)
@setfilename ../info/latex2
@comment %**end of header (This is for running Texinfo on a region.)


@comment *************************
@comment *** List of Commands ****
@comment *************************

@comment LEVEL2
@node    List of Commands, _{exp} (subscript), (latex)Sizes, (latex)Commands
@comment node-name,        next,               previous,     up
@section Alphabetical List of Commands


@menu
* _@{exp@} (subscript)::
* ^@{exp@} (superscript)::
* \\::
* \- (hyphenation)::
* \;::
* \COLON::
* \COMMA::
* \!::
* \=::
* \>::
* \<::
* \+::
* \- (tabbing)::
* \A::
* \`::
* \addcontentsline::
* \addtocontents::
* \addtocounter::
* \address::
* \addtolength::
* \addvspace::
* \alph::
* \appendix::
* \arabic::
* \array::
* \author::
* \bf::
* \bibitem::
* \bigskip::
* \cdots::
* center::
* \centering::
* \circle::
* \cite::
* \cleardoublepage::
* \clearpage::
* \cline::
* \closing::
* \dashbox::
* \date::
* \ddots::
* description::
* \dotfill::
* \em::
* enumerate::
* eqnarray::
* equation::
* figure::
* \fbox::
* \flushbottom::
* flushleft::
* flushright::
* \fnsymbol::
* \footnote::
* \footnotemark::
* \footnotesize::
* \footnotetext::
* \frac::
* \frame::
* \framebox::
* \hfill::
* \hline::
* \hrulefill::
* \hspace::
* \huge::
* \Huge (capital "h")::
* \hyphenation::
* \include::
* \includeonly::
* \indent::
* \input::
* \it::
* itemize::
* \kill::
* \label::
* \large::
* \Large (capital "l")::
* \LARGE (all caps)::
* \ldots::
* \line::
* \linebreak::
* \linethickness::
* list::
* \location::
* \makebox::
* \maketitle::
* \mark::
* \mbox::
* \medskip::
* minipage::
* \multicolumn::
* \multiput::
* \newcommand::
* \newcounter::
* \newenvironment::
* \newfont::
* \newlength::
* \newline::
* \newpage::
* \newsavebox::
* \newtheorem::
* \nocite::
* \noindent::
* \nolinebreak::
* \normalsize::
* \nopagebreak::
* \onecolumn::
* \opening::
* \oval::
* \overbrace::
* \overline::
* \pagebreak::
* \pagenumbering::
* \pageref::
* \pagestyle::
* \par::
* \parbox::
* picture::
* \put::
* quotation::
* quote::
* \raggedbottom::
* \raggedleft::
* \raggedright::
* \raisebox::
* \ref::
* \rm::
* \roman::
* \rule::
* \savebox::
* \sc::
* \scriptsize::
* \setcounter::
* \setlength::
* \settowidth::
* \sf::
* \shortstack::
* \signature::
* \sl::
* \small::
* \smallskip::
* \sqrt::
* tabbing::
* table::
* tabular::
* \telephone::
* \thanks::
* thebibliography::
* theorem::
* \thispagestyle::
* \tiny::
* \title::
* titlepage::
* \tt::
* \twocolumn::
* \typeout::
* \typein::
* \underbrace::
* \underline::
* \usebox::
* \usecounter::
* \value::
* \vdots::
* \vector::
* \verb::
* verbatim::
* verse::
* \vfill::
* \vline::
* \vspace::
@end menu


@comment ************************
@comment ** _{exp} (subscript) **
@comment ************************

@comment LEVEL3 - commands
@node    _{exp} (subscript), ^{exp} (superscript), List of Commands, List of Commands
@comment node-name,          next,                 previous,         up
@subsection _@{exp@} (subscript)

To get an expression @code{exp} to appear as a subscript, you just type
@code{_@{exp@}}.  Use in math mode.

@xref{Math Formulae, , , latex}.

@xref{Subscripts & Superscripts, , , latex}.


@comment ***************************
@comment **  ^{exp} (superscript) **
@comment ***************************

@comment LEVEL3 - commands
@node    ^{exp} (superscript), \\,   _{exp} (subscript), List of Commands
@comment node-name,            next, previous,           up
@subsection ^@{exp@} (superscript)

To get an expression @code{exp} to appear as a superscript, you just
type @code{^@{exp@}}.  Use in math mode.

@xref{Math Formulae, , , latex}.

@xref{Subscripts & Superscripts, , , latex}.


@comment **********
@comment **  \\  **
@comment **********

@comment LEVEL3 - commands
@node    \\,        \- (hyphenation), ^{exp} (superscript), List of Commands
@comment node-name, next,             previous,             up
@subsection \\

@code{\\[*][extra-space]}

@ifinfo
The @code{\\} command tells LaTeX to start a new line.  It has an
optional argument, @code{extra-space}, that specifies how much extra
vertical space is to be inserted before the next line.  This can be a
negative amount.

The @code{\\*} command is the same as the ordinary @code{\\} command
except that it tells LaTeX not to start a new page after the line.
@end ifinfo

@iftex
The @code{\\} command tells @LaTeX to start a new line.  It has an
optional argument, @code{extra-space}, that specifies how much extra
vertical space is to be inserted before the next line.  This can be a
negative amount.

The @code{\\*} command is the same as the ordinary @code{\\} command
except that it tells @LaTeX not to start a new page after the line.
@end iftex

@xref{Line & Page Breaking, , , latex}.


@comment **********************
@comment ** \- (hyphenation) **
@comment **********************

@comment LEVEL3 - commands
@node    \- (hyphenation), \;,   \\,       List of Commands
@comment node-name,        next, previous, up
@subsection \-

@ifinfo
The @code{\-} command tells LaTeX that it may hyphenate the word at that
point.  LaTeX is very good at hyphenating, and it will usually find all
correct hyphenation points.  The @code{\-} command is used for the
exceptional cases.
@end ifinfo

@iftex
The @code{\-} command tells @LaTeX that it may hyphenate the word at that
point.  @LaTeX is very good at hyphenating, and it will usually find all
correct hyphenation points.  The @code{\-} command is used for the
exceptional cases.
@end iftex

@xref{Line & Page Breaking, , , latex}.


@comment ********
@comment ** \; **
@comment ********

@comment LEVEL3 - commands
@node    \;,        \COLON, \- (hyphenation), List of Commands
@comment node-name, next,   previous,         up
@subsection \;

Include a thick space in math mode.

@xref{Math Formulae, , , latex}.

@xref{Spacing in Math Mode, , , latex}.


@comment ************
@comment ** \COLON **
@comment ************

@comment LEVEL3 - commands
@node    \COLON,    \COMMA, \;,       List of Commands
@comment node-name, next,   previous, up
@subsection \:

Include a medium space in math mode.

@xref{Math Formulae, , , latex}.

@xref{Spacing in Math Mode, , , latex}.


@comment ************
@comment ** \COMMA **
@comment ************

@comment LEVEL3 - commands
@node    \COMMA,    \!,   \COLON,   List of Commands
@comment node-name, next, previous, up
@subsection \,

Include a thin space in math mode.

@xref{Math Formulae, , , latex}.

@xref{Spacing in Math Mode, , , latex}.


@comment ********
@comment ** \! **
@comment ********

@comment LEVEL3 - commands
@node    \!,        \=,   \COMMA,   List of Commands
@comment node-name, next, previous, up
@subsection \!

Include a negative thin space in math mode.

@xref{Math Formulae, , , latex}.

@xref{Spacing in Math Mode, , , latex}.


@comment *********
@comment ** \= ***
@comment *********

@comment LEVEL3 - commands
@node    \=,        \>,   \!,       List of Commands
@comment node-name, next, previous, up
@subsection \=

The @code{\=} command sets the tab stops.

@xref{Environments, , , latex}.

@xref{tabbing, , , latex}.


@comment *********
@comment ** \> ***
@comment *********

@comment LEVEL3 - commands
@node    \>,        \<,   \=,       List of Commands
@comment node-name, next, previous, up
@subsection \>

@ifinfo
The @code{\>} command causes LaTeX to advance to the next tab stop.
@end ifinfo

@iftex
The @code{\>} command causes @LaTeX to advance to the next tab stop.
@end iftex

@xref{Environments, , , latex}.

@xref{tabbing, , , latex}.


@comment *********
@comment ** \< ***
@comment *********

@comment LEVEL3 - commands
@node    \<,        \+,   \>,       List of Commands
@comment node-name, next, previous, up
@subsection \<

The @code{\<} command allows you to put something to the left of the
local margin without changing the margin.

@xref{Environments, , , latex}.

@xref{tabbing, , , latex}.


@comment *********
@comment ** \+ ***
@comment *********

@comment LEVEL3 - commands
@node    \+,        \- (tabbing), \<,       List of Commands
@comment node-name, next,         previous, up
@subsection \+

The @code{\+} command moves the left margin of the next and all the
following commands one tab stop to the right.

@xref{Environments, , , latex}.

@xref{tabbing, , , latex}.


@comment ******************
@comment ** \- (tabbing) **
@comment ******************

@comment LEVEL3 - commands
@node    \- (tabbing), \A,   \+,       List of Commands
@comment node-name,    next, previous, up
@subsection \-

The @code{\-} command moves the left margin of the next and all the
following commands one tab stop to the left.

@xref{Environments, , , latex}.

@xref{tabbing, , , latex}.


@comment *********
@comment ** \' ***
@comment *********

@comment LEVEL3 - commands
@node    \A,        \`,   \- (tabbing), List of Commands
@comment node-name, next, previous,     up
@subsection \'

The @code{\'} command moves everything that you have typed so far in the
current column, everything starting from the most recent @code{\>},
@code{\<}, @code{\'}, @code{\\}, or @code{\kill} command, to the right
of the previous column, flush against the current column's tab stop.

@xref{Environments, , , latex}.

@xref{tabbing, , , latex}.


@comment *********
@comment ** \` ***
@comment *********

@comment LEVEL3 - commands
@node    \`,        \addcontentsline,  \A,       List of Commands
@comment node-name, next,              previous, up
@subsection \`

The @code{\`} command allows you to put text flushed right against any
tab stop, including tab stop 0.  However, it can't move text to the
right of the last column because there's no tab stop there.  The
@code{\`} command moves all the text that follows it, up to the
@code{\\} or @code{\end@{tabbing@}} command that ends the line, to the
right margin of the tabbing environment.  There must be no @code{\>} or
@code{\'} command between the @code{\`} and the command that ends the
line.

@xref{Environments, , , latex}.

@xref{tabbing, , , latex}.


@comment ***********************
@comment ** \addcontentsline **
@comment ***********************

@comment LEVEL3 - commands
@node    \addcontentsline, \addtocontents, \`,      List of Commands
@comment node-name,         next,            previous, up
@subsection \addcontentsline

@code{\addcontentsline@{file@}@{sec_unit@}@{entry@}}

The @code{\addcontentsline} command adds an entry to the specified list
or table where...

@itemize @bullet
@item
@code{file} is the extension of the file on which information is to be
written: @code{toc} (table of contents), @code{lof} (list of figures),
or @code{lot} (list of tables).
@item
@code{sec_unit} controls the formatting of the entry.  It should be one
of the following, depending upon the value of the file argument:
@enumerate
@item
@code{toc} - the name of the sectional unit, such as part or subsection.
@item
@code{lof} - figure
@item
@code{lot} - table
@end enumerate
@item
@code{entry} is the text of the entry.
@end itemize

@xref{Table of Contents, , , latex}.


@comment ********************
@comment ** \addtocontents **
@comment ********************

@comment LEVEL3 - commands
@node    \addtocontents,  \addtocounter,  \addcontentsline, List of Commands
@comment node-name,       next,           previous,          up
@subsection \addtocontents

@code{\addtocontents@{file@}@{text@}}

The @code{\addtocontents} command adds text (or formatting commands)
directly to the file that generates the table of contents or list of
figures or tables.

@itemize @bullet
@item
@code{file} is the extension of the file on which information is to be
written: @code{toc} (table of contents), @code{lof} (list of figures),
or @code{lot} (list of tables).
@item
@code{text} is the information to be written.
@end itemize

@xref{Table of Contents, , , latex}.


@comment *******************
@comment ** \addtocounter **
@comment *******************

@comment LEVEL3 - commands
@node    \addtocounter, \address, \addtocontents, List of Commands
@comment node-name,     next,     previous,       up
@subsection \addtocounter

@code{\addtocounter@{counter@}@{value@}}

The @code{\addtocounter} command increments the counter by the amount
specified by the @code{value} argument.  The @code{value} argument can
be negative.

@xref{Counters, , , latex}.


@comment **************
@comment ** \address **
@comment **************

@comment LEVEL3 - commands
@node    \address,  \addtolength, \addtocounter, List of Commands
@comment node-name, next,         previous,      up
@subsection \address

@code{\address@{Return address@}}

The return address, as it should appear on the letter and the envelope.
Separate lines of the address should be separated by @code{\\} commands.
If you do not make an @code{\address} declaration, then the letter will
be formatted for copying onto your organisation's standard letterhead.
If you give an @code{\address} declaration, then the letter will be
formatted as a personal letter.

@xref{Letters, , , latex}.

@xref{Declarations, , , latex}.


@comment ******************
@comment ** \addtolength **
@comment ******************

@comment LEVEL3 - commands
@node    \addtolength, \addvspace, \address, List of Commands
@comment node-name,    next,       previous, up
@subsection \addtolength

@code{\addtolength@{\gnat@}@{length@}}

The @code{\addtolength} command increments a length command by the
amount specified in the @code{length} argument.  It can be a negative
amount.

@xref{Lengths, , , latex}.


@comment ****************
@comment ** \addvspace **
@comment ****************

@comment LEVEL3 - commands
@node    \addvspace, \alph, \addtolength, List of Commands
@comment node-name,  next,  previous,     up
@subsection \addvspace

@code{\addvspace@{length@}}

The @code{\addvspace} command normally adds a vertical space of height
@code{length}.  However, if vertical space has already been added to the
same point in the output by a previous @code{\addvspace} command, then
this command will not add more space than needed to make the natural
length of the total vertical space equal to @code{length}.

@xref{Spaces & Boxes, , , latex}.


@comment ************
@comment ** \alph ***
@comment ************

@comment LEVEL3 - commands
@node    \alph,     \appendix, \addvspace, List of Commands
@comment node-name, next,      previous,   up
@subsection \alph

@code{\alph@{counter@}}

This command causes the value of the @code{counter} to be printed in
alphabetic characters.  The @code{\alph} command causes lower case
alphabetic characters, i.e., a, b, c...  while the @code{\Alph} command
causes upper case alphabetic characters, i.e., A, B, C...

@xref{Counters, , , latex}.


@comment ***************
@comment ** \appendix **
@comment ***************

@comment LEVEL3 - commands
@node    \appendix, \arabic,  \alph,    List of Commands
@comment node-name, next,    previous, up
@subsection \appendix

@code{\appendix}

The @code{\appendix} command changes the way sectional units are
numbered.  The @code{\appendix} command generates no text and does not
affect the numbering or parts.

@xref{Sectioning, , , latex}.


@comment *************
@comment ** \arabic **
@comment *************

@comment LEVEL3 - commands
@node    \arabic,    \array, \appendix, List of Commands
@comment node-name, next,   previous,  up
@subsection \arabic

@code{\arabic@{counter@}}

The @code{\arabic} command causes the value of the @code{counter} to be
printed in arabic numbers, i.e., 3.

@xref{Counters, , , latex}.


@comment *************
@comment ** \array ***
@comment *************

@comment LEVEL3 - commands
@node    \array,    \author, \arabic,   List of Commands
@comment node-name, next,    previous, up
@subsection \array

@example
 \begin@{array@}@{col1col2...coln@}
 column 1 entry & column 2 entry ... & column n entry \\
 .
 .
 .
 \end@{array@}
@end example

Math arrays are produced with the @code{array} environment.  It has a
single mandatory argument describing the number of columns and the
alignment within them.  Each column, @code{coln}, is specified by a
single letter that tells how items in that row should be formatted.

@itemize @bullet
@item
@code{c} for centered
@item
@code{l} for flushleft
@item
@code{r} for flushright
@end itemize

@ifinfo
Column entries must be separated by an @code{&}.  Column entries may
include other LaTeX commands.  Each row of the array must be terminated
with the string @code{\\}.
@end ifinfo

@iftex
Column entries must be separated by an @code{&}.  Column entries may
include other @LaTeX commands.  Each row of the array must be terminated
with the string @code{\\}.
@end iftex

@xref{Environments, , , latex}.


@comment *************
@comment ** \author **
@comment *************

@comment LEVEL3 - commands
@node    \author,   \bf,  \array,   List of Commands
@comment node-name, next, previous, up
@subsection \author

@code{\author@{names@}}

The @code{\author} command declares the author(s), where @code{names} is
a list of authors separated by @code{\and} commands.  Use @code{\\} to
separate lines within a single author's entry -- for example, to give
the author's institution or address.

NOTE: The @code{milstd} and @code{book-form} styles have re-defined the
@code{\maketitle} command.  The @code{\title} declaration is the only
command of those shown below that has any meaning.

@xref{Page Styles, , , latex}.


@comment **********
@comment ** \bf ***
@comment **********

@comment LEVEL3 - commands
@node    \bf,       \bibitem, \author,  List of Commands
@comment node-name, next,     previous, up
@subsection \bf

Boldface typeface.

@xref{Typefaces, , , latex}.

@xref{Styles, , , latex}.


@comment **************
@comment ** \bibitem **
@comment **************

@comment LEVEL3 - commands
@node    \bibitem,  \bigskip, \bf,      List of Commands
@comment node-name, next,     previous, up
@subsection \bibitem

@code{\bibitem[label]@{cite_key@}}

The @code{\bibitem} command generates an entry labelled by @code{label}.
If the @code{label} argument is missing, a number is generated as the
label, using the @code{enumi} counter.  The @code{cite_key} is any
sequence of letters, numbers, and punctuation symbols not containing a
comma.  This command writes an entry on the @file{aux} file containing
@code{cite_key} and the item's @code{label}.  When this @file{aux} file
is read by the @code{\begin@{document@}} command, the item's
@code{label} is associated with @code{cite_key}, causing the reference
to @code{cite_key} by a @code{\cite} command to produce the associated
label.
@refill

@xref{Environments, , , latex}.

@xref{thebibliography, , , latex}.


@comment **************
@comment ** \bigskip **
@comment **************

@comment LEVEL3 - commands
@node    \bigskip,  \cdots, \bibitem, List of Commands
@comment node-name, next,   previous, up
@subsection \bigskip

The @code{\bigskip} command is equivalent to
@code{\vspace@{bigskipamount@}} where @code{bigskipamount} is determined
by the document style.

@xref{Spaces & Boxes, , , latex}.


@comment *************
@comment ** \cdots ***
@comment *************

@comment LEVEL3 - commands
@node    \cdots,    center, \bigskip, List of Commands
@comment node-name, next,   previous, up
@subsection \cdots

The @code{\cdots} command produces a horizontal ellipsis where the dots
are raised to the center of the line.

@xref{Math Formulae, , , latex}.

@xref{Math Miscellany, , , latex}.


@comment *************
@comment ** center ***
@comment *************
@comment LEVEL3 - commands
@node    center,    \centering, \cdots,   List of Commands
@comment node-name, next,       previous, up
@subsection center

@example
 \begin@{center@}
 Text on line 1 \\
 Text on line 2 \\
 .
 .
 .
 \end@{center@}
@end example

The @code{center} environment allows you to create a paragraph
consisting of lines that are centered within the left and right margins
on the current page.  Each line must be terminated with a @code{\\}.

@xref{Environments, , , latex}.


@comment ****************
@comment ** \centering **
@comment ****************

@comment LEVEL3 - commands
@node    \centering, \circle, center,   List of Commands
@comment node-name,  next,    previous, up
@subsection \centering

This declaration corresponds to the @code{center} environment.  This
declaration can be used inside an environment such as @code{quote} or in
a @code{parbox}.  The text of a figure or table can be centered on the
page by putting a @code{\centering} command at the beginning of the
figure or table environment.

@ifinfo
Unlike the @code{center} environment, the @code{\centering} command does
not start a new paragraph; it simply changes how LaTeX formats paragraph
units. To affect a paragraph unit's format, the scope of the declaration
must contain the blank line or @code{\end} command (of an environment
like quote) that ends the paragraph unit.
@end ifinfo

@iftex
Unlike the @code{center} environment, the @code{\centering} command does
not start a new paragraph; it simply changes how LaTeX formats paragraph
units. To affect a paragraph unit's format, the scope of the declaration
must contain the blank line or @code{\end} command (of an environment
like quote) that ends the paragraph unit.
@end iftex

@xref{Environments, , , latex}.

@xref{center, , , latex}.


@comment *************
@comment ** \circle **
@comment *************

@comment LEVEL3 - commands
@node    \circle,   \cite, \centering, List of Commands
@comment node-name, next,  previous,   up
@subsection \circle

@code{\circle[*]@{diameter@}}

@ifinfo
The @code{\circle} command produces a circle of the specified
@code{diameter}.  If the @code{*-form} of the command is used, LaTeX
draws a solid circle.
@end ifinfo

@iftex
The @code{\circle} command produces a circle of the specified
@code{diameter}.  If the @code{*-form} of the command is used, @LaTeX
draws a solid circle.
@end iftex

@xref{Environments, , , latex}.

@xref{picture, , , latex}.


@comment ***********
@comment ** \cite **
@comment ***********

@comment LEVEL3 - commands
@node    \cite,     \cleardoublepage, \circle,  List of Commands
@comment node-name, next,             previous, up
@subsection \cite

@code{\cite[text]@{key_list@}}

The @code{key_list} argument is a list of citation keys.  This command
generates an in-text citation to the references associated with the keys
in @code{key_list} by entries on the @file{aux} file read by the
@code{\begin@{document@}} command.

@xref{Environments, , , latex}.

@xref{thebibliography, , , latex}.


@comment **********************
@comment ** \cleardoublepage **
@comment **********************

@comment LEVEL3 - commands
@node    \cleardoublepage, \clearpage, \cite,    List of Commands
@comment node-name,        next,       previous, up
@subsection \cleardoublepage

The @code{\cleardoublepage} command ends the current page and causes all
figures and tables that have so far appeared in the input to be printed.
In a @code{two-sided} printing style, it also makes the next page a
right-hand (odd-numbered) page, producing a blank page if necessary.

@xref{Line & Page Breaking, , , latex}.


@comment ****************
@comment ** \clearpage **
@comment ****************

@comment LEVEL3 - commands
@node    \clearpage, \cline, \cleardoublepage, List of Commands
@comment node-name,  next,   previous,         up
@subsection \clearpage

The @code{\clearpage} command ends the current page and causes all
figures and tables that have so far appeared in the input to be printed.

@xref{Line & Page Breaking, , , latex}.


@comment *************
@comment ** \cline ***
@comment *************

@comment LEVEL3 - commands
@node    \cline,    \closing, \clearpage, List of Commands
@comment node-name, next,     previous,   up
@subsection \cline

@code{\cline@{i-j@}}

The @code{\cline} command draws horizontal lines across the columns
specified, beginning in column @code{i} and ending in column @code{j},
which are identified in the mandatory argument.

@xref{Environments, , , latex}.

@xref{tabular, , , latex}.


@comment **************
@comment ** \closing **
@comment **************

@comment LEVEL3 - commands
@node    \closing,  \dashbox, \cline,   List of Commands
@comment node-name, next,     previous, up
@subsection \closing

@code{\closing@{text@}}

The letter closes with a @code{\closing} command, i.e.,

@example
 \closing@{Best Regards,@}
@end example

@xref{Letters, , , latex}.


@comment **************
@comment ** \dashbox **
@comment **************

@comment LEVEL3 - commands
@node    \dashbox,  \date, \closing, List of Commands
@comment node-name, next,  previous, up
@subsection \dashbox

@code{\dashbox@{dash length@}(width,height)@{ ... @}}

The @code{\dashbox} has an extra argument which specifies the width of
each dash.  A dashed box looks best when the @code{width} and
@code{height} are multiples of the @code{dash length}.

@xref{Environments, , , latex}.

@xref{picture, , , latex}.


@comment ***********
@comment ** \date **
@comment ***********

@comment LEVEL3 - commands
@node    \date,     \ddots, \dashbox,  List of Commands
@comment node-name, next,    previous, up
@subsection \date

@code{\date@{text@}}

The @code{\date} command declares text to be the document's date.  With
no @code{\date} command, the current date is used.

@xref{Page Styles, , , latex}


@comment *************
@comment ** \ddots ***
@comment *************

@comment LEVEL3 - commands
@node    \ddots,    description, \date,    List of Commands
@comment node-name, next,        previous, up
@subsection \ddots

The @code{\ddots} command produces a diagonal ellipsis.

@xref{Math Formulae, , , latex}.

@xref{Math Miscellany, , , latex}.


@comment ****************
@comment ** description *
@comment ****************

@comment LEVEL3 - commands
@node    description, \dotfill, \ddots,   List of Commands
@comment node-name,   next,     previous, up
@subsection description

@example
 \begin@{description@}
 \item [label] First item
 \item [label] Second item
 .
 .
 .
 \end@{description@}
@end example

The @code{description} environment is used to make labelled lists.  The
label is bold face and flushed right.

@xref{Environments, , , latex}.


@comment **************
@comment ** \dotfill **
@comment **************

@comment LEVEL3 - commands
@node    \dotfill,  \em,  description, List of Commands
@comment node-name, next, previous,    up
@subsection \dotfill

The @code{\dotfill}  command  produces  a rubber  length  that produces  dots
instead of just spaces.

@xref{Spaces & Boxes, , , latex}.


@comment **********
@comment ** \em ***
@comment **********

@comment LEVEL3 - commands
@node    \em,       enumerate, \dotfill, List of Commands
@comment node-name, next,      previous, up
@subsection \em

Emphasis (toggles between @code{\it} and @code{\rm}).

@xref{Typefaces, , , latex}.

@xref{Styles, , , latex}.


@comment ***************
@comment ** enumerate **
@comment ***************

@comment LEVEL3 - commands
@node    enumerate, eqnarray, \em,      List of Commands
@comment node-name, next,     previous, up
@subsection enumerate

@example
 \begin@{enumerate@}
 \item First item
 \item Second item
 .
 .
 .
 \end@{enumerate@}
@end example

The @code{enumerate} environment produces a numbered list.  Enumerations  can
be nested within one another,  up to four levels deep.   They can also
be nested within other paragraph-making environments.

Each item of an enumerated list begins with an @code{\item} command.
There must be at least one @code{\item} command within the environment.

@xref{Environments, , , latex}.


@comment **************
@comment ** eqnarray **
@comment **************

@comment LEVEL3 - commands
@node    eqnarray,  equation, enumerate, List of Commands
@comment node-name, next,     previous,  up
@subsection eqnarray

@example
 \begin@{eqnarray@}
 math formula 1 \\
 math formula 2 \\
 .
 .
 .
 \end@{eqnarray@}
@end example

The @code{eqnarray} environment is used to display a sequence of
equations or inequalities.  It is very much like a three-column
@code{array} environment, with consecutive rows separated by @code{\\}
and consecutive items within a row separated by an @code{&}.  An
equation number is placed on every line unless that line has a
@code{\nonumber} command.

@xref{Environments, , , latex}.


@comment **************
@comment ** equation **
@comment **************

@comment LEVEL3 - commands
@node    equation,  figure, eqnarray, List of Commands
@comment node-name, next,   previous, up
@subsection equation

@example
 \begin@{equation@}
  math formula
 \end@{equation@}
@end example

The @code{equation} environment centers your equation on the page and
places the equation number in the right margin.

@xref{Environments, , , latex}.


@comment *************
@comment ** figure ***
@comment *************

@comment LEVEL3 - commands
@node    figure,    \fbox, equation, List of Commands
@comment node-name, next,  previous, up
@subsection figure

@example
 \begin@{figure@}[placement]

  body of the figure

 \caption@{figure title@}
 \end@{figure@}
@end example

Figures  are objects  that are not part  of the normal  text,  and are
usually  "floated"  to a convenient  place,  like  the top  of a page.
Figures will not be split between two pages.

@ifinfo
The optional argument @code{[placement]} determines where LaTeX will try
to place your figure.  There are four places where LaTeX can possibly
put a float:
@end ifinfo

@iftex
The optional argument @code{[placement]} determines where @LaTeX will try
to place your figure.  There are four places where @LaTeX can possibly
put a float:
@end iftex

@enumerate
@item
@code{h}: Here - at the position in the text where the figure
environment appears.
@item
@code{t}: Top - at the top of a text page.
@item
@code{b}: Bottom - at the bottom of a text page.
@item
@code{p}: Page of floats - on a separate float page, which is a page
containing no text, only floats.
@end enumerate

The standard @code{report} and @code{article} styles use the default placement @code{tbp}.


@ifinfo
The body of the figure is made up of whatever text, LaTeX commands,
etc., you wish.  The @code{\caption} command allows you to title your
figure.
@end ifinfo

@iftex
The body of the figure is made up of whatever text, @LaTeX commands,
etc., you wish.  The @code{\caption} command allows you to title your
figure.
@end iftex

@xref{Environments, , , latex}.


@comment ************
@comment ** \fbox ***
@comment ************

@comment LEVEL3 - commands
@node    \fbox,     \flushbottom, figure,   List of Commands
@comment node-name, next,         previous, up
@subsection \fbox

@code{\fbox@{text@}}

The @code{\fbox} command is exactly the same as the @code{\mbox}
command, except that it puts a frame around the outside of the box that
it creates.

@xref{Spaces & Boxes, , , latex}.


@comment ******************
@comment ** \flushbottom **
@comment ******************

@comment LEVEL3 - commands
@node    \flushbottom, flushleft, \fbox,    List of Commands
@comment node-name,    next,      previous, up
@subsection \flushbottom

The @code{\flushbottom}  declaration  makes  all text pages  the same height,
adding extra vertical space when necessary to fill out the page.

@xref{Document Styles, , , latex}.


@comment ***************
@comment ** flushleft **
@comment ****************

@comment LEVEL3 - commands
@node    flushleft, flushright, \flushbottom, List of Commands
@comment node-name, next,       previous,     up
@subsection flushleft

@example
 \begin@{flushleft@}
 Text on line 1 \\
 Text on line 2 \\
 .
 .
 .
 \end@{flushleft@}
@end example

The @code{flushleft} environment  allows you to create a paragraph consisting
of lines  that are flushed  left to the left-hand  margin.   Each line
must be terminated with a @code{\\}.

@xref{Environments, , , latex}.


@comment ****************
@comment ** flushright **
@comment ****************

@comment LEVEL3 - commands
@node    flushright, \fnsymbol, flushleft, List of Commands
@comment node-name,  next,      previous,  up
@subsection flushright

@example
 \begin@{flushright@}
 Text on line 1 \\
 Text on line 2 \\
 .
 .
 .
 \end@{flushright@}
@end example

The @code{flushright} environment allows you to create a paragraph consisting
of lines that are flushed  right to the right-hand  margin.  Each line
must be terminated with a @code{\\}.

@xref{Environments, , , latex}.


@comment ***************
@comment ** \fnsymbol **
@comment ***************

@comment LEVEL3 - commands
@node    \fnsymbol, \footnote, flushright, List of Commands
@comment node-name, next,      previous,   up
@subsection \fnsymbol

@code{\fnsymbol@{counter@}}

The @code{\fnsymbol} command causes the value of the @code{counter} to be printed in
a specific  sequence  of nine symbols  that can be used  for numbering
footnotes.

@xref{Counters, , , latex}.


@comment ***************
@comment ** \footnote **
@comment ***************

@comment LEVEL3 - commands
@node    \footnote, \footnotemark, \fnsymbol, List of Commands
@comment node-name, next,          previous,  up
@subsection \footnote

@code{\footnote[number]@{text@}}

The @code{\footnote} command places the numbered footnote text at the
bottom of the current page.  The optional argument, @code{number}, is
used to change the default footnote number.  This command can only be
used in outer paragraph mode.

@xref{Footnotes, , , latex}.


@comment *******************
@comment ** \footnotemark **
@comment *******************

@comment LEVEL3 - commands
@node    \footnotemark, \footnotesize, \footnote, List of Commands
@comment node-name,     next,          previous,  up
@subsection \footnotemark

The @code{\footnotemark}  command puts the footnote number in the text.  This
command can be used in inner paragraph mode.  The text of the footnote
is supplied by the @code{\footnotetext} command.

@xref{Footnotes, , , latex}.


@comment *******************
@comment ** \footnotesize **
@comment *******************

@comment LEVEL3 - commands
@node    \footnotesize, \footnotetext, \footnotemark, List of Commands
@comment node-name,     next,          previous,      up
@subsection \footnotesize

Third smallest of 10 typefaces available.  This is the default size for
footnotes.

@xref{Typefaces, , , latex}.

@xref{Sizes, , , latex}.


@comment *******************
@comment ** \footnotetext **
@comment *******************

@comment LEVEL3 - commands
@node    \footnotetext, \frac, \footnotesize, List of Commands
@comment node-name,     next,  previous,      up
@subsection \footnotetext

@code{\footnotetext [number] @{text@}}

The @code{\footnotetext} command produces the text to be placed at the
bottom of the page.  This command can come anywhere after the
@code{\footnotemark} command.  The @code{\footnotetext} command must
appear in outer paragraph mode.

The optional argument, @code{number}, is used to change the default
footnote number.

@xref{Footnotes, , , latex}.


@comment ************
@comment ** \frac ***
@comment ************

@comment LEVEL3 - commands
@node    \frac,     \frame, \footnotetext, List of Commands
@comment node-name, next,   previous,      up
@subsection \frac

@code{\frac@{num@}@{den@}}

The @code{\frac} command produces the fraction @code{num} divided by
@code{den}.

@xref{Math Formulae, , , latex}.

@xref{Math Miscellany, , , latex}.


@comment *************
@comment ** \frame ***
@comment *************

@comment LEVEL3 - commands
@node    \frame,    \framebox, \frac,    List of Commands
@comment node-name, next,      previous, up
@subsection \frame

@code{\frame@{ ...  @}}

The @code{\frame} command puts a rectangular frame around the object
specified in the argument.  The reference point is the bottom left
corner of the frame.  No extra space is put between the frame and the
object.

@xref{Environments, , , latex}.

@xref{picture, , , latex}.


@comment ***************
@comment ** \framebox **
@comment ***************

@comment LEVEL3 - commands
@node    \framebox, \hfill, \frame,   List of Commands
@comment node-name, next,   previous, up
@subsection \framebox

@code{\framebox[width][position]@{text@}}

The @code{\framebox} command is exactly the same as the @code{\makebox}
command, except that it puts a frame around the outside of the box that
it creates.

The @code{framebox} command produces a rule of thickness
@code{\fboxrule}, and leaves a space @code{\fboxsep} between the rule
and the contents of the box.

@xref{Spaces & Boxes, , , latex}.

@xref{Environments, , , latex}.

@xref{picture, , , latex}.


@comment *************
@comment ** \hfill ***
@comment *************

@comment LEVEL3 - commands
@node    \hfill,    \hline,  \framebox, List of Commands
@comment node-name, next,    previous,  up
@subsection \hfill

The @code{\hfill} fill command produces a rubber length which can
stretch or shrink horizontally.  It will be filled with spaces.

@xref{Spaces & Boxes, , , latex}.


@comment *************
@comment ** \hline ***
@comment *************

@comment LEVEL3 - commands
@node    \hline,    \hrulefill, \hfill,   List of Commands
@comment node-name, next,       previous, up
@subsection \hline

The @code{\hline} command will draw a horizontal line the width of the
table.  It's most commonly used to draw a line at the top, bottom, and
between the rows of the table.

@xref{Environments, , , latex}.

@xref{tabular, , , latex}.


@comment ****************
@comment ** \hrulefill **
@comment ****************

@comment LEVEL3 - commands
@node    \hrulefill, \hspace, \hline,   List of Commands
@comment node-name,  next,    previous, up
@subsection \hrulefill

The @code{\hrulefill} fill command produces a rubber length which can
stretch or shrink horizontally.  It will be filled with a horizontal
rule.

@xref{Spaces & Boxes, , , latex}.


@comment *************
@comment ** \hspace **
@comment *************

@comment LEVEL3 - commands
@node    \hspace,   \huge, \hrulefill, List of Commands
@comment node-name, next,  previous,   up
@subsection \hspace

@code{\hspace[*]@{length@}}

@ifinfo
The @code{\hspace} command adds horizontal space.  The length of the
space can be expressed in any terms that LaTeX understands, i.e.,
points, inches, etc.  You can add negative as well as positive space
with an @code{\hspace} command.  Adding negative space is like
backspacing.

LaTeX removes horizontal space that comes at the end of a line.  If you
don't want LaTeX to remove this space, include the optional @code{*}
argument.  Then the space is never removed.
@end ifinfo

@iftex
The @code{\hspace} command adds horizontal space.  The length of the
space can be expressed in any terms that @LaTeX understands, i.e.,
points, inches, etc.  You can add negative as well as positive space
with an @code{\hspace} command.  Adding negative space is like
backspacing.

@LaTeX removes horizontal space that comes at the end of a line.  If you
don't want @LaTeX to remove this space, include the optional @code{*}
argument.  Then the space is never removed.
@end iftex

@xref{Spaces & Boxes, , , latex}.


@comment ************
@comment ** \huge ***
@comment ************

@comment LEVEL3 - commands
@node    \huge,     \Huge (capital "h"), \hspace,  List of Commands
@comment node-name, next,                previous, up
@subsection \huge

Second largest of 10 typefaces available.

@xref{Typefaces, , , latex}.

@xref{Sizes, , , latex}.


@comment *************************
@comment ** \Huge (capital "h") **
@comment *************************

@comment LEVEL3 - commands
@node    \Huge (capital "h"), \hyphenation, \huge,    List of Commands
@comment node-name,           next,         previous, up
@subsection \Huge

Largest of 10 typefaces available.  All fonts may not be available in
this size.

@xref{Typefaces, , , latex}.

@xref{Sizes, , , latex}.


@comment ******************
@comment ** \hyphenation **
@comment ******************

@comment LEVEL3 - commands
@node    \hyphenation, \include, \Huge (capital "h"), List of Commands
@comment node-name,    next,     previous,            up
@subsection \hyphenation

@code{\hyphenation@{words@}}

The @code{\hyphenation} command declares allowed hyphenation points,
where @code{words} is a list of words, separated by spaces, in which
each hyphenation point is indicated by a @code{-} character.

@xref{Line & Page Breaking, , , latex}.


@comment **************
@comment ** \include **
@comment **************

@comment LEVEL3 - commands
@node    \include,  \includeonly, \hyphenation, List of Commands
@comment node-name, next,         previous,     up
@subsection \include

@code{\include@{file@}}

The @code{\include}  command  is used  in conjunction  with  the @code{\includeonly}
command for selective  inclusion  of files.  The @code{file} argument  is the
first  name of a file,  denoting  @file{file.tex}.   If @code{file}  is one the file
names in the file list of the @code{\includeonly}  command  or if there is no
@code{\includeonly} command, the @code{\include} command is equivalent to

@code{\clearpage \input@{file@} \clearpage}

except that if the file @file{file.tex} does not exist, then a warning
message rather than an error is produced.  If the file is not in the
file list, the @code{\include} command is equivalent to
@code{\clearpage}.

The @code{\include} command may not appear in the preamble or in a file
read by another @code{\include} command.

@xref{Splitting the Input, , , latex}.


@comment ******************
@comment ** \includeonly **
@comment ******************

@comment LEVEL3 - commands
@node    \includeonly, \indent, \include, List of Commands
@comment node-name,    next,    previous, up
@subsection \includeonly

@code{\includeonly@{file_list@}}

The @code{\includeonly} command controls which files will be read in by
an @code{\include} command.  It can only appear in the preamble.

@xref{Splitting the Input, , , latex}.


@comment *************
@comment ** \indent **
@comment *************

@comment LEVEL3 - commands
@node    \indent,   \input, \includeonly, List of Commands
@comment node-name, next,   previous,     up
@subsection \indent

This produces  a horizontal  space whose width equals the width of the
paragraph indentation.   It is used to add paragraph indentation where
it would otherwise be suppressed.

@xref{Making Paragraphs, , , latex}.


@comment *************
@comment ** \input ***
@comment *************

@comment LEVEL3 - commands
@node    \input,    \it,  \indent,  List of Commands
@comment node-name, next, previous, up
@subsection \input

@code{\input@{file@}}

The @code{\input} command causes the indicated file to be read and
processed, exactly as if its contents had been inserted in the current
file at that point.  The file name may be a complete file name with
extension or just a first name, in which case the file @file{file.tex}
is used.

@xref{Splitting the Input, , , latex}.


@comment **********
@comment ** \it ***
@comment **********

@comment LEVEL3 - commands
@node    \it,       itemize, \input,   List of Commands
@comment node-name, next,    previous, up
@subsection \it

Italics typeface.

@xref{Typefaces, , , latex}.

@xref{Styles, , , latex}.


@comment *************
@comment ** itemize **
@comment *************

@comment LEVEL3 - commands
@node    itemize,   \kill, \it,      List of Commands
@comment node-name, next,  previous, up
@subsection itemize

@example
 \begin@{itemize@}
 \item First item
 \item Second item
 .
 .
 .
 \end@{itemize@}
@end example

The @code{itemize} environment produces a bulleted list.  Itemizations can be
nested within one another,  up to four levels deep.   They can also be
nested within other paragraph-making environments.

Each item of an @code{itemized} list begins with an @code{\item}
command.  There must be at least one @code{\item} command within the
environment.

@xref{Environments, , , latex}.


@comment ************
@comment ** \kill ***
@comment ************

@comment LEVEL3 - commands
@node    \kill,     \label, itemize,  List of Commands
@comment node-name, next,   previous, up
@subsection \kill

The @code{\kill} command allows you to set tab stops without producing
text.  It works just like the @code{\\} except that it throws away the
current line instead of producing output for it.  The effect of any
@code{\=}, @code{\+} or @code{\-} commands in that line remain in
effect.

@xref{Environments, , , latex}.

@xref{tabbing, , , latex}.


@comment *************
@comment ** \label ***
@comment *************

@comment LEVEL3 - commands
@node    \label,    \large, \kill,    List of Commands
@comment node-name, next,   previous, up
@subsection \label

@code{\label@{key@}}

A @code{\label} command appearing in ordinary text assigns to the
@code{key} the number of the current sectional unit; one appearing
inside a numbered environment assigns that number to the @code{key}.

A @code{key} con consist of any sequence  of letters,  digits, or punctuation
characters.  Upper and lowercase letters are different.

@xref{Cross References, , , latex}.


@comment *************
@comment ** \large ***
@comment *************

@comment LEVEL3 - commands
@node    \large,    \Large (capital "l"), \label,   List of Commands
@comment node-name, next,                 previous, up
@subsection \large

Slightly larger than default typeface size.

@xref{Typefaces, , , latex}.

@xref{Sizes, , , latex}.


@comment **************************
@comment ** \Large (capital "l") **
@comment **************************

@comment LEVEL3 - commands
@node    \Large (capital "l"), \LARGE (all caps), \large,   List of Commands
@comment node-name,            next,              previous, up
@subsection \Large

Fourth largest of typefaces available.  Is generally the default for
titles.

@xref{Typefaces, , , latex}.

@xref{Sizes, , , latex}.


@comment ***********************
@comment ** \LARGE (all caps) **
@comment ***********************

@comment LEVEL3 - commands
@node    \LARGE (all caps), \ldots, \Large (capital "l"), List of Commands
@comment node-name,         next,   previous,             up
@subsection \LARGE

Third largest of typefaces available.

@xref{Typefaces, , , latex}.

@xref{Sizes, , , latex}.


@comment *************
@comment ** \ldots ***
@comment *************

@comment LEVEL3 - commands
@node    \ldots,    \line, \LARGE (all caps), List of Commands
@comment node-name, next,  previous,          up
@subsection \ldots

The @code{\ldots} command produces an ellipsis.  This command works in
any mode, not just math mode.

@xref{Math Formulae, , , latex}.

@xref{Math Miscellany, , , latex}.


@comment ************
@comment ** \line ***
@comment ************

@comment LEVEL3 - commands
@node    \line,     \linebreak, \ldots,   List of Commands
@comment node-name, next,       previous, up
@subsection \line

@code{\line(x slope,y slope)@{length@}}

The @code{\line} command draws a line of the specified @code{length} and
@code{slope}.

@xref{Environments, , , latex}.

@xref{picture, , , latex}.


@comment ****************
@comment ** \linebreak **
@comment ****************

@comment LEVEL3 - commands
@node    \linebreak, \linethickness, \line,    List of Commands
@comment node-name,  next,           previous, up
@subsection \linebreak

@code{\linebreak[number]}

@ifinfo
The @code{\linebreak} command tells LaTeX to break the current line at
the point of the command.  With the optional argument, @code{number},
you can convert the @code{\linebreak} command from a demand to a
request.  The number must be a number from 0 to 4.  The higher the
@code{number}, the more insistent the request is.

The @code{\linebreak}  command causes LaTeX to stretch the line so it extends
to the right margin.
@end ifinfo

@iftex
The @code{\linebreak} command tells @LaTeX to break the current line at
the point of the command.  With the optional argument, @code{number},
you can convert the @code{\linebreak} command from a demand to a
request.  The number must be a number from 0 to 4.  The higher the
@code{number}, the more insistent the request is.

The @code{\linebreak}  command causes @LaTeX to stretch the line so it extends
to the right margin.
@end iftex


@xref{Line & Page Breaking, , , latex}.


@comment ********************
@comment ** \linethickness **
@comment ********************

@comment LEVEL3 - commands
@node    \linethickness, list, \linebreak, List of Commands
@comment node-name,      next, previous,   up
@subsection \linethickness

@code{\linethickness@{dimension@}}

Declares the thickness of horizontal and vertical lines in a picture
environment to be @code{dimension}, which must be a positive length.  It
does not affect the thickness of slanted lines and circles, or the
quarter circles drawn by @code{\oval} to form the corners of an oval.

@xref{Environments, , , latex}.

@xref{picture, , , latex}.


@comment **********
@comment ** list **
@comment **********

@comment LEVEL3 - commands
@node    list,      \location, \linethickness, List of Commands
@comment node-name, next,      previous,       up
@subsection list

@example
 \begin@{list@}@{label@}@{spacing@}
 \item First item
 \item Second item
 .
 .
 .
 \end@{list@}
@end example

@ifinfo
The @code{@{label@}} argument specifies how items should be labelled.
This argument is a piece of text that is inserted in a box to form the
label.  This argument can and usually does contain other LaTeX commands.
@end ifinfo

@iftex
The @code{@{label@}} argument specifies how items should be labelled.
This argument is a piece of text that is inserted in a box to form the
label.  This argument can and usually does contain other @LaTeX commands.
@end iftex

The @code{@{spacing@}} argument contains commands to change the spacing
parameters for the list.  This argument will most often be null, i.e.
@code{@{@}}.  This will select all default spacing which should suffice
for most cases.

@xref{Environments, , , latex}.


@comment ***************
@comment ** \location **
@comment ***************

@comment LEVEL3 - commands
@node    \location, \makebox, list,     List of Commands
@comment node-name, next,     previous, up
@subsection \location

@code{\location@{address@}}

This modifies your organisation's standard address.  This only appears
if the @code{firstpage} pagestyle is selected.

@xref{Letters, , , latex}.

@xref{Declarations, , , latex}.


@comment **************
@comment ** \makebox **
@comment **************

@comment LEVEL3 - commands
@node    \makebox,  \maketitle, \location, List of Commands
@comment node-name, next,       previous,  up
@subsection \makebox

@code{\makebox[width][position]@{text@}}

The @code{\makebox} command creates a box to contain the text specified.
The width of the box is specified by the optional @code{width} argument.
The position of the text within the box is determined by the optional
@code{position} argument.

@itemize @bullet
@item 
@code{c} - for centred
@item
@code{l} - for flushleft
@item
@code{r} - for flushright
@end itemize

@xref{Spaces & Boxes, , , latex}.


@code{\makebox(width,height)[position]@{ ... @}}

The @code{\makebox}  command for the picture  environment  is similar  to the
normal  @code{\makebox}  command  except  that you must specify  a @code{width}  and
@code{height} in multiples of @code{\unitlength}.

The optional argument, @code{[position]}, specifies the quadrant that
your text appears in.  You may select up to two of the following:

@itemize @bullet
@item
@code{t} - Moves the item to the top of the rectangle
@item
@code{b} - Moves the item to the bottom
@item
@code{l} - Moves the item to the left
@item
@code{r} - Moves the item to the right
@end itemize

@xref{Environments, , , latex}.

@xref{picture, , , latex}.


@comment ****************
@comment ** \maketitle **
@comment ****************

@comment LEVEL3 - commands
@node    \maketitle, \mark, \makebox, List of Commands
@comment node-name,  next,  previous, up
@subsection \maketitle

@code{\maketitle}

The @code{\maketitle}  command generates  a title on a separate  title page -
except in the @code{article} style, where the title normally  goes at the top
of the first page.  Information  used to produce the title is obtained
using various other commands. 

@xref{Page Styles} for the commands to give the information.


@comment ************
@comment ** \mark ***
@comment ************

@comment LEVEL3 - commands
@node    \mark,     \mbox, \maketitle, List of Commands
@comment node-name, next,  previous,   up
@subsection \mark

@example
 \markboth@{left head@}@{right head@}
 \markright@{right head@}
@end example

@ifinfo
The @code{\markboth} and @code{\markright} commands are used in
conjunction with the page style @code{myheadings} for setting either
both or just the right heading.  In addition to their use with the
@code{myheadings} page style, you can use them to override the normal
headings in the @code{headings} style, since LaTeX uses these same
commands to generate those heads.  You should note that a left-hand
heading is generated by the last @code{\markboth} command before the end
of the page, while a right-hand heading is generated by the first
@code{\markboth} or @code{\markright} that comes on the page if there is
one, otherwise by the last one before the page.
@end ifinfo

@iftex
The @code{\markboth} and @code{\markright} commands are used in
conjunction with the page style @code{myheadings} for setting either
both or just the right heading.  In addition to their use with the
@code{myheadings} page style, you can use them to override the normal
headings in the @code{headings} style, since @LaTeX uses these same
commands to generate those heads.  You should note that a left-hand
heading is generated by the last @code{\markboth} command before the end
of the page, while a right-hand heading is generated by the first
@code{\markboth} or @code{\markright} that comes on the page if there is
one, otherwise by the last one before the page.
@end iftex

@xref{Page Styles, , , latex}.


@comment ************
@comment ** \mbox ***
@comment ************

@comment LEVEL3 - commands
@node    \mbox,     \medskip, \mark,    List of Commands
@comment node-name, next,     previous, up
@subsection \mbox

@code{\mbox@{text@}}

The @code{\mbox} command creates a box just wide enough to hold the text
created by its argument.

@xref{Spaces & Boxes, , , latex}.


@comment **************
@comment ** \medskip **
@comment **************

@comment LEVEL3 - commands
@node    \medskip,  minipage, \mbox,    List of Commands
@comment node-name, next,     previous, up
@subsection \medskip

The @code{\medskip} command is equivalent to
@code{\vspace@{medskipamount@}} where @code{medskipamount} is determined
by the document style.

@xref{Spaces & Boxes, , , latex}.


@comment **************
@comment ** minipage **
@comment **************

@comment LEVEL3 - commands
@node    minipage,  \multicolumn, \medskip, List of Commands
@comment node-name, next,         previous, up
@subsection minipage

@example
 \begin@{minipage@}[position]@{width@}
  text
 \end@{minipage@}
@end example

The @code{minipage}  environment  is similar to a @code{\parbox} command.   It takes
the same optional position argument and mandatory width argument.  You
may use other paragraph-making environments inside a minipage.

Footnotes in a minipage environment are handled in a way that is
particularly useful for putting footnotes in figures or tables.  A
@code{\footnote} or @code{\footnotetext} command puts the footnote at
the bottom of the minipage instead of at the bottom of the page, and it
uses the @code{mpfootnote} counter instead of the ordinary footnote
counter.

NOTE: Don't put one minipage inside another if you are using footnotes;
they may wind up at the bottom of the wrong minipage.

@xref{Environments, , , latex}.


@comment ******************
@comment ** \multicolumn **
@comment ******************

@comment LEVEL3 - commands
@node    \multicolumn, \multiput, minipage, List of Commands
@comment node-name,    next,      previous, up
@subsection \multicolumn

@code{\multicolumn@{cols@}@{pos@}@{text@}}

The @code{\multicolumn} is used to make an entry that spans several
columns.  The first mandatory argument, @code{cols}, specifies the
number of columns to span.  The second mandatory argument, @code{pos},
specifies the formatting of the entry; @code{c} for centered, @code{l}
for flushleft, @code{r} for flushright.  The third mandatory argument,
@code{text}, specifies what text is to make up the entry.

@xref{Environments, , , latex}.

@xref{tabular, , , latex}.


@comment ***************
@comment ** \multiput **
@comment ***************

@comment LEVEL3 - commands
@node    \multiput, \newcommand, \multicolumn, List of Commands
@comment node-name, next,        previous,     up
@subsection \multiput

@code{\multiput(x coord,y coord)(delta x,delta y)@{number of copies@}@{object@}}

The @code{\multiput} command can be used when you are putting the same
object in a regular pattern across a picture.

@xref{Environments, , , latex}.

@xref{picture, , , latex}.


@comment *****************
@comment ** \newcommand **
@comment *****************

@comment LEVEL3 - commands
@node    \newcommand, \newcounter, \multiput, List of Commands
@comment node-name,   next,        previous,  up
@subsection \newcommand

@example
 \newcommand@{cmd@}[args]@{def@}
 \renewcommand@{cmd@}[args]@{def@}
@end example

These commands define (or redefine) a command.

@table @code
@item cmd
A command name beginning with a @code{\}.  For @code{\newcommand} it
must not be already defined and must not begin with @code{\end}; for
@code{\renewcommand} it must already be defined.

@item args
An integer from 1 to 9 denoting the number of arguments of the command
being defined.  The default is for the command to have no arguments.

@item def
The text to be substituted for every occurrence of @code{cmd}; a
parameter of the form @code{#n} in @code{cmd} is replaced by the text of
the nth argument when this substitution takes place.

@end table

@xref{Definitions, , , latex}.


@comment *****************
@comment ** \newcounter **
@comment *****************

@comment LEVEL3 - commands
@node    \newcounter, \newenvironment, \newcommand, List of Commands
@comment node-name,   next,            previous,    up
@subsection \newcounter

@code{\newcounter@{foo@}[counter]}

The @code{\newcounter} command defines a new counter named @code{foo}.
The optional argument @code{[counter]} causes the counter @code{foo} to
be reset whenever the counter named in the optional argument is
incremented.

@xref{Counters, , , latex}.
@xref{Definitions, , , latex}.


@comment *********************
@comment ** \newenvironment **
@comment *********************

@comment LEVEL3 - commands
@node    \newenvironment, \newfont, \newcounter, List of Commands
@comment node-name,       next,     previous,    up
@subsection \newenvironment

@example
 \newenvironment@{nam@}[args]@{begdef@}@{enddef@}
 \renewenvironment@{nam@}[args]@{begdef@}@{enddef@}
@end example

These commands define or redefine an environment.

@table @code
@item nam
The name of the environment.  For @code{\newenvironment} there must be
no currently defined environment by that name, and the command
@code{\nam} must be undefined.  For @code{\renewenvironment} the
environment must already be defined.

@item args
An integer from 1 to 9 denoting the number of arguments of the
newly-defined environment.  The default is no arguments.

@item begdef
The text substituted for every occurrence of @code{\begin@{name@}}; a
parameter of the form @code{#n} in cmd is replaced by the text of the
nth argument when this substitution takes place.

@item enddef
The text substituted for every occurrence of @code{\end@{nam@}}.  It may
not contain any argument parameters.
@end table

@xref{Definitions, , , latex}.


@comment **************
@comment ** \newfont **
@comment **************

@comment LEVEL3 - commands
@node    \newfont,  \newlength, \newenvironment, List of Commands
@comment node-name, next,       previous,        up
@subsection \newfont

@code{\newfont@{cmd@}@{font_name@}}

Defines the command name @code{cmd}, which must not be currently
defined, to be a declaration that selects the font named
@code{font_name} to be the current font.

@xref{Definitions, , , latex}.


@comment ****************
@comment ** \newlength **
@comment ****************

@comment LEVEL3 - commands
@node    \newlength, \newline, \newfont, List of Commands
@comment node-name,  next,     previous, up
@subsection \newlength

@code{\newlength@{\gnat@}}

The @code{\newlength} command defines the mandatory argument,
@code{\gnat}, as a length command with a value of 0in.  An error occurs
if a @code{\gnat} command already exists.

@xref{Lengths, , , latex}.


@comment **************
@comment ** \newline **
@comment **************

@comment LEVEL3 - commands
@node    \newline,  \newpage, \newlength, List of Commands
@comment node-name, next,     previous,   up
@subsection \newline

The @code{\newline} command breaks the line right where it is.  The
@code{\newline} command can be used only in paragraph mode.

@xref{Line & Page Breaking, , , latex}.


@comment **************
@comment ** \newpage **
@comment **************

@comment LEVEL3 - commands
@node    \newpage,  \newsavebox, \newline, List of Commands
@comment node-name, next,        previous, up
@subsection \newpage

The @code{\newpage} command ends the current page.

@xref{Line & Page Breaking, , , latex}.


@comment *****************
@comment ** \newsavebox **
@comment *****************

@comment LEVEL3 - commands
@node    \newsavebox, \newtheorem, \newpage, List of Commands
@comment node-name,   next,        previous, up
@subsection \newsavebox

@code{\newsavebox@{cmd@}}

Declares  @code{cmd},  which  must  be a command  name  that  is not  already
defined, to be a bin for saving boxes.

@xref{Spaces & Boxes, , , latex}.


@comment *****************
@comment ** \newtheorem **
@comment *****************

@comment LEVEL3 - commands
@node    \newtheorem, \nocite, \newsavebox, List of Commands
@comment node-name,   next,    previous,    up
@subsection \newtheorem

@example
 \newtheorem@{env_name@}@{caption@}[within]
 \newtheorem@{env_name@}[numbered_like]@{caption@}
@end example

This command defines a theorem-like environment.

@table @code
@item env_name
The name of the environment -- a string of letters.  Must not be the
name of an existing environment or counter.

@item caption
The text printed at the beginning of the environment, right before the
number.

@item within
The name of an already defined counter, usually of a sectional unit.
Provides a means of resetting the new theorem counter within the
sectional unit.

@item numbered_like
The name of an already defined theorem-like environment.

@end table

The @code{\newtheorem} command may have at most one optional argument.

@xref{Definitions, , , latex}.


@comment *************
@comment ** \nocite **
@comment *************

@comment LEVEL3 - commands
@node    \nocite,   \noindent, \newtheorem, List of Commands
@comment node-name, next,      previous,    up
@subsection \nocite

@code{\nocite@{key_list@}}

The @code{\nocite} command produces no text, but writes @code{key_list},
which is a list of one or more citation keys, on the @file{aux} file.

@xref{Environments, , , latex}.

@xref{thebibliography, , , latex}.


@comment ***************
@comment ** \noindent **
@comment ***************

@comment LEVEL3 - commands
@node    \noindent, \nolinebreak, \nocite,  List of Commands
@comment node-name, next,         previous, up
@subsection \noindent

When  used  at the  beginning  of the  paragraph,  it  suppresses  the
paragraph indentation.   It has no effect when used in the middle of a
paragraph.

@xref{Making Paragraphs, , , latex}.


@comment ******************
@comment ** \nolinebreak **
@comment ******************

@comment LEVEL3 - commands
@node    \nolinebreak, \normalsize, \noindent, List of Commands
@comment node-name,    next,        previous,  up
@subsection \nolinebreak

@code{\nolinebreak[number]}

@ifinfo
The @code{\nolinebreak} command prevents LaTeX from breaking the current
line at the point of the command.  With the optional argument,
@code{number}, you can convert the @code{\nolinebreak} command from a
demand to a request.  The number must be a number from 0 to 4.  The
higher the number, the more insistent the request is.
@end ifinfo

@iftex
The @code{\nolinebreak} command prevents @LaTeX from breaking the current
line at the point of the command.  With the optional argument,
@code{number}, you can convert the @code{\nolinebreak} command from a
demand to a request.  The number must be a number from 0 to 4.  The
higher the number, the more insistent the request is.
@end iftex

@xref{Line & Page Breaking, , , latex}.


@comment *****************
@comment ** \normalsize **
@comment *****************

@comment LEVEL3 - commands
@node    \normalsize, \nopagebreak, \nolinebreak, List of Commands
@comment node-name,   next,         previous,     up
@subsection \normalsize

The size of @code{\normalsize} is defined by as 10pt unless the 11pt or
12pt document style option is used.

@xref{Typefaces, , , latex}.

@xref{Sizes, , , latex}.


@comment ******************
@comment ** \nopagebreak **
@comment ******************

@comment LEVEL3 - commands
@node    \nopagebreak, \onecolumn, \normalsize, List of Commands
@comment node-name,    next,       previous,    up
@subsection \nopagebreak

@code{\nopagebreak[number]}

@ifinfo
The @code{\nopagebreak} command prevents LaTeX form breaking the current
page at the point of the command.  With the optional argument,
@code{number}, you can convert the @code{\nopagebreak} command from a
demand to a request.  The number must be a number from 0 to 4.  The
higher the number, the more insistent the request is.
@end ifinfo

@iftex
The @code{\nopagebreak} command prevents @LaTeX form breaking the current
page at the point of the command.  With the optional argument,
@code{number}, you can convert the @code{\nopagebreak} command from a
demand to a request.  The number must be a number from 0 to 4.  The
higher the number, the more insistent the request is.
@end iftex

@xref{Line & Page Breaking, , , latex}.


@comment ****************
@comment ** \onecolumn **
@comment ****************

@comment LEVEL3 - commands
@node    \onecolumn, \opening, \nopagebreak, List of Commands
@comment node-name,  next,     previous,     up
@subsection \onecolumn

The @code{\onecolumn} declaration starts a new page and produces
single-column output.

@xref{Document Styles}


@comment **************
@comment ** \opening **
@comment **************

@comment LEVEL3 - commands
@node    \opening,  \oval, \onecolumn, List of Commands
@comment node-name, next,  previous,   up
@subsection \opening

@code{\opening@{text@}}

The letter begins with the @code{\opening} command.  The mandatory
argument, @code{text}, is what ever text you wish to start your letter,
i.e.,

@code{\opening@{Dear John,@}}

@xref{Letters, , , latex}.


@comment ************
@comment ** \oval ***
@comment ************

@comment LEVEL3 - commands
@node    \oval,     \overbrace, \opening, List of Commands
@comment node-name, next,       previous, up
@subsection \oval

@code{\oval(width,height)[portion]}

The @code{\oval} command produces a rectangle with rounded corners.  The
optional argument, @code{[portion]}, allows you to select part of the
oval.

@itemize @bullet
@item
@code{t} - Selects the top portion
@item
@code{b} - Selects the bottom portion
@item
@code{r} - Selects the right portion
@item
@code{l} - Selects the left portion
@end itemize

@xref{Environments, , , latex}.

@xref{picture, , , latex}.


@comment ****************
@comment ** \overbrace **
@comment ****************

@comment LEVEL3 - commands
@node    \overbrace, \overline, \oval,    List of Commands
@comment node-name,  next,      previous, up
@subsection \overbrace

@code{\overbrace@{text@}}

The @code{\overbrace} command generates a brace over text.

@xref{Math Formulae, , , latex}.

@xref{Math Miscellany, , , latex}.


@comment ***************
@comment ** \overline **
@comment ***************

@comment LEVEL3 - commands
@node    \overline, \pagebreak, \overbrace, List of Commands
@comment node-name, next,       previous,   up
@subsection \overline

@code{\overline@{text@}}

The @code{\overline} command causes the argument text to be overlined.

@xref{Math Formulae, , , latex}.

@xref{Math Miscellany, , , latex}.


@comment ****************
@comment ** \pagebreak **
@comment ****************

@comment LEVEL3 - commands
@node    \pagebreak, \pagenumbering, \overline, List of Commands
@comment node-name,  next,           previous,  up
@subsection \pagebreak

@code{\pagebreak[number]}

@ifinfo
The @code{\pagebreak} command tells LaTeX to break the current page at
the point of the command.  With the optional argument, @code{number},
you can convert the @code{\pagebreak} command from a demand to a
request.  The number must be a number from 0 to 4.  The higher the
number, the more insistent the request is.
@end ifinfo

@iftex
The @code{\pagebreak} command tells @LaTeX to break the current page at
the point of the command.  With the optional argument, @code{number},
you can convert the @code{\pagebreak} command from a demand to a
request.  The number must be a number from 0 to 4.  The higher the
number, the more insistent the request is.
@end iftex

@xref{Line & Page Breaking, , , latex}.


@comment ********************
@comment ** \pagenumbering **
@comment ********************

@comment LEVEL3 - commands
@node    \pagenumbering, \pageref, \pagebreak, List of Commands
@comment node-name,      next,     previous,   up
@subsection \pagenumbering

@code{\pagenumbering@{num_style@}}

Specifies the style of page numbers.  Possible values of
@code{num_style} are:

@itemize @bullet
@item
@code{arabic} - Arabic numerals
@item
@code{roman} - Lowercase roman numerals
@item
@code{Roman} - Uppercase roman numerals
@item
@code{alph} - Lowercase letters
@item
@code{Alph} - Uppercase letters
@end itemize

@xref{Page Styles, , , latex}.


@comment **************
@comment ** \pageref **
@comment **************

@comment LEVEL3 - commands
@node    \pageref,  \pagestyle, \pagenumbering, List of Commands
@comment node-name, next,       previous,       up
@subsection \pageref

@code{\pageref@{key@}}

The @code{\pageref} command produces the page number of the place in the
text where the corresponding @code{\label} command appears.

@xref{Cross References, , , latex}.


@comment ****************
@comment ** \pagestyle **
@comment ****************

@comment LEVEL3 - commands
@node    \pagestyle, \par, \pageref, List of Commands
@comment node-name,  next, previous, up
@subsection \pagestyle

@code{\pagestyle@{option@}}

The @code{\pagestyle}  command  changes  the style  from the current  page on
throughout the remainder of your document.

The valid options are:
@itemize @bullet
@item
@code{plain} - Just a plain page number.
@item
@code{empty} - Produces empty heads and feet - no page numbers.
@item
@code{headings} - Puts running headings on each page.  The document
style specifies what goes in the headings.
@item
@code{myheadings} - You specify what is to go in the heading with the
@code{\markboth} or the @code{\markright} commands.
@end itemize

@xref{Page Styles, , , latex}.


@comment ***********
@comment ** \par ***
@comment ***********

@comment LEVEL3 - commands
@node    \par,      \parbox, \pagestyle, List of Commands
@comment node-name, next,    previous,   up
@subsection \par

Equivalent  to a blank line; often used to make command or environment
definitions easier to read.

@xref{Making Paragraphs, , , latex}.


@comment *************
@comment ** \parbox **
@comment *************

@comment LEVEL3 - commands
@node    \parbox,   picture, \par,     List of Commands
@comment node-name, next,    previous, up
@subsection \parbox

@code{\parbox[position]@{width@}@{text@}}

A parbox is a box whose contents  are created in paragraph  mode.  The
@code{\parbox} has two mandatory arguments:
@itemize @bullet
@item
@code{width} - specifies the width of the parbox, and
@item
@code{text} - the text that goes inside the parbox.
@end itemize

@ifinfo
LaTeX will position a parbox so its center lines up with the center of
the text line.  An optional first argument, @code{position}, allows you
to line up either the top or bottom line in the parbox.
@end ifinfo

@iftex
@LaTeX will position a parbox so its center lines up with the center of
the text line.  An optional first argument, @code{position}, allows you
to line up either the top or bottom line in the parbox.
@end iftex

A @code{\parbox} command is used for a parbox containing a small piece
of text, with nothing fancy inside.  In particular, you shouldn't use
any of the paragraph-making environments inside a @code{\parbox}
argument.  For larger pieces of text, including ones containing a
paragraph-making environment, you should use a @code{minipage}
environment.

@xref{Spaces & Boxes, , , latex}.


@comment *************
@comment ** picture **
@comment *************

@comment LEVEL3 - commands
@node    picture,   \put, \parbox,  List of Commands
@comment node-name, next, previous, up
@subsection picture

@example
 \begin@{picture@}(width,height)(x offset,y offset)
 .
  picture commands
 .
 \end@{picture@}
@end example

@ifinfo
The @code{picture} environment allows you to create just about any kind
of picture you want containing text, lines, arrows and circles.  You
tell LaTeX where to put things in the picture by specifying their
coordinates.  A coordinate is a number that may have a decimal point and
a minus sign - a number like 5, 2.3 or -3.1416.  A coordinate specifies
a length in multiples of the unit length @code{\unitlength}, so if
@code{\unitlength} has been set to 1cm, then the coordinate 2.54
specifies a length of 2.54 centimeters.  You can change the value of
@code{\unitlength} anywhere you want, using the @code{\setlength}
command, but strange things will happen if you try changing it inside
the picture environment.
@end ifinfo

@iftex
The @code{picture} environment allows you to create just about any kind
of picture you want containing text, lines, arrows and circles.  You
tell @LaTeX where to put things in the picture by specifying their
coordinates.  A coordinate is a number that may have a decimal point and
a minus sign - a number like 5, 2.3 or -3.1416.  A coordinate specifies
a length in multiples of the unit length @code{\unitlength}, so if
@code{\unitlength} has been set to 1cm, then the coordinate 2.54
specifies a length of 2.54 centimeters.  You can change the value of
@code{\unitlength} anywhere you want, using the @code{\setlength}
command, but strange things will happen if you try changing it inside
the picture environment.
@end iftex

A position is a pair of coordinates,  such as (2.4,-5), specifying the
point  with x-coordinate  2.4 and y-coordinate  -5.   Coordinates  are
specified  in the  usual  way  with  respect  to an origin,  which  is
normally  at the lower-left  corner of the picture.   Note that when a
position  appears as an argument,  it is not enclosed  in braces;  the
parentheses serve to delimit the argument.

The picture environment has one mandatory argument, which is a position.
It specifies the size of the picture.  The environment produces a
rectangular box with width and height determined by this argument's
@code{x} and @code{y} coordinates.

The picture environment also has an optional position argument,
following the size argument, that can change the origin.  (Unlike
ordinary optional arguments, this argument is not contained in square
brackets.) The optional argument gives the coordinates of the point at
the lower-left corner of the picture (thereby determining the origin).
For example, if @code{\unitlength} has been set to 1mm, the command
@example
 \begin@{picture@}(100,200)(10,20)
@end example
produces a picture of width 100 millimeters and height 200 millimeters,
whose lower-left corner is the point (10,20) and whose upper-right corner
is therefore the point (110,220).  When you first draw a picture, you
will omit the optional argument, leaving the origin at the lower-left
corner.  If you then want to modify your picture by shifting everything,
you just add the appropriate optional argument.

@ifinfo
The environment's mandatory argument determines the nominal size of the
picture.  This need bear no relation to how large the picture really is;
LaTeX will happily allow you to put things outside the picture, or even
off the page.  The picture's nominal size is used by TeX in determining
how much room to leave for it.
@end ifinfo

@iftex
The environment's mandatory argument determines the nominal size of the
picture.  This need bear no relation to how large the picture really is;
@LaTeX will happily allow you to put things outside the picture, or even
off the page.  The picture's nominal size is used by TeX in determining
how much room to leave for it.
@end iftex

Everything that appears in a picture is drawn by the @code{\put}
command. The command
@example
 \put (11.3,-.3)@{ ... @}
@end example
puts the object specified by "..." in the picture, with its reference
point at coordinates (11.3,-.3).  The reference points for various
objects will be described below.

The @code{\put} command creates an LR box.  You can put anything in the
text argument of the @code{\put} command that you'd put into the
argument of an @code{\mbox} and related commands.  When you do this, the
reference point will be the lower left corner of the box.

@xref{Environments, , , latex}.


@comment ***********
@comment ** \put ***
@comment ***********

@comment LEVEL3 - commands
@node    \put,      quotation, picture,  List of Commands
@comment node-name, next,      previous, up
@subsection \put

@code{\put(x coord,y coord)@{ ... @}}

The @code{\put} command places the item specified by the mandatory
argument at the given coordinates.

@xref{Environments, , , latex}.

@xref{picture, , , latex}.


@comment ***************
@comment ** quotation **
@comment ***************

@comment LEVEL3 - commands
@node    quotation, quote, \put,     List of Commands
@comment node-name, next,  previous, up
@subsection quotation

@example
 \begin@{quotation@}
  text
 \end@{quotation@}
@end example

The margins of the @code{quotation} environment are indented on the left
and the right.  The text is justified at both margins and there is
paragraph indentation.  Leaving a blank line between text produces a new
paragraph.

@xref{Environments, , , latex}.


@comment ***********
@comment ** quote **
@comment ***********

@comment LEVEL3 - commands
@node    quote,     \raggedbottom, quotation, List of Commands
@comment node-name, next,          previous,  up
@subsection quote

@example
 \begin@{quote@}
  text
 \end@{quote@}
@end example

The margins of the @code{quote} environment  are indented on the left and the
right.  The text is justified  at both margins.   Leaving a blank line
between text produces a new paragraph.

@xref{Environments, , , latex}.


@comment *******************
@comment ** \raggedbottom **
@comment *******************

@comment LEVEL3 - commands
@node    \raggedbottom, \raggedleft, quote,    List of Commands
@comment node-name,     next,        previous, up
@subsection \raggedbottom

The @code{\raggedbottom} declaration makes all pages the height of the
text on that page.  No extra vertical space is added.

@xref{Document Styles, , , latex}.


@comment *****************
@comment ** \raggedleft **
@comment *****************

@comment LEVEL3 - commands
@node    \raggedleft, \raggedright, \raggedbottom, List of Commands
@comment node-name,   next,         previous,      up
@subsection \raggedleft

This declaration corresponds to the @code{flushright} environment.  This
declaration can be used inside an environment such as @code{quote} or in
a @code{parbox}.

@ifinfo
Unlike the @code{flushright} environment, the @code{\raggedleft} command
does not start a new paragraph; it simply changes how LaTeX formats
paragraph units.  To affect a paragraph unit's format, the scope of the
declaration must contain the blank line or @code{\end} command (of an
environment like quote) that ends the paragraph unit.
@end ifinfo

@iftex
Unlike the @code{flushright} environment, the @code{\raggedleft} command
does not start a new paragraph; it simply changes how @LaTeX formats
paragraph units.  To affect a paragraph unit's format, the scope of the
declaration must contain the blank line or @code{\end} command (of an
environment like quote) that ends the paragraph unit.
@end iftex

@xref{Environments, , , latex}.

@xref{flushright, , , latex}.


@comment ******************
@comment ** \raggedright **
@comment ******************

@comment LEVEL3 - commands
@node    \raggedright, \raisebox, \raggedleft, List of Commands
@comment node-name,    next,      previous,    up
@subsection \raggedright

This declaration corresponds to the @code{flushleft} environment.  This
declaration can be used inside an environment such as @code{quote} or in
a @code{parbox}.

@ifinfo
Unlike the @code{flushleft} environment, the @code{\raggedright} command
does not start a new paragraph; it simply changes how LaTeX formats
paragraph units.  To affect a paragraph unit's format, the scope of the
declaration must contain the blank line or @code{\end} command (of an
environment like quote) that ends the paragraph unit.
@end ifinfo

@iftex
Unlike the @code{flushleft} environment, the @code{\raggedright} command
does not start a new paragraph; it simply changes how @LaTeX formats
paragraph units.  To affect a paragraph unit's format, the scope of the
declaration must contain the blank line or @code{\end} command (of an
environment like quote) that ends the paragraph unit.
@end iftex

@xref{Environments, , , latex}.

@xref{flushleft, , , latex}.


@comment ***************
@comment ** \raisebox **
@comment ***************

@comment LEVEL3 - commands
@node    \raisebox, \ref, \raggedright, List of Commands
@comment node-name, next, previous,     up
@subsection \raisebox

@code{\raisebox@{distance@}[extend-above][extend-below]@{text@}}

The @code{\raisebox} command is used to raise or lower text.  The first
mandatory argument specifies how high the text is to be raised (or
lowered if it is a negative amount).  The text itself is processed in LR
mode.

@ifinfo
Sometimes it's useful to make LaTeX think something has a different size
than it really does - or a different size than LaTeX would normally
think it has.  The @code{\raisebox} command lets you tell LaTeX how tall
it is.

The first optional argument, @code{extend-above}, makes LaTeX think that
the text extends above the line by the amount specified.  The second
optional argument, @code{extend-below}, makes LaTeX think that the text
extends below the line by the amount specified.
@end ifinfo

@iftex
Sometimes it's useful to make @LaTeX think something has a different size
than it really does - or a different size than @LaTeX would normally
think it has.  The @code{\raisebox} command lets you tell @LaTeX how tall
it is.

The first optional argument, @code{extend-above}, makes @LaTeX think that
the text extends above the line by the amount specified.  The second
optional argument, @code{extend-below}, makes @LaTeX think that the text
extends below the line by the amount specified.
@end iftex

@xref{Spaces & Boxes, , , latex}.


@comment ***********
@comment ** \ref ***
@comment ***********

@comment LEVEL3 - commands
@node    \ref,      \rm,  \raisebox, List of Commands
@comment node-name, next, previous,  up
@subsection \ref

@code{\ref@{key@}}

The @code{\ref} command produces the number of the sectional unit,
equation number, ... of the corresponding @code{\label} command.

@xref{Cross References}.


@comment **********
@comment ** \rm ***
@comment **********

@comment LEVEL3 - commands
@node    \rm,       \roman, \ref,     List of Commands
@comment node-name, next,   previous, up
@subsection \rm

Roman typeface (default).

@xref{Typefaces, , , latex}.

@xref{Styles, , , latex}.


@comment *************
@comment ** \roman ***
@comment *************

@comment LEVEL3 - commands
@node    \roman,    \rule, \rm,      List of Commands
@comment node-name, next,  previous, up
@subsection \roman

@code{\roman@{counter@}}

This command causes the value of the counter to be printed in roman
numerals.  The @code{\roman} command causes lower case roman numerals,
i.e., i, ii, iii..., while the @code{\Roman} command causes upper case
roman numerals, i.e., I, II, III...

@xref{Counters, , , latex}.


@comment ************
@comment ** \rule ***
@comment ************

@comment LEVEL3 - commands
@node    \rule,     \savebox, \roman,   List of Commands
@comment node-name, next,     previous, up
@subsection \rule

@code{\rule[raise-height]@{width@}@{thickness@}}

The @code{\rule} command is used to produce horizontal lines.  The
arguments are defined as follows.
@itemize @bullet
@item
@code{raise-height} - specifies how high to raise the rule (optional)
@item
@code{width} - specifies the length of the rule (mandatory)
@item
@code{thickness} - specifies the thickness of the rule (mandatory)
@end itemize

@xref{Spaces & Boxes, , , latex}.


@comment **************
@comment ** \savebox **
@comment **************

@comment LEVEL3 - commands
@node    \savebox,  \sc,  \rule,    List of Commands
@comment node-name, next, previous, up
@subsection \savebox

@example
 \sbox@{cmd@}[text]
 \savebox@{cmd@}[width][pos]@{text@}
@end example

These commands typeset text in a box just as for @code{\mbox} or
@code{\makebox}.  However, instead of printing the resulting box, they
save it in bin @code{cmd}, which must have been declared with
@code{\newsavebox}.

@xref{Spaces & Boxes, , , latex}.


@comment **********
@comment ** \sc ***
@comment **********

@comment LEVEL3 - commands
@node    \sc,       \scriptsize, \savebox, List of Commands
@comment node-name, next,        previous, up
@subsection \sc

Small caps typeface.

@xref{Typefaces, , , latex}.

@xref{Styles, , , latex}.


@comment *****************
@comment ** \scriptsize **
@comment *****************

@comment LEVEL3 - commands
@node    \scriptsize, \setcounter, \sc,      List of Commands
@comment node-name,   next,        previous, up
@subsection \scriptsize

Second smallest of 10 typefaces available.

@xref{Typefaces, , , latex}.

@xref{Sizes, , , latex}.


@comment *****************
@comment ** \setcounter **
@comment *****************

@comment LEVEL3 - commands
@node    \setcounter, \setlength, \scriptsize, List of Commands
@comment node-name,   next,       previous,    up
@subsection \setcounter

@code{\setcounter@{counter@}@{value@}}

The @code{\setcounter} command sets the value of the counter to that
specified by the @code{value} argument.

@xref{Counters, , , latex}.


@comment ****************
@comment ** \setlength **
@comment ****************

@comment LEVEL3 - commands
@node    \setlength, \settowidth, \setcounter, List of Commands
@comment node-name,  next,        previous,    up
@subsection \setlength

@code{\setlength@{\gnat@}@{length@}}

@ifinfo
The @code{\setlength} command is used to set the value of a length
command.  The @code{length} argument can be expressed in any terms of
length LaTeX understands, i.e., inches (in), millimeters (mm), points
(pt), etc.
@end ifinfo

@iftex
The @code{\setlength} command is used to set the value of a length
command.  The @code{length} argument can be expressed in any terms of
length @LaTeX understands, i.e., inches (in), millimeters (mm), points
(pt), etc.
@end iftex

@xref{Lengths, , , latex}.


@comment *****************
@comment ** \settowidth **
@comment *****************

@comment LEVEL3 - commands
@node    \settowidth, \sf,  \setlength, List of Commands
@comment node-name,   next, previous,   up
@subsection \settowidth

@code{\settowidth@{\gnat@}@{text@}}

The @code{\settowidth} command sets the value of a length command equal
to the width of the @code{text} argument.

@xref{Lengths, , , latex}.


@comment **********
@comment ** \sf ***
@comment **********

@comment LEVEL3 - commands
@node    \sf,       \shortstack, \settowidth, List of Commands
@comment node-name, next,        previous,    up
@subsection \sf

Sans serif typeface.

@xref{Typefaces, , , latex}.

@xref{Styles, , , latex}.


@comment *****************
@comment ** \shortstack **
@comment *****************

@comment LEVEL3 - commands
@node    \shortstack, \signature, \sf,      List of Commands
@comment node-name,   next,       previous, up
@subsection \shortstack

@code{\shortstack[position]@{...  \\ ...  \\ ...@}}

The @code{\shortstack} command produces a stack of objects.  The valid
positions are:
@itemize @bullet
@item
@code{r} - Moves the objects to the right of the stack
@item
@code{l} - Moves the objects to the left of the stack
@item
@code{c} - Moves the objects to the center of the stack (default)
@end itemize

@xref{Environments, , , latex}.

@xref{picture, , , latex}.


@comment ****************
@comment ** \signature **
@comment ****************

@comment LEVEL3 - commands
@node    \signature, \sl,  \shortstack, List of Commands
@comment node-name,  next, previous,    up
@subsection \signature

@code{\signature@{Your name@}}

Your name, as it should appear at the end of the letter underneath the
space for your signature.  Items that should go on separate lines should
be separated by @code{\\} commands.

@xref{Letters, , , latex}.

@xref{Declarations, , , latex}.


@comment **********
@comment ** \sl ***
@comment **********

@comment LEVEL3 - commands
@node    \sl,       \small, \signature, List of Commands
@comment node-name, next,   previous,   up
@subsection \sl

Slanted typeface.

@xref{Typefaces, , , latex}.

@xref{Styles, , , latex}.


@comment *************
@comment ** \small ***
@comment *************

@comment LEVEL3 - commands
@node    \small,    \smallskip, \sl,      List of Commands
@comment node-name, next,       previous, up
@subsection \small

Slightly smaller than default typeface size.

@xref{Typefaces, , , latex}.

@xref{Sizes, , , latex}.


@comment ****************
@comment ** \smallskip **
@comment ****************

@comment LEVEL3 - commands
@node    \smallskip, \sqrt, \small,   List of Commands
@comment node-name,  next,  previous, up
@subsection \smallskip

@code{\smallskip}

The @code{\smallskip} command is equivalent to
@code{\vspace@{smallskipamount@}} where @code{smallskipamount} is
determined by the document style.

@xref{Spaces & Boxes, , , latex}.


@comment ************
@comment ** \sqrt ***
@comment ************

@comment LEVEL3 - commands
@node    \sqrt,     tabbing, \smallskip, List of Commands
@comment node-name, next,    previous,   up
@subsection \sqrt

@code{\sqrt[root]@{arg@}}

The @code{\sqrt} command produces the square root of its argument.  The
optional argument, @code{root}, determines what root to produce, i.e.
the cube root of @code{x+y} would be typed as @code{$\sqrt[3]@{x+y@}$}.

@xref{Math Formulae, , , latex}.

@xref{Math Miscellany, , , latex}.


@comment *************
@comment ** tabbing **
@comment *************

@comment LEVEL3 - commands
@node    tabbing,   table, \sqrt,    List of Commands
@comment node-name, next,  previous, up
@subsection tabbing

@example
 \begin@{tabbing@}
 text \= more text \= still more text \= last text \\
 second row \>  \> more \\
 .
 .
 .
 \end@{tabbing@}
@end example

The @code{tabbing} environment provides a way to align text in columns.
It works by setting tab stops and tabbing to them much the way you do
with an ordinary typewriter.

@xref{Environments, , , latex}.

@xref{tabbing, , , latex}.


@comment ************
@comment ** table ***
@comment ************

@comment LEVEL3 - commands
@node    table,     tabular, tabbing,  List of Commands
@comment node-name, next,    previous, up
@subsection table

@example
 \begin@{table@}[placement]

  body of the table

 \caption@{table title@}
 \end@{table@}
@end example

Tables are objects that are not part of the normal text, and are usually
"floated" to a convenient place, like the top of a page.  Tables will
not be split between two pages.

@ifinfo
The optional argument @code{[placement]} determines where LaTeX will try
to place your table.  There are four places where LaTeX can possibly put
a float:
@end ifinfo

@iftex
The optional argument @code{[placement]} determines where @LaTeX will try
to place your table.  There are four places where @LaTeX can possibly put
a float:
@end iftex

@itemize @bullet
@item
@code{h} : Here - at the position in the text where the table
environment appears.
@item
@code{t} : Top - at the top of a text page.
@item
@code{b} : Bottom - at the bottom of a text page.
@item
@code{p} : Page of floats - on a separate float page, which is a page
containing no text, only floats.
@end itemize

The standard @code{report} and @code{article} styles use the default
placement @code{[tbp]}.

@ifinfo
The body of the table is made up of whatever text, LaTeX commands, etc.,
you wish.  The @code{\caption} command allows you to title your table.
@end ifinfo

@iftex
The body of the table is made up of whatever text, @LaTeX commands, etc.,
you wish.  The @code{\caption} command allows you to title your table.
@end iftex

@xref{Environments, , , latex}.


@comment *************
@comment ** tabular **
@comment *************

@comment LEVEL3 - commands
@node    tabular,   \telephone, table,    List of Commands
@comment node-name, next,       previous, up
@subsection tabular

@example
 \begin@{tabular@}[pos]@{cols@}
 column 1 entry & column 2 entry ... & column n entry \\
 .
 .
 .
 \end@{tabular@}
@end example
or...
@example
 \begin@{tabular*@}@{width@}[pos]@{cols@}
 column 1 entry & column 2 entry ... & column n entry \\
 .
 .
 .
 \end@{tabular*@}
@end example

These environments produce a box consisting of a sequence of rows of
items,aligned vertically in columns.  The mandatory and optional
arguments consist of:

@table @code
@item width
Specifies the width of the @code{tabular*} environment.  There must be
rubber space between columns that can stretch to fill out the specified
width.
@item pos
Specifies the vertical position; default is alignment on the center of
the environment.

@itemize @bullet
@item
@code{t} - align on top row
@item
@code{b} - align on bottom row
@end itemize

@item cols
Specifies the column formatting.  It consists of a sequence of the
following specifiers, corresponding to the sequence of columns and
intercolumn material.

@itemize @bullet

@item
@code{l} - A column of left-aligned items.
@item
@code{r} - A column of right-aligned items.
@item
@code{c} - A column of centred items.
@item
@code{|} - A vertical line the full height and depth of the environment.
@item
@code{@@@{text@}} - This inserts text in every row.  An @@-expression
suppresses the intercolumn space normally inserted between columns; any
desired space between the inserted text and the adjacent items must be
included in text.  An @code{\extracolsep@{wd@}} command in an
@@-expression causes an extra space of width @code{wd} to appear to the
left of all subsequent columns, until countermanded by another
@code{\extracolsep} command.  Unlike ordinary intercolumn space, this
extra space is not suppressed by an @@-expression.  An
@code{\extracolsep} command can be used only in an @@-expression in the
@code{cols} argument.
@item
@code{p@{wd@}} - Produces a column with each item typeset in a parbox of
width @code{wd}, as if it were the argument of a @code{\parbox[t]@{wd@}}
command.  However, a @code{\\} may not appear in the item, except in the
following situations: (i) inside an environment like minipage, array, or
tabular, (ii) inside an explicit @code{\parbox}, or (iii) in the scope
of a @code{\centering}, @code{\raggedright}, or @code{\raggedleft}
declaration.  The latter declarations must appear inside braces or an
environment when used in a p-column element.
@item
@code{*@{num@}@{cols@}} - Equivalent to @code{num} copies of
@code{cols}, where @code{num} is any positive integer and @code{cols} is
any list of column-specifiers, which may contain another@*
@code{*-expression}.

@end itemize

@end table

@xref{Environments, , , latex}.


@comment ****************
@comment ** \telephone **
@comment ****************

@comment LEVEL3 - commands
@node    \telephone, \thanks, tabular,  List of Commands
@comment node-name,  next,    previous, up
@subsection \telephone

@code{\telephone@{number@}}

This is your telephone number.  This only appears if the @code{firstpage}
pagestyle is selected.

@xref{Letters, , , latex}.

@xref{Declarations, , , latex}.


@comment *************
@comment ** \thanks **
@comment *************

@comment LEVEL3 - commands
@node    \thanks,   thebibliography, \telephone, List of Commands
@comment node-name, next,            previous,   up
@subsection \thanks

@code{\thanks@{text@}}

The @code{\thanks} command produces a footnote to the title.

@xref{Page Styles, , , latex}.


@comment *********************
@comment ** thebibliography **
@comment *********************

@comment LEVEL3 - commands
@node    thebibliography, theorem, \thanks,  List of Commands
@comment node-name,       next,    previous, up
@subsection thebibliography

@example
 \begin@{thebibliography@}@{widest-label@}
 \bibitem[label]@{cite_key@}
 .
 .
 .
 \end@{thebibliography@}
@end example

The @code{thebibliography}  environment produces a bibliography  or reference
list.   In  the  @code{article}   style,  this  reference   list  is  labelled
"References"; in the @code{report} style, it is labelled "Bibliography".

@itemize @bullet
@item
@code{widest-label} - Text that, when printed, is approximately as wide
as the widest item label produces by the @code{\bibitem} commands.
@end itemize

@xref{Environments, , , latex, , , latex}.


@comment *************
@comment ** theorem **
@comment *************

@comment LEVEL3 - commands
@node    theorem,   \thispagestyle, thebibliography, List of Commands
@comment node-name, next,           previous,        up
@subsection theorem

@example
 \begin@{theorem@}
  theorem text
 \end@{theorem@}
@end example

The @code{theorem} environment produces "Theorem x" in boldface followed
by your theorem text.

@xref{Environments}


@comment ********************
@comment ** \thispagestyle **
@comment ********************

@comment LEVEL3 - commands
@node    \thispagestyle, \tiny, theorem,  List of Commands
@comment node-name,      next,  previous, up
@subsection \thispagestyle

@code{\thispagestyle@{option@}}

The @code{\thispagestyle} command works in the same manner as the
@code{\pagestyle} command except that it changes the style for the
current page only.

@xref{Page Styles, , , latex}.


@comment ************
@comment ** \tiny ***
@comment ************

@comment LEVEL3 - commands
@node    \tiny,     \title, \thispagestyle, List of Commands
@comment node-name, next,   previous,       up
@subsection \tiny

Smallest of 10 typefaces available.  All fonts may not be available in
this size.

@xref{Typefaces, , , latex}.

@xref{Sizes, , , latex}.


@comment *************
@comment ** \title ***
@comment *************

@comment LEVEL3 - commands
@node    \title,    titlepage, \tiny,    List of Commands
@comment node-name, next,      previous, up
@subsection \title

@code{\title@{text@}}

@ifinfo
The @code{\title} command declares text to be the title.  Use @code{\\}
to tell LaTeX where to start a new line in a long title.
@end ifinfo

@iftex
The @code{\title} command declares text to be the title.  Use @code{\\}
to tell @LaTeX where to start a new line in a long title.
@end iftex

@xref{Page Styles, , , latex}.


@comment ***************
@comment ** titlepage **
@comment ***************

@comment LEVEL3 - commands
@node    titlepage, \tt,  \title,   List of Commands
@comment node-name, next, previous, up
@subsection titlepage

@example
 \begin@{titlepage@}
  text
 \end@{titlepage@}
@end example

The @code{titlepage} environment creates a title page, i.e., a page with
no printed page number or heading.  It also causes the following page to
be numbered page one.  Formatting the title page is left to you.  The
@code{\today} command comes in handy for title pages.

@xref{Environments, , , latex}.


@comment **********
@comment ** \tt ***
@comment **********

@comment LEVEL3 - commands
@node    \tt,       \twocolumn, titlepage, List of Commands
@comment node-name, next,       previous,  up
@subsection \tt

Typewriter typeface.

@xref{Typefaces, , , latex}.

@xref{Styles, , , latex}.


@comment ****************
@comment ** \twocolumn **
@comment ****************

@comment LEVEL3 - commands
@node    \twocolumn, \typeout, \tt,      List of Commands
@comment node-name,  next,     previous, up
@subsection \twocolumn

The @code{\twocolumn} declaration starts a new page and produces
two-column output.

@xref{Document Styles}


@comment *************
@comment ** \typeout *
@comment *************

@comment LEVEL3 - commands
@node    \typeout,  \typein, \twocolumn, List of Commands
@comment node-name, next,    previous,   up
@subsection \typeout

@code{\typeout@{msg@}}

Prints @code{msg} on the terminal and in the @file{log} file.  Commands
in @code{msg} that are defined with @code{\newcommand} or
@code{\renewcommand} are replaced by their definitions before being
printed.

@ifinfo
LaTeX's usual rules for treating multiple spaces as a single space and
ignoring spaces after a command name apply to @code{msg}.  A
@code{\space} command in @code{msg} causes a single space to be printed.
@end ifinfo

@iftex
@LaTeX's usual rules for treating multiple spaces as a single space and
ignoring spaces after a command name apply to @code{msg}.  A
@code{\space} command in @code{msg} causes a single space to be printed.
@end iftex

@xref{Terminal Input/Output, , , latex}.


@comment *************
@comment ** \typein **
@comment *************

@comment LEVEL3 - commands
@node    \typein,   \underbrace, \typeout, List of Commands
@comment node-name, next,        previous, up
@subsection \typein

@code{\typein[cmd]@{msg@}}

@ifinfo
Prints @code{msg} on the terminal and causes LaTeX to stop and wait for
you to type a line of input, ending with return.  If the @code{cmd}
argument is missing, the typed input is processed as if it had been
included in the input file in place of the @code{\typein} command.  If
the @code{cmd} argument is present, it must be a command name.  This
command name is then defined or redefined to be the typed input.
@end ifinfo

@iftex
Prints @code{msg} on the terminal and causes @LaTeX to stop and wait for
you to type a line of input, ending with return.  If the @code{cmd}
argument is missing, the typed input is processed as if it had been
included in the input file in place of the @code{\typein} command.  If
the @code{cmd} argument is present, it must be a command name.  This
command name is then defined or redefined to be the typed input.
@end iftex

@xref{Terminal Input/Output, , , latex}.


@comment *****************
@comment ** \underbrace **
@comment *****************

@comment LEVEL3 - commands
@node    \underbrace, \underline, \typein,  List of Commands
@comment node-name,   next,       previous, up
@subsection \underbrace

@code{\underbrace@{text@}}

The @code{\underbrace} command generates text with a brace underneath.

@xref{Math Formulae, , , latex}.

@xref{Math Miscellany, , , latex}.


@comment ****************
@comment ** \underline **
@comment ****************

@comment LEVEL3 - commands
@node    \underline, \usebox, \underbrace, List of Commands
@comment node-name,  next,    previous,    up
@subsection \underline

@code{\underline@{text@}}

The @code{\underline} command causes the argument text to be underlined.
This command can also be used in paragraph and LR modes.

@xref{Math Formulae, , , latex}.

@xref{Math Miscellany, , , latex}.


@comment *************
@comment ** \usebox **
@comment *************

@comment LEVEL3 - commands
@node    \usebox,   \usecounter, \underline, List of Commands
@comment node-name, next,       previous,    up
@subsection \usebox

@code{\usebox@{cmd@}}

Prints the box most recently saved in bin @code{cmd} by a @code{\savebox} command.

@xref{Spaces & Boxes, , , latex}.


@comment *****************
@comment ** \usecounter **
@comment *****************

@comment LEVEL3 - commands
@node    \usecounter, \value, \usebox,  List of Commands
@comment node-name,   next,   previous, up
@subsection \usecounter

@code{\usecounter@{counter@}}

The @code{\usecounter} command is used in the second argument of the
list environment to allow the counter specified to be used to number the
list items.

@xref{Counters, , , latex}.


@comment *************
@comment ** \value ***
@comment *************

@comment LEVEL3 - commands
@node    \value,    \vdots, \usecounter, List of Commands
@comment node-name, next,   previous,    up
@subsection \value

@code{\value@{counter@}}

@ifinfo
The @code{\value} command produces the value of the counter named in the
mandatory argument.  It can be used where LaTeX expects an integer or
number, such as the second argument of a @code{\setcounter} or
@code{	\addtocounter} command, or in
@end ifinfo

@iftex
The @code{\value} command produces the value of the counter named in the
mandatory argument.  It can be used where @LaTeX expects an integer or
number, such as the second argument of a @code{\setcounter} or
@code{	\addtocounter} command, or in
@end iftex

@example
 \hspace@{\value@{foo@}\parindent@}
@end example

It is useful for doing arithmetic with counters.

@xref{Counters, , , latex}.


@comment *************
@comment ** \vdots ***
@comment *************

@comment LEVEL3 - commands
@node    \vdots,    \vector, \value,   List of Commands
@comment node-name, next,    previous, up
@subsection \vdots

The @code{\vdots} command produces a vertical ellipsis.

@xref{Math Formulae, , , latex}.

@xref{Math Miscellany, , , latex}.


@comment *************
@comment ** \vector **
@comment *************

@comment LEVEL3 - commands
@node    \vector,   \verb, \vdots,   List of Commands
@comment node-name, next,  previous, up
@subsection \vector

@code{\vector(x slope,y slope)@{length@}}

The @code{\vector} command draws a line with an arrow of the specified
length and slope.  The x and y values must lie between -4 and +4,
inclusive.

@xref{Environments, , , latex}.

@xref{picture, , , latex}.


@comment ***********
@comment ** \verb **
@comment ***********

@comment LEVEL3 - commands
@node    \verb,     verbatim, \vector,  List of Commands
@comment node-name, next,     previous, up
@subsection \verb

@example
 \verb char literal_text char
 \verb*char literal_text char
@end example

Typesets @code{literal_text} exactly as typed, including special
characters and spaces, using a typewriter (@code{\tt}) type style.
There may be no space between @code{\verb} or @code{\verb*} and
@code{char} (space is shown here only for clarity).  The @code{*}-form
differs only in that spaces are printed.

@xref{Environments, , , latex}.

@xref{verbatim, , , latex}.


@comment *************
@comment ** verbatim *
@comment *************

@comment LEVEL3 - commands
@node    verbatim,  verse, \verb,    List of Commands
@comment node-name, next,  previous, up
@subsection verbatim

@example
 \begin@{verbatim@}
  text
 \end@{verbatim@}
@end example

@ifinfo
The @code{verbatim} environment is a paragraph-making environment that
gets LaTeX to print exactly what you type in.  It turns LaTeX into a
typewriter with carriage returns and blanks having the same effect that
they would on a typewriter.
@end ifinfo

@iftex
The @code{verbatim} environment is a paragraph-making environment that
gets @LaTeX to print exactly what you type in.  It turns @LaTeX into a
typewriter with carriage returns and blanks having the same effect that
they would on a typewriter.
@end iftex

@xref{Environments, , , latex}.


@comment ************
@comment ** verse ***
@comment ************

@comment LEVEL3 - commands
@node    verse,     \vfill, verbatim, List of Commands
@comment node-name, next,   previous, up
@subsection verse

@example
 \begin@{verse@}
  text
 \end@{verse@}
@end example

The @code{verse} environment is designed for poetry, though you may find
other uses for it.

@xref{Environments, , , latex}.


@comment *************
@comment ** \vfill ***
@comment *************

@comment LEVEL3 - commands
@node    \vfill,    \vline, verse,    List of Commands
@comment node-name, next,   previous, up
@subsection \vfill

The @code{\vfill} fill command produces a rubber length which can
stretch or shrink vertically.

@xref{Spaces & Boxes, , , latex}.


@comment *************
@comment ** \vline ***
@comment *************

@comment LEVEL3 - commands
@node    \vline,    \vspace, \vfill,   List of Commands
@comment node-name, next,    previous, up
@subsection \vline

The @code{\vline} command will draw a vertical line extending the full
height and depth of its row.  An @code{\hfill} command can be used to
move the line to the edge of the column.  It can also be used in an
@@-expression.

@xref{Environments, , , latex}.

@xref{tabular, , , latex}.


@comment *************
@comment ** \vspace **
@comment *************

@comment LEVEL3 - commands
@node    \vspace,   (latex)Parameters, \vline,   List of Commands
@comment node-name, next,              previous, up
@subsection \vspace

@code{\vspace[*]@{length@}}

@ifinfo
The @code{\vspace} command adds vertical space.  The length of the space
can be expressed in any terms that LaTeX understands, i.e., points,
inches, etc.  You can add negative as well as positive space with an
@code{\vspace} command.

LaTeX removes vertical space that comes at the end of a page.  If you
don't want LaTeX to remove this space, include the optional @code{*}
argument.  Then the space is never removed.
@end ifinfo

@iftex
The @code{\vspace} command adds vertical space.  The length of the space
can be expressed in any terms that @LaTeX understands, i.e., points,
inches, etc.  You can add negative as well as positive space with an
@code{\vspace} command.

@LaTeX removes vertical space that comes at the end of a page.  If you
don't want @LaTeX to remove this space, include the optional @code{*}
argument.  Then the space is never removed.
@end iftex


@xref{Spaces & Boxes, , , latex}.




