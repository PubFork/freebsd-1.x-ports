			FreeBSD TeXK README
TABLE OF CONTENTS
-----------------
    1) PACKAGE CONTENTS
    2) VIEWING/PRINTING DOCUMENTATION
    3) MULTIPLE-DEVICE SUPPORT
    4) DISK USAGE - SHARED BINARY DISTRIBUTION
    5) UPGRADING TEXK/ TO TEXK
    6) BUILDING FROM SOURCE
    7) DEFAULT SETUP
    8) TROUBLE SHOOTING
    9) SOURCE SITES
    10) RECONSTRUCTING THIS DISTRIBUTION


1) PACKAGE CONTENTS
-------------------
    This package is derived from Karl Berry's <kb@cs.umb.edu>  Unix TeX. 
    It is HUGE: the shared binary distribution alone uses more than 30 Mbytes.
    
    What there is:
        TeX 3.1415 (C version 6.1) - text formatting and typesetting system
        METAFONT 2.71 - font and logo design language
        fontutils 1.6 - (MakeTeXTFM, gftopk, gftodvi, afmtotfm, pltotf, etc.)
        web2c 6.1 - WEB (Pascal) to C translator
        tangle 4.3 - WEB to Pascal translator
        weave 4.4 - WEB to TeX translator
        kpathsea 1.8 - Karl Berry's path search library
        BibTeX 0.99c - bibliography generator for (La)TeX
        makeindex 2.11 - general-purpose index generator
        etex 2.5 - Karl Berry's expanded TeX
        LaTeX 2.09 - TeX macros to simplify document preparation
        SliTeX 2.09 - LaTeX macros for making slides
        AMSTeX 2.1 - TeX macros from Americal Mathematical Society
        AMSLaTeX 1.1c - TeX macros that combine AMSTeX and LaTeX capabilities
        TeXdraw 1.11 - TeX macros to add graphics capabilities
        dvi2tty/txt 1.0 - LaTeX macros for DVI file to ASCII conversion
        dviljk 1.1 - DVI file to a HP LaserJet [4 | 2P] printer
        dvipsk 5.55b - DVI file to PostScript converter
        xdvik 1.8 - X-based DVI file previewer
        fontname 1.6 - Karl Berry's font name abbreviation scheme
        sauter 1.6 - John Sauter's true size fonts
        tons of fonts, documentation, FAQs, etc.
    
    What there isn't:
        beebe drivers - in general dvips + ghostscript is said to be
    	preferable, but as soon as eps(1) supports kpathsea, we'll add it
        multi-lingual support - too many languages to choose from
        format converters - too many formats
        countless styles - again, too many
        gf/pk fonts - these are built on demand if MakeTeXPK is installed
        detex - doesn't work with flex; use the txt(1) style instead
        psfig - see dvips(1) on including PostScript in a (La)TeX document
        makeinfo, texi2dvi, etc. - these are part of GNU texinfo(1)
        GNU fontutils - see prep.ai.mit.edu: pub/gnu/fontutils-* for these
        ptx - permuted index generator; see prep.ai.mit.edu: pub/gnu/ptx-*
        texindex/texi2dvi - these is part of GNU texinfo(1); see
            prep.ai.mit.edu: ub/gnu/texinfo-*
        
    If this distribution doesn't have what you need, see the files
    `./doc/help/TeX-FAQ-supplement/*' for lists of available styles,
    converters, utilties, etc. and where to get them.  See also the file
    `./doc/tugboat/kwic.dvi' for a bibliography of TeX-related articles.
    Finally, look at e.g., `FILES.byname' (~2MB), available on one of the 
    CTAN hosts:

    250-Welcome to the Comprehensive TeX Archive Network (CTAN).  The
    250-participating hosts in the CTAN and their root CTAN directories
    250-include (alphabetically):
    250-  ftp.dante.de  (Germany)      /tex-archive
    250-  ftp.shsu.edu  (Texas, USA)   /tex-archive
    250-  ftp.tex.ac.uk (England)      /tex-archive
    250-In order to reduce network load, it is recommended that you use
    250-the CTAN host which is located in the closest proximity to your
    250-site.
    
    
2) VIEWING/PRINTING DOCUMENTATION
---------------------------------
    Documentation/tutorials that are not available in manpage format, we
    have tried to collect in the `./doc' directory.  Most of these files
    are in TeX- (or LaTeX- or AMSLaTeX- or texinfo-) format.

    The Makefiles under the `./doc' directory illustrate the various ways
    of generating TeX DeVice Independent (DVI) files, i.e., files with
    the `.dvi' extension.  Assuming that texinfo(1) and ptx(1) are
    installed, all of the documentation DVI files can be generated via:

    	% cd ./doc
    	% make
    
    N.B.:  The TeXbook (METAFONTbook) source contains the following Copyright 
    notice:
    
        This manual is copyright (C) 1984(6) American Mathematical Society.
        All rights are reserved!
	The file is distributed only for people to see its examples of
	TeX input, not for use in the preparation of books like The
	METAFONTbook.  Permission for any other use of this file must be
	obtained in writing from the copyright holder and also from the
	publisher (Addison-Wesley).

    DVI files can be viewed under X using the xdvi(1) command:
    
    	% xdvi -p default_bdpi filename.dvi
    
    where default_bdpi is 300 by default (see DEFAULT SETUP below).
    
    If X is not installed, a TeX document can be viewed on an
    ASCII terminal using the dvi2tty(1) command:
    
    	% dvi2tty filename.dvi
    
    If the document is in LaTeX format, then the text style, `txt.sty',
    can be used to produce results similar to nroff(1).  Using the file
    `./doc/latex-primer/essential.tex' as an example, first change the
    line that reads:

    	\documentstyle[11pt,hndout]{article}
    
    to:
    
    	\documentstyle[txt,11pt,hndout]{article}
    
    `txt' must always be the first style (i.e., before `11pt' and
    `hndout').  Then generate the DVI file as usual (if LaTeX complains
    and prompts `?', hit the `Return' key to tell it to ignore the error).
    Now viewing `essential.dvi' with dvi2tty should give much better
    results.

    N.B.: For printing or viewing with xdvi,  a DVI file should not be
        generated with the txt style.
    
    The dvilj, (dvilj2, dvilj4) command converts DVI files to HP PCL format
    suitable for printing:
    
    	% dvilj filename.dvi
    	% lpr filename.lj
    
    Finally the dvips command converts a DVI file to PostScript format,
    suitable for printing on a PostScript printer, or if ghostscript(1)
    is installed, on virtually any kind of printer.  For example, to print
    to an Epson 180 dpi dot-matrix printer:

    	% dvips -M lqlores -D 180 filename.dvi
    	% gs -sDEVICE=epson -r180 -sOutputFile=filename.epson -dNOPAUSE \
    		filename.ps quit.ps
    	% lpr filename.epson

    
3) MULTIPLE-DEVICE SUPPORT
--------------------------
    To generate a DVI file, TeX only needs the device-independent TeX Font
    Metric files (TFMs) - i.e., the ones with the .tfm extension.  Many
    of these are supplied in the distribution.  The utilities dvips, xdvi
    and dvilj, on the other hand, require device-specific PK font files
    (with the .xxxpk extension), which are built on demand via MakeTeXPK.

    Therefore, it may be necessary to specify the device type and base
    resolution to use, if these differ from the defaults (see DEFAULT
    SETUP below).

    For dvips, the syntax is:
    	
    	% dvips -M device -D bdpi filename.dvi
    
    where `device' is the device type (METAFONT mode), as specified in
    the file `./texmf/mf/modes.mf', and `bdpi' is the base (horizontal)
    resolution of the device.  Alternatively and preferably, you can create 
    separate configuration files for each device.  Then dvips would be 
    invoked as:

	% dvips -P device filename.dvi

    where `config.<device>' is the configuration file to use.

    For xdvi, the syntax is
    
    	% xdvi -mfmode device -p bdpi filename.dvi

    where `device' and `bdip' are as above.

    The dvilj, dvilj2 and dvilj4 parameters are set independent of the
    compile-time default.


4) DISK USAGE - SHARED BINARY DISTRIBUTION
------------------------------------------
    The table below gives a summary breakdown of the disk usage for the
    shared binary distribution of TeXK.  The binary distribution does not
    include any device-dependent GF or PK fonts, which are by used dvips,
    xdvi and dviljx.  So TeXK is certain to grow beyond this.

    Kbytes	Directory
    ------	---------
    31897	/usr/gnu
    8183	/usr/gnu/bin
    173		/usr/gnu/man
    23539	/usr/gnu/lib/texmf
    8118	/usr/gnu/lib/texmf/doc
    6295	/usr/gnu/lib/texmf/fonts
    3537	/usr/gnu/lib/texmf/ini
    3118	/usr/gnu/lib/texmf/tex
    1867	/usr/gnu/lib/texmf/bibtex
    
    
5) UPGRADING TEXK/ TO TEXK
--------------------------
    You can use fonts/inputs from a previous version of TeX with TeXK.
    Just install these manually somewhere under `./texmf/fonts'
    and `./texmf/tex', respectively.   However, before building
    TeXK you should also move your existing TeX binaries out of the way.
    Otherwise, they are likely to interefere with the TeXK configuration
    suite.  In particular, /usr/local/bin/tex and /usr/local/bin/MakeTeXPK
    can cause trouble.

    If you are upgrading from a previous version of FreeBSD TeXK, you want
    to install the new $(texroot)/texmf/fonts/sauter, remove the old
    $(texroot)/texmf/sauter, and rebuild the $(texroot)/texmf/ls-R data
    base before rebuilding.  Remove `./web*/Makefile' to force reconfig-
    uration.  Finally, be sure that the new latex.fmt, amslatex.fmt and
    MakeTeXPK get installed okay.  In particular, MakeTeXPK doesn't get
    installed if one already exists.


6) BUILDING FROM SOURCE
-----------------------
    If the default setup is okay (see below), it is enough to edit the
    top-level file `Makefile.in' - check, e.g., the variables `prefix',
    `default_bdpi', `default_mfmode' and `default_lj'.  Then:

    # su
    # set path=($path /usr/gnu/bin /usr/X386/bin .)
    # make >& m.OUT &
    # make install
    
    If TeX is not built as root, make sure that /usr/gnu/lib/texmf is
    writable.  In particular, the texmf library must be in place, and the
    library file `lfonts.tex' is updated during the build.

    The `triptrap' (torture) tests have been verified under FreeBSD 1.1, so
    there should be no need to run these.

    Caveats:  If you have a previous version of TeX installed, TeXK will
    find it and overwrite it!  If you don't want this, be sure to move
    TeX out of the default path.  If you do want to overwrite an existing
    TeX installation, then you must remove any existing MakeTeXPK before
    attempting to install TeXK.

    
7) DEFAULT SETUP
----------------
    The following table lists the variables in `./Makefile.in' and their
    default values, which may be changed.
    
    ----------------------------------------------------------------------------
    Var		Description			Default
    ============================================================================
    prefix		root directory			/usr/gnu^
    bindir		binary directory		$(prefix)/bin
    texmf_prefix	library directory		$(prefix)/texmf
    texinputdir		macros/inputs directory		$(texmf_prefix)/tex
    fontdir		fonts directory			$(texmf_prefix)/fonts
    default_mfmode	device type (METAFONT mode)	CanonCX (hplaser)^^
    default_bdpi	device resolution (dpi)		300
    default_lj		supported laser jet models	lj lj2 lj4		
    install_sauter	preload true-size fonts		true
    --
    
    ^  Though TeX itself is not distributed under the GNU license, this version 
       leans heavily on the kpathsea library, which is.
    
    ^^ For a list of available device types, see the file
       `./texmf/mf/modes.mf'
    ----------------------------------------------------------------------------
    
    With Karl Berry's path search library, kpathsea, TeX and friends are
    able search an extended directory hierarchy for fonts, inputs, formats,
    etc.  This simplifies multiple device support and allows the library
    directory to be organized in an intelligible way.  For instance, by
    default pk fonts go under $(fontdir)//pk//, or under any `pk' directory
    in $(fontdir); TeX macros go anywhere under the $(texinputdir)
    directory, and so on.  For a complete description of the default
    library hierarchy, see the file `./web*/kpathsea/HIER'.

    One potential problem with organizing files in a hierarchy is that
    some utilities may not work.  In particular, the dvips, xdvi and dvilj
    distributed with TeXK are modified (by Karl Berry) to use kpathsea.
    To change the default hierarchy, see the files
    `./web*/kpathsea/paths.h.in' and `./web*/kpathsea/INSTALL'.  Check
    also the variable `install_fonts' in `./Makefile.in'.

    dvips, xdvi and dvilj automatically invoke METAFONT to generate missing
    fonts (i.e., PK files).  To disable this feature, remove the
    `MakeTeXPK' script from /usr/gnu/bin, or  see the repective manpages
    for command-line switches to temporarily disable this feature.

    The fonts generated by MakeTeXPK are put in the directory
    $(fontdir)/tmp/pk/<device>/, where <device> is the METAFONT mode used
    (e.g., CanonCX).  These should be moved eventually to their proper
    directory, e.g., $(fontdir)/public/cm/pk/CanonCX/, and the ls-R data
    base should be rebuilt, e.g., `ls -R /usr/gnu/lib/texmf
    >/usr/gnu/lib/texmf/ls-R'.  The ls-R data base is not mandatory, but
    helps speed the search for fonts, inputs, etc.

    To allow any user to generate fonts,  the $(fontdir)/tmp directory is
    made world writable upon installation.  This is a potential security
    hole and should changed accordingly.

    The following formats are made by default:

    tex.fmt latex.fmt amstex.fmt amslatex.fmt slitex.fmt texinfo.fmt etex.fmt
    
    Since latex.fmt and amslatex.fmt require incompatible `lfonts.tex'
    files, the Makefile attempts to update lfonts.tex before
    making each.

    By default, the LaTeX and AMSLaTeX formats are built to use John
    Sauter's true-size fonts instead of magnified ones, to change this,
    set the `install_sauter' variable to `false' in ./Makefile.in.  See
    the file `./texmf/fonts/sauter/README' for details.

    
8) TROUBLE SHOOTING
-------------------
   Problem: TeX hangs with a message like:

      ! Font \textbf=cmb10 scaled 1095 not loadable: Metric (TFM) file not 
      found.  \mainmagstep ->1095

   Solution: Quit TeX, build the missing TFM file, and rebuild the ls-R 
   database,  e.g.:
   
	% MakeTeXTFM cmb10
	% su
	% ls -R /usr/gnu/lib/texmf >/usr/gnu/lib/texmf/ls-R

   --
   Problem: Cross-references/indexes/citations are incomplete.

   Solution: Run (AMS/La)TeX twice.  See the `./doc' Makefiles for examples.

   --
   Problem: TeX seems to be split between /usr/local and /usr/gnu.

   Solution: Move any existing TeX binaries out of the default path
       before attempting to build TeXK.  Otherwise, autoconfigure may use
       defaults from the existing installation that are not intended.

   --
   Problem: Xdvi can't seem to build fonts.

   Solution: Specify the device type and resolution on the command
       line, e.g.:

	% xdvi -p 180 -mfmode lqlores file.dvi
   
   --
   Problem: Xdvi doesn't show PostScript figures correctly.

   Solution: Use dvips/ghostscript to preview TeX files that include
       PostScript figures.


9) SOURCE SITES
---------------
    Karl Berry's TeX package is available via anonymous FTP from (among
    other places) ftp.cs.umb.edu as:  pub/tex/{web.tar.gz, web2c.tar.gz,
    lib.tar.gz, src.tar.gz, eplain.tar.gz, fontname.tar.gz, dvipsk.tar.gz,
    dviljk.tar.gz, and xdvik.tar.gz}.

    dummy.tfm, which is used by AMSTeX for syntax checking is available from
    e-math.ams.org under ams/amstex/
    
    dvi2tty is maintained by Ralph Droms.  It is available from
    sol.cs.bucknell.edu (134.82.1.8) as ./droms/txt-dist.tar.  
    
    GNU texinfo and GNU ptx are available from prep.ai.mit.edu as
    pub/gnu/{texinfo.tar.gz,ptx.tar.gz}.  They are not included in this
    package.

10) RECONSTRUCTING THIS DISTRIBUTION
-----------------------------------
    The kpathsea from dvipsk package is used, since this seems to be more
    recent that the one in web2c.  The Makefiles for `makeindex' and
    `dvi2tty' are hacks intended to preserve the modularity of Karl Berry's
    original package.  Other changes are mostly an attempt to consolidate
    documentation and move configuration to a single top-level Makefile.in
    (not including possible changes to `./web*/kpathsea/paths.h.in').

    Do not delete the original configure scripts.  Recent versions of
    autoconf can't process some of the configure.in's without modification.
    Maybe autoconf-1.9 will fix this.

    The following diffs are probably not complete.

--- ./web2c-6.1/web2c/lib/ourpaths.c~	Tue Apr 12 21:58:20 1994
+++ ./web2c-6.1/web2c/lib/ourpaths.c	Tue Apr 12 01:19:59 1994
@@ -2,7 +2,7 @@
 
 #include "config.h"
 
-#include <kpathsea/filefmt.h>
+#include <kpathsea/tex-file.h>
 #include <kpathsea/fontmap.h>
 #include <kpathsea/pathsearch.h>
 
@@ -78,7 +78,7 @@
   /* Look for it.  Don't use the kpse_find_glyph stuff, since we don't
      have the dpi available separately, and anyway we don't care about
      having pktogf run MakeTeXPK, etc.  */
-  found = kpse_path_search (path, name);
+  found = kpse_path_search (path, name, 0);
 
   /* If we didn't find it, and we're looking for a font, maybe it's
      an alias defined in a mapping file.  This duplicates most of
@@ -88,10 +88,10 @@
                  || path_index == PKFILEPATH))
     {
       string *mapped_names;
-      static map_type fontmap = NULL;
+      static hash_table_type fontmap;
       
       /* Fault in the mapping if necessary.  */
-      if (!fontmap)
+      if (fontmap.size == 0)
         fontmap = map_create (path);
       
       /* Now look for our filename in the mapping.  */
@@ -101,7 +101,7 @@
           string mapped_name;
           while ((mapped_name = *mapped_names++) && !found)
             {
-              found = kpse_path_search (path, mapped_name);
+              found = kpse_path_search (path, mapped_name, 0);
             }
         }
     }
--- ./web2c-6.1/web2c/tex/Makefile.in~	Tue Apr 12 21:23:04 1994
+++ ./web2c-6.1/web2c/tex/Makefile.in	Tue Apr 12 22:18:57 1994
@@ -123,6 +123,13 @@
 # 5) and a ``basefont'' file.  (I use basefont).
 # How automatic, huh?  I can hardly wait for LaTeX 3.
 amslatex.fmt: initex
+# Okay, so let's automate steps 1-5:
+	lfontspath=`find $(texinputdir) -name lfonts.tex`; \
+	lfontsdir=`expr "$$lfontspath" : '\(.*\)lfonts.tex'`; \
+	if [ -n "$$lfontspath" -a -f "$$lfontsdir/lfonts.ams" ]; then \
+		rm -f $$lfontspath; \
+		cp $$lfontsdir/lfonts.ams $$lfontspath; \
+	fi
 	$(initex) lplain \\dump
 	mv lplain.fmt amslatex.fmt
 	mv lplain.log amslatex.log
@@ -143,6 +150,14 @@
 	$(initex) inrstex \\dump
 
 latex.fmt: initex
+# In case we are building amslatex (see above), let's make sure that
+# we are using the right lfonts.tex.
+	lfontspath=`find $(texinputdir) -name lfonts.tex`; \
+	lfontsdir=`expr "$$lfontspath" : '\(.*\)lfonts.tex'`; \
+	if [ -n "$$lfontspath" -a -f "$$lfontsdir/lfonts.lat" ]; then \
+		rm -f $$lfontspath; \
+		cp $$lfontsdir/lfonts.lat $$lfontspath; \
+	fi
 	$(initex) lplain \\dump
 	mv lplain.fmt latex.fmt
 	mv lplain.log latex.log
--- ./web2c-6.1/web2c/Makefile.in~	Tue Apr  5 18:31:18 1994
+++ ./web2c-6.1/web2c/Makefile.in	Tue Apr 12 22:12:50 1994
@@ -65,7 +65,8 @@
 # each of these sizes in the order given.  This colon-separated list is
 # overridden by the envvar TEXSIZES, and by a program-specific variable
 # (e.g., XDVISIZES), and perhaps by a config file (e.g., in dvips).
-default_texsizes = 300:600
+default_bdpi = 300
+default_texsizes = @default_texsizes@
 
 # End of installation directory definitions.
 
@@ -74,9 +75,11 @@
 # install-bases' will try to install.  See `README' for a brief
 # description of each of these formats.
 bases = mf.base cmmf.base
-fmts = tex.fmt latex.fmt 
-# slitex.fmt etex.fmt amslatex.fmt amstex.fmt texinfo.fmt inrstex.fmt
-# picplus.fmt
+# Both latex.fmt and amslatex.fmt are correctly built by first replacing
+# lfonts.tex
+fmts = tex.fmt latex.fmt slitex.fmt texinfo.fmt etex.fmt amstex.fmt \
+	amslatex.fmt
+#picplus.fmt inrstex.fmt
 
 # The name of the file that defines your local devices, for use with
 # Metafont.  (Only relevant during `make bases'.)  I urge you to get the
@@ -273,7 +276,8 @@
 .PHONY: bases
 
 fmts: TeX
-	cd tex; $(MAKE) $(makeargs) fmts="$(fmts)" fmts
+	cd tex; $(MAKE) $(makeargs) fmts="$(fmts)" \
+	texinputdir="$(texinputdir)" fmts
 .PHONY: fmts
 
 
--- ./web2c-6.1/xdvik/Makefile.in~	Sun Apr  3 17:12:32 1994
+++ ./web2c-6.1/xdvik/Makefile.in	Mon Apr 11 23:54:14 1994
@@ -72,7 +72,8 @@
 # each of these sizes in the order given.  This colon-separated list is
 # overridden by the envvar TEXSIZES, and by a program-specific variable
 # (e.g., XDVISIZES), and perhaps by a config file (e.g., in dvips).
-default_texsizes = 300:600
+default_bdpi = 300
+default_texsizes = @default_texsizes@
 
 # Full filename of the database file.  It is not an error for this file
 # not to exist.  See the `Filename database' node in the kpathsea
@@ -80,10 +81,16 @@
 db_dir = $(texmf_prefix)
 db_name = ls-R
 
-# End of installation directory definitions.
+# Default MetaFont mode.  See the file `modes.mf' for a full list 
+# of available modes.
+default_mfmode = CanonCX
+
+# Default LaserJet printer.  See the file `dviljk/INSTALL' for available
+# options
+default_lj = LJ4
 
 # See INSTALL for compilation options.
-DEFS = -DBUTTONS $(XDEFS)
+DEFS = -DBUTTONS $(XDEFS) -DMAKETEXPK -DBDPI=$(default_bdpi) -DMFMODE=\"$(default_mfmode)\"
 
 CC = @CC@
 # CFLAGS is used for both compilation and linking.
--- ./web2c-6.1/kpathsea/configure.in~	Wed Apr 13 02:49:57 1994
+++ ./web2c-6.1/kpathsea/configure.in	Wed Apr 13 02:50:11 1994
@@ -1,5 +1,5 @@
 dnl Process this file with autoconf to produce a configure script.
-AC_INIT(kpathsea.texi)
+AC_INIT(paths.h.in)
 
 sinclude(common.ac)
 
--- ./web2c-6.1/dvipsk/config.ps.in~	Tue Apr 12 22:01:10 1994
+++ ./web2c-6.1/dvipsk/config.ps.in	Tue Apr  5 14:34:40 1994
@@ -9,23 +9,23 @@
 m 3500000
 
 % How to print.
-o |lpr
+%o |lpr
 
 % Default resolution.
-D 600
+D @default_bdpi@
 
 % Metafont mode.
-M ljfour
+M @default_mfmode@
 
 % Also look for this list of resolutions.
-R 300 600
+R @default_texsizes@
 
 % Correct printer offset. You can use testpage.tex from the LaTeX
 % distribution to test this. See the dvips manual for more information.
 O 0pt,0pt
 
 % With this resolution and a RISC cpu, better to compress the bitmaps.
-Z
+%Z
 
 % Paper size information.  First definition is the default.
 %
--- ./web2c-6.1/dvipsk/MakeTeXPK.in~	Sun Apr  3 17:29:17 1994
+++ ./web2c-6.1/dvipsk/MakeTeXPK.in	Wed Apr 13 01:59:54 1994
@@ -34,7 +34,7 @@
 : ${MAPFILE=@configdir@/psfonts.map}
 
 # If this directory doesn't exist, the Sauter stuff won't be attempted.
-: ${sauterdir=/usr/local/src/TeX+MF/tex82/utilities/sauter}
+: ${sauterdir=@mtp_destdir@/../sauter}
 
 # Likewise, for the F3 stuff.
 : ${f3dir=/groups/dtrg/typescaler/fonts/f3b}
@@ -55,12 +55,14 @@
   case "$BDPI" in
     85) MODE=sun;;
    118) MODE=lview;;
+   180) MODE=lqlores;;
    300) MODE=CanonCX;;
    600) MODE=ljfour;;
   1270) MODE=LinotypeOneZeroZero;;
-     *) echo "MakeTeXPK doesn't have a guess for $BDPI dpi devices." >&2
-        echo "Put the mode in a config file, or update MakeTeXPK." >&2
-        exit 1
+      *) MODE=@default_mfmode@;;
+#     *) echo "MakeTeXPK doesn't have a guess for $BDPI dpi devices." >&2
+#        echo "Put the mode in a config file, or update MakeTeXPK." >&2
+#        exit 1
   esac
 fi
 
@@ -148,15 +148,14 @@
   # Run Metafont. 
   echo "Running $mf \mode:=$MODE; mag:=$MAG; scrollmode; input $NAME" >&2
   $mf "\mode:=$MODE; mag:=$MAG; scrollmode; input $NAME" </dev/null >&2
-
-  if test -d $sauterdir && test $? -eq 1 && test $mf = cmmf; then
+  if test $? -eq 1 && test -d $sauterdir && test $mf = cmmf; then
     echo "Trying interpolated/extrapolated (Sauter) CM source." >&2
     # Perhaps no such MF source file, and it's CM.  Try Sauter's scripts.
     cd $sauterdir
-    rootfont=`echo $NAME | sed 's/[0-9]*$//'`
-    pointsize=`echo $NAME | sed 's/^\(.*\)\([0-9]*\)$/\1/'`
-    make-mf $rootfont $pointsize
-    $mf "\mode:=$MODE; mag:=$MAG; scrollmode; input mf/$NAME" </dev/null
+    rootfont=`expr "$NAME" : '\([^0-9]*\)'`
+    pointsize=`expr "$NAME" : '[^0-9]*\(.*\)'`
+    make-mf $rootfont $pointsize >&2
+    $mf "\mode:=$MODE; mag:=$MAG; scrollmode; input mf/$NAME" </dev/null >&2
     if test $? -eq 0 && test -r $GFNAME; then
       mv $GFNAME $TEMPDIR
     fi
--- ./web2c-6.1/dvipsk/Makefile.in~	Sun Apr  3 17:29:52 1994
+++ ./web2c-6.1/dvipsk/Makefile.in	Tue Apr 12 23:53:53 1994
@@ -72,7 +72,8 @@
 # each of these sizes in the order given.  This colon-separated list is
 # overridden by the envvar TEXSIZES, and by a program-specific variable
 # (e.g., XDVISIZES), and perhaps by a config file (e.g., in dvips).
-default_texsizes = 300:600
+default_bdpi = 300
+default_texsizes = @default_texsizes@
 
 # Full filename of the database file.  It is not an error for this file
 # not to exist.  See the `Filename database' node in the kpathsea
@@ -80,7 +81,13 @@
 db_dir = $(texmf_prefix)
 db_name = ls-R
 
-# End of installation directory definitions.
+# Default MetaFont mode.  See the file `modes.mf' for a full list 
+# of available modes.
+default_mfmode = CanonCX
+
+# Default LaserJet printer.  See the file `dviljk/INSTALL' for available
+# options
+default_lj = LJ4
 
 # Where MakeTeXPK puts PK files. Making this name include `pk'
 # simplifies the default in kpathsea/paths.h[.in]. By default, MakeTeXPK
@@ -100,7 +107,7 @@
 # subdirectory from the original dvips distribution.  (Maybe dvipsk
 # won't work at all on such systems; if you have info one way or the
 # other, please let kb@cs.umb.edu know.)
-DEFS = -DTPIC
+DEFS = -DTPIC -DDEFRES=$(default_bdpi)
 
 CC = @CC@
 # CFLAGS is used for both compilation and linking.
@@ -170,9 +177,9 @@
 install_macros = epsf.tex epsf.sty rotate.tex rotate.sty \
                  colordvi.tex colordvi.sty blackdvi.sty blackdvi.tex
 
-all: $(programs) $(prologues) dvips.info
+all: $(programs) $(prologues)
 
-$(program): $(objects) $(kpathsea)
+$(program): $(objects) $(kpathsea) config.ps
 	$(CC) $(LDFLAGS) -o $(program) $(objects) $(LOADLIBES)
 
 afm2tfm: afm2tfm.o
@@ -185,9 +192,18 @@
 	rm -f MakeTeXPK
 	sed -e 's,@mtp_destdir@,$(mtp_destdir),' \
 	    -e 's,@configdir@,$(configdir),' \
-	  <$(srcdir)/MakeTeXPK.in >MakeTeXPK
+	    -e 's,@texmf_prefix@,$(texmf_prefix),' \
+	    -e 's,@default_mfmode@,$(default_mfmode),' \
+	  $(srcdir)/MakeTeXPK.in >MakeTeXPK
 	-chmod a+x MakeTeXPK
 
+config.ps: config.ps.in
+	rm -f config.ps
+	sed -e 's,@default_bdpi@,$(default_bdpi),' \
+	    -e 's,@default_mfmode@,$(default_mfmode),' \
+	    -e 's,@default_texsizes@,$(default_texsizes),' \
+	    -e '/^R/s,:, ,g' $(srcdir)/config.ps.in >config.ps
+
 $(kpathsea): $(kpathsea_srcdir)/*.c $(kpathsea_srcdir)/*.h
 	cd $(kpathsea_dir); $(MAKE) $(makeargs)
 
@@ -231,15 +247,17 @@
              >/dev/null 2>&1; then rm -f $(bindir)/MakeTeXPK;		\
         else true; fi
 
-install-data:
-	$(SHELL) $(srcdir)/../mkdirchain $(mandir) $(infodir) $(headerdir) \
-	  $(configdir) $(psmacrodir) $(ps_fontdir) 
 # Info files.
+install-info:
 	if test -r dvips.info; then \
 	  for i in dvips.info*; do $(INSTALL_DATA) $$i $(infodir)/$$i; done; \
 	else cd $(srcdir); \
 	  for i in dvips.info*; do $(INSTALL_DATA) $$i $(infodir)/$$i; done; \
 	fi
+
+install-data:
+	$(SHELL) $(srcdir)/../mkdirchain $(mandir) $(infodir) $(headerdir) \
+	  $(configdir) $(psmacrodir) $(ps_fontdir) 
 # PostScript prologues.
 	for h in $(prologues); do \
 	  $(INSTALL_DATA) $$h $(headerdir)/$$h; done
@@ -381,7 +399,7 @@
 	rm -f *.dvi *.lj
 
 distclean:: clean
-	rm -f Makefile config.status c-auto.h *.pool
+	rm -f Makefile config.status config.ps c-auto.h *.pool
 
 # Although we can remake configure and c-auto.h.in, we don't remove
 # them, since many people may lack Autoconf.  Use configclean for that.
--- ./web2c-6.1/Makefile.in~	Sun Apr  3 17:26:23 1994
+++ ./web2c-6.1/Makefile.in	Wed Apr 13 02:45:48 1994
@@ -1,7 +1,7 @@
 # Top-level Makefile for kpathsea-using programs.
 
 # Package subdirectories, the library, and all subdirectories.
-programs = dviljk dvipsk web2c xdvik
+programs = dvipsk web2c xdvik dviljk dvi2tty makeindex 
 kpathsea_dir = kpathsea
 all_dirs = $(programs) $(kpathsea_dir)
 
@@ -76,7 +76,9 @@
 # each of these sizes in the order given.  This colon-separated list is
 # overridden by the envvar TEXSIZES, and by a program-specific variable
 # (e.g., XDVISIZES), and perhaps by a config file (e.g., in dvips).
-default_texsizes = 300:600
+default_bdpi = 300
+default_texsizes = @default_texsizes@
+
 
 # Full filename of the database file.  It is not an error for this file
 # not to exist.  See the `Filename database' node in the kpathsea
@@ -84,6 +86,14 @@
 db_dir = $(texmf_prefix)
 db_name = ls-R
 
+# Default MetaFont mode.  See the file `./texmf/mf/modes.mf' for a full list 
+# of available modes.
+default_mfmode = CanonCX
+
+# Default LaserJet printer.  See the file `dviljk/INSTALL' for available
+# options
+default_lj = LJ4
+
 # End of installation directory definitions.
 
 SHELL = /bin/sh
@@ -96,6 +106,7 @@
 # system V runs out of arg space.
 CFLAGS = -g $(XCFLAGS)
 
+
 # It's too bad we have to pass all these down, but I see no alternative,
 # if we are to propagate changes at the top level.
 makeargs = $(MFLAGS) CFLAGS='$(CFLAGS)' SHELL='$(SHELL)' \
@@ -114,13 +125,16 @@
   dvips_prefix=$(dvips_prefix) configdir=$(configdir) \
   headerdir=$(headerdir) psmacrodir=$(psmacrodir) \
   default_texsizes='$(default_texsizes)' \
+  default_bdpi=$(default_bdpi) \
+  default_mfmode=$(default_mfmode) \
+  default_lj="$(default_lj)" \
   $(MAKEARGS)
 
 
 default: all
 
 # Make the library before the programs.
-all: do-kpathsea
+all: do-texmf do-kpathsea
 	for d in $(programs); do \
 	  if test -d $$d; then (cd $$d; $(MAKE) $(makeargs) $@); \
 	  else true; fi; done
@@ -131,6 +145,12 @@
 	for d in $(programs); do \
 	  if test -d $$d; then (cd $$d; $(MAKE) $(makeargs) $@); \
 	  else true; fi; done
+	ls -R $(texmf_prefix) >$(db_dir)/$(db_name)
+	if [ -f /etc/crontab ]; then \
+		echo "Adding $(db_name) update to /etc/crontab"; \
+		grep -q '>$(db_dir)/$(db_name)' /etc/crontab || \
+		echo "15	*	*	*	*	root	ls -R $(texmf_prefix) >$(db_dir)/$(db_name)" >>/etc/crontab; \
+	fi
 
 # Do other standard targets everywhere.
 mostlyclean clean distclean realclean extraclean configclean \
@@ -140,7 +160,15 @@
 	  else true; fi; done
 
 distclean realclean::
-	rm -f Makefile config.status
+	rm -f Makefile config.status texmf-stamp
+
+# Unconditionally recopy the texmf directory
+do-texmf:
+	if [ ! -f texmf-stamp -o ! -d $(texmf_prefix) ]; then \
+		./mkdirchain $(texmf_prefix); \
+		cp -R ../texmf/* $(texmf_prefix) && \
+		touch texmf-stamp; \
+	fi
 
 # Unconditionally remake the library, since we don't want to write out
 # the dependencies here.
--- ./web2c-6.1/dviljk/Makefile.in~	Tue Apr  5 14:53:55 1994
+++ ./web2c-6.1/dviljk/Makefile.in	Tue Apr 12 23:34:35 1994
@@ -72,7 +72,8 @@
 # each of these sizes in the order given.  This colon-separated list is
 # overridden by the envvar TEXSIZES, and by a program-specific variable
 # (e.g., XDVISIZES), and perhaps by a config file (e.g., in dvips).
-default_texsizes := 300:600
+default_bdpi = 300
+default_texsizes = @default_texsizes@
 
 # Full filename of the database file.  It is not an error for this file
 # not to exist.  See the `Filename database' node in the kpathsea
@@ -80,10 +81,16 @@
 db_dir = $(texmf_prefix)
 db_name = ls-R
 
-# End of installation directory definitions.
+# Default MetaFont mode.  See the file `modes.mf' for a full list 
+# of available modes.
+default_mfmode = CanonCX
+
+# Default LaserJet printer.  See the file `dviljk/INSTALL' for available
+# options
+default_lj = LJ4
 
 # See INSTALL for compilation options.
-DEFS = -DLJ4 $(XDEFS)
+DEFS = -DMAKETEXPK_BY_DEFAULT -D$(default_lj) $(XDEFS) -DMFMODE=\"$(default_mfmode)\"
 
 CC = @CC@
 # CFLAGS is used for both compilation and linking.
@@ -248,12 +255,12 @@
 	rm -f *.dvi *.lj
 
 distclean:: clean
-	rm -f Makefile config.status c-auto.h *.pool
+	rm -f config.status c-auto.h *.pool
 
 # Although we can remake configure and c-auto.h.in, we don't remove
 # them, since many people may lack Autoconf.  Use configclean for that.
 realclean:: distclean
-	rm -f TAGS *.info*
+	rm -f TAGS *.info* Makefile 
 
 extraclean::
 	rm -f *.aux *.bak *.bbl *.blg *.dvi *.log *.orig *.pl *.rej
--- ./web2c-6.1/dviljk/configure.in~	Tue Apr  5 14:42:51 1994
+++ ./web2c-6.1/dviljk/configure.in	Tue Apr 12 00:15:03 1994
@@ -5,4 +5,18 @@
 
 AC_LONG_64_BITS
 
+# Take bdpi from the `default_bdpi' variable in ./Makefile.in.
+changequote(,)dnl
+bdpi=`sed -n '/^default_bdpi *= *\([0-9]*\).*$/s//\1/p' Makefile.in`
+default_texsizes=$(printf "define m(x,y) {\nreturn (x * (1.2 ^ y))\n}\nprint \
+    ${bdpi},\":\",\
+    m(${bdpi},1),\":\",\
+    m(${bdpi},2),\":\",\
+    m(${bdpi},3),\":\",\
+    m(${bdpi},4),\":\",\
+    m(${bdpi},5),\"\n\"\n" | 
+    bc)
+changequote([,])dnl
+AC_SUBST(default_texsizes)
+
 AC_OUTPUT(Makefile fonts/Makefile)
--- ./web2c-6.1/configure.in~	Mon Apr 11 20:25:16 1994
+++ ./web2c-6.1/configure.in	Wed Apr 13 02:49:27 1994
@@ -12,7 +12,7 @@
 dnl This is an Autoconf script only so -prefix and like will affect the
 dnl top-level Makefile.
 dnl
-AC_INIT(kpathsea/kpathsea.texi)
+AC_INIT(kpathsea/paths.h.in)
 
 dnl If we guessed the prefix in the subdirectories, it might guess
 dnl differently than the prefix here, and that would cause confusion.
@@ -24,6 +24,20 @@
 # Set to `true' (or `false', or whatever) to omit messages.
 verbose=echo
 
+# Take bdpi from the `default_bdpi' variable in ./Makefile.in.
+changequote(,)dnl
+bdpi=`sed -n '/^default_bdpi *= *\([0-9]*\).*$/s//\1/p' Makefile.in`
+default_texsizes=$(printf "define m(x,y) {\nreturn (x * (1.2 ^ y))\n}\nprint \
+    ${bdpi},\":\",\
+    m(${bdpi},1),\":\",\
+    m(${bdpi},2),\":\",\
+    m(${bdpi},3),\":\",\
+    m(${bdpi},4),\":\",\
+    m(${bdpi},5),\"\n\"\n" | 
+    bc)
+changequote([,])dnl
+AC_SUBST(default_texsizes)
+
 # Take the subdir list from the `programs' variable in ./Makefile.in.
 : ${programs="`sed -n -e 's/programs *= *//p' $srcdir/Makefile.in`"}
 if test -z "$programs"; then
@@ -48,8 +62,14 @@
     test -z "$first_program" && first_program=$d
     
     $verbose "Running configure in $d..."
-    test -d $d || mkdir $d # in case srcdir != .
-    (cd $d && $CONFIG_SHELL $srcdir/$backup$d/configure "$@") || exit 1
+#    test -d $d || mkdir $d # in case srcdir != .
+#    (cd $d && $CONFIG_SHELL $srcdir/$backup$d/configure "$@") || exit 1
+    if test "$srcdir" = .; then
+      (cd $d && $CONFIG_SHELL configure "$@")
+    else
+      test -d $d || mkdir $d
+      (cd $d && $CONFIG_SHELL $srcdir/$d/configure "$@")
+    fi
   fi
 done
 
@@ -101,5 +121,7 @@
   (cd kpathsea; $CONFIG_SHELL config.status)
 fi
 rm -f conftest.stat
+
+
 
 AC_OUTPUT(Makefile)

The next set of diffs should be applied after the previous set...

--- ./web2c-6.1/web2c/lib/Makefile.in~	Wed Apr 20 16:11:19 1994
+++ ./web2c-6.1/web2c/lib/Makefile.in	Wed Apr 20 17:23:01 1994
@@ -4,6 +4,18 @@
 srcdir = @srcdir@
 VPATH = @srcdir@
 
+# Generic installation directories.
+prefix = /usr/gnu
+exec_prefix = $(prefix)
+bindir = $(exec_prefix)/bin
+scriptdir = $(bindir)
+
+# Where MakeTeXPK/MakeTeXTFM put PK/TFM files. Making these names include 
+# `pk' and `tfm' simplifies the default in kpathsea/paths.h[.in].
+# By default, MakeTeXPK/MakeTeXTFM appends /<mode> to this.
+mtp_destdir = $(fontdir)/tmp/pk
+mtt_destdir = $(fontdir)/tmp/tfm
+
 # Unlike all other directories, we need @DEFS@ here because we need
 # -DHAVE_CONFIG_H to compile getopt.
 CC = @CC@
@@ -30,7 +42,7 @@
 default: all
 triptrap: all
 
-all: $(lib)
+all: $(lib) MakeTeXTFM
 
 $(lib): $(objs)
 	rm -f $(lib)
@@ -45,7 +57,22 @@
 Makefile: Makefile.in ../config.status
 	cd ..; $(SHELL) config.status
 
+MakeTeXTFM: $(srcdir)/MakeTeXTFM.in
+	rm -f MakeTeXTFM
+	sed -e 's,@mtt_destdir@,$(mtp_destdir),' \
+	    -e 's,@sauterdir@,$(sauterdir),' \
+	    -e 's,@default_mfmode@,$(default_mfmode),' \
+	  $(srcdir)/MakeTeXTFM.in >MakeTeXTFM
+	-chmod a+x MakeTeXTFM
+
 install install-exec install-data:
+uninstall: uninstall-exec uninstall-data
+
+install-exec:
+	$(INSTALL_PROGRAM) MakeTeXTFM $(scriptdir)/MakeTeXTFM
+
+uninstall-exec:
+	rm -f $(bindir)/MakeTeXTFM
 
 $(srcdir)/../lib/c-auto.h.in: $(srcdir)/../lib/c-auto.h.start \
                               $(configure_in) $(autoheader) 
--- ./web2c-6.1/web2c/lib/MakeTeXTFM.in~	Thu Jan 20 11:20:52 1994
+++ ./web2c-6.1/web2c/lib/MakeTeXTFM.in	Wed Apr 20 16:23:30 1994
@@ -3,72 +3,88 @@
 #   This script file makes a new TeX TFM font, because one wasn't
 #   found.  Usage:
 #
-#   MakeTFM name [mode]
+#   MakeTeXTFM name [mode]
 #
 #   `name' is the name of the font, such as `cmr10'.
-#   `mode', if supplied, is the mode to use.
-#
-#   Note that this file must execute Metafont, and place the result 
-#   in the correct location.
-#
-#   Of course, it needs to be set up for your site.
+#   `mode', if supplied, is the METAFONT mode to use.
 #
+# The root of where to put the new file. The Makefile substitutes for this.
+# (Using the sh construct ${var=value} lets an environment variable
+# `var' override the value given here.)
+: ${DESTDIR=${MTT_DESTDIR-@mtt_destdir@}}
+
+# If this directory doesn't exist, the Sauter stuff won't be attempted.
+: ${sauterdir=@sauterdir@}
+
 # TEMPDIR needs to be unique for each process because of the possibility
 # of simultaneous processes running this script.
-##DESTDIR=/LocalLibrary/Fonts/TeXFonts/pk
-##DESTDIR=/usr/local/lib/tex/localfonts
-TEXDIR=/home/estwk1/pnoma/lib/tex
-LOCALDIR=$TEXDIR/fonts
-DESTDIR=$LOCALDIR/tfmtmp
-TEMPDIR=$TMPDIR/mttfm.$$
-NAME=`echo $1 | sed 's/\.tfm$//'`
-MODE=$2
+TEMPDIR=${TMPDIR-/tmp}/mttfm.$$
+NAME=$1
+MODE=${2-@default_mfmode@}
+
+if test -n "$3"; then
+  case "$3" in
+    /*) DESTDIR="$3";;
+     *) DESTDIR="$DESTDIR/$3";;
+  esac
+else
+  DESTDIR=$DESTDIR/$MODE
+fi
 
-umask 0
+TFMNAME=$NAME.'tfm'
 
-if test "$MODE" = ""
-then MODE=nullmode
+# check also in the standard place
+if test -r $DESTDIR/$TFMNAME; then
+   echo "$DESTDIR/$TFMNAME already exists!" >&2
+   exit 0
 fi
 
-TFMNAME=$NAME.$DPI'tfm'
-
 # Clean up on normal or abnormal exit
 trap "cd /; rm -rf $TEMPDIR $DESTDIR/tfmtmp.$$" 0 1 2 15
 
-if test ! -d $DESTDIR
-then
-   mkdir $DESTDIR
-fi
-
-mkdir $TEMPDIR
-cd $TEMPDIR
-
-if test -r $DESTDIR/$TFMNAME
-then
-   echo "$DESTDIR/$TFMNAME already exists!"
-   exit 0
-fi
-
-# check also in the standard place
+test -d $TEMPDIR || mkdir -p $TEMPDIR 
+cd $TEMPDIR || exit 1
 
-if test -r /usr/local/lib/tex/fonts/$TFMNAME
-then
-   echo /usr/local/lib/tex/fonts/$TFMNAME already exists!
-   exit 0
+# Which version of Metafont shall we use?
+case $NAME in
+  cm*) mf=cmmf;;
+    *) mf=mf;;
+esac
+
+# Run Metafont. 
+echo "Running $mf \mode:=$MODE; mag:=1; scrollmode; input $NAME" >&2
+$mf "\mode:=$MODE; mag:=1; scrollmode; input $NAME" </dev/null >&2
+
+if test $? -eq 1 && test -d $sauterdir && test $mf = cmmf; then
+  echo "Trying interpolated/extrapolated (Sauter) CM source." >&2
+  # Perhaps no such MF source file, and it's CM.  Try Sauter's scripts.
+  cd $sauterdir
+  rootfont=`expr "$NAME" : '\([^0-9]*\)'`
+  pointsize=`expr "$NAME" : '[^0-9]*\(.*\)'`
+  make-mf $rootfont $pointsize >&2
+  echo "Running $mf \mode:=$MODE; mag:=1; scrollmode; input mf/$NAME" >&2
+  $mf "\mode:=$MODE; mag:=1; scrollmode; input mf/$NAME" </dev/null >&2
+  if test $? -eq 0 && test -r $TFMNAME; then
+    mv $TFMNAME $TEMPDIR
+  fi
+  rm -f $NAME.log
+  cd $TEMPDIR
 fi
 
-echo mf "\mode:=$MODE; mag:=1; scrollmode; input $NAME" \\\</dev/null
-mf "\mode:=$MODE; mag:=1; scrollmode; input $NAME" </dev/null
-if test ! -r $TFMNAME
-then
-   echo "Metafont failed for some reason on $TFMNAME"
+if test ! -r $TFMNAME; then
+   echo "MakeTeXTFM failed to make $TFMNAME" >&2
    exit 1
 fi
 
-# Install the TFM file carefully, since others may be doing the same
-# as us simultaneously.
+# If we get here, we've succeeded and we're supposed to move the final
+# font to $DESTDIR.
+test -d $DESTDIR \
+  || mkdir -p $DESTDIR \
+  || (echo "${DESTDIR}: MakeTeXTFM could not create directory." >&2; exit 1)
+
+# Install the TFM file carefully, since others may be working simultaneously.
+mv $TFMNAME $DESTDIR/tfmtmp.$$ \
+  || (echo "$0: Could not mv $TFMNAME $DESTDIR/tfmtmp.$$." >&2; exit 1)
 
-chmod 644 $TFMNAME
-mv $TFMNAME $DESTDIR/tfmtmp.$$
-cd $DESTDIR
+cd $DESTDIR || exit 1
 mv tfmtmp.$$ $TFMNAME
--- ./web2c-6.1/web2c/tex/Makefile.in~	Fri Apr 15 16:46:32 1994
+++ ./web2c-6.1/web2c/tex/Makefile.in	Sun Apr 24 21:31:24 1994
@@ -124,11 +124,13 @@
 # How automatic, huh?  I can hardly wait for LaTeX 3.
 amslatex.fmt: initex
 # Okay, so let's automate steps 1-5:
+	lfontsname=lfonts.ams; \
+	{ $(install_sauter) && lfontsname=lfonts.sau; } || true; \
 	lfontspath=`find $(texinputdir) -name lfonts.tex`; \
-	lfontsdir=`expr "$$lfontspath" : '\(.*\)lfonts.tex'`; \
-	if [ -n "$$lfontspath" -a -f "$$lfontsdir/lfonts.ams" ]; then \
+	lfontsdir=`expr "$$lfontspath" : '\(.*\)lfonts.tex$'`; \
+	if test -n "$$lfontspath" && test -f "$$lfontsdir/$$lfontsname"; then \
 		rm -f $$lfontspath; \
-		cp $$lfontsdir/lfonts.ams $$lfontspath; \
+		cp $$lfontsdir/$$lfontsname $$lfontspath; \
 	fi
 	$(initex) lplain \\dump
 	mv lplain.fmt amslatex.fmt
@@ -150,13 +152,14 @@
 	$(initex) inrstex \\dump
 
 latex.fmt: initex
-# In case we are building amslatex (see above), let's make sure that
-# we are using the right lfonts.tex.
+# Which lfonts.tex to use depends on whether we want Sauter's stuff
+	lfontsname=lfonts.lat; \
+	{ $(install_sauter) && lfontsname=lfonts.true; } || true; \
 	lfontspath=`find $(texinputdir) -name lfonts.tex`; \
 	lfontsdir=`expr "$$lfontspath" : '\(.*\)lfonts.tex'`; \
-	if [ -n "$$lfontspath" -a -f "$$lfontsdir/lfonts.lat" ]; then \
+	if test -n "$$lfontspath" && test -f "$$lfontsdir/$$lfontsname"; then \
 		rm -f $$lfontspath; \
-		cp $$lfontsdir/lfonts.lat $$lfontspath; \
+		cp $$lfontsdir/$$lfontsname $$lfontspath; \
 	fi
 	$(initex) lplain \\dump
 	mv lplain.fmt latex.fmt
--- ./web2c-6.1/web2c/Makefile.in~	Wed Apr 20 16:21:20 1994
+++ ./web2c-6.1/web2c/Makefile.in	Wed Apr 20 17:21:30 1994
@@ -68,6 +68,12 @@
 default_bdpi = 300
 default_texsizes = @default_texsizes@
 
+# Where MakeTeXPK/MakeTeXTFM put PK/TFM files. Making these names include 
+# `pk' and `tfm' simplifies the default in kpathsea/paths.h[.in].
+# By default, MakeTeXPK/MakeTeXTFM appends /<mode> to this.
+mtp_destdir = $(fontdir)/tmp/pk
+mtt_destdir = $(fontdir)/tmp/tfm
+
 # End of installation directory definitions.
 
 # These lines define the format and base files that `make fmts' and
@@ -158,6 +164,9 @@
 # What to pass to subdirectories when making various things.
 # $(MAKEARGS) is for the user.
 makeargs=$(MFLAGS) SHELL='$(SHELL)' CC='$(CC)' CFLAGS='$(CFLAGS)'	\
+  prefix=$(prefix) exec_prefix=$(exec_prefix)				\
+  bindir=$(bindir) scriptdir=$(scriptdir)				\
+  mtt_destdir=$(mtt_destdir)						\
   RANLIB='$(RANLIB)' LN='$(LN)' DEFS='$(DEFS)'                          \
   CCLD='$(CCLD)' LDFLAGS='$(LDFLAGS)' LIBS='$(LIBS)' 			\
   x_extra_libs='$(x_extra_libs)' x_include_flags='$(x_include_flags)'	\
--- ./web2c-6.1/dvipsk/MakeTeXPK.in~	Thu Apr 14 23:01:10 1994
+++ ./web2c-6.1/dvipsk/MakeTeXPK.in	Fri Apr 15 23:28:41 1994
@@ -34,7 +34,7 @@
 : ${MAPFILE=@configdir@/psfonts.map}
 
 # If this directory doesn't exist, the Sauter stuff won't be attempted.
-: ${sauterdir=@texmf_prefix@/sauter}
+: ${sauterdir=@sauterdir@}
 
 # Likewise, for the F3 stuff.
 : ${f3dir=/groups/dtrg/typescaler/fonts/f3b}
@@ -78,6 +78,7 @@
 umask 0
 
 GFNAME=$NAME.$DPI'gf'
+TFMNAME=$NAME.'tfm'
 PKNAME=$NAME.$DPI'pk'
 
 # Have we been spuriously called? No harm done, if so.
@@ -148,19 +149,20 @@
   # Run Metafont. 
   echo "Running $mf \mode:=$MODE; mag:=$MAG; scrollmode; input $NAME" >&2
   $mf "\mode:=$MODE; mag:=$MAG; scrollmode; input $NAME" </dev/null >&2
-
-  if test -d $sauterdir && test $? -eq 1 && test $mf = cmmf; then
+  if test $? -eq 1 && test -d $sauterdir && test $mf = cmmf; then
     echo "Trying interpolated/extrapolated (Sauter) CM source." >&2
     # Perhaps no such MF source file, and it's CM.  Try Sauter's scripts.
     cd $sauterdir
-    rootfont=`echo $NAME | sed 's/[0-9]*$//'`
-    pointsize=`echo $NAME | sed 's/^\(.*\)\([0-9]*\)$/\1/'`
-    make-mf $rootfont $pointsize
-    $mf "\mode:=$MODE; mag:=$MAG; scrollmode; input mf/$NAME" </dev/null
+    rootfont=`expr "$NAME" : '\([^0-9]*\)'`
+    pointsize=`expr "$NAME" : '[^0-9]*\(.*\)'`
+    make-mf $rootfont $pointsize >&2
+    echo "Running $mf \mode:=$MODE; mag:=$MAG; scrollmode; input mf/$NAME" >&2
+    $mf "\mode:=$MODE; mag:=$MAG; scrollmode; input mf/$NAME" </dev/null >&2
     if test $? -eq 0 && test -r $GFNAME; then
       mv $GFNAME $TEMPDIR
+      mv $TFMNAME tfm/
     fi
-    rm -f $NAME.log mf/$NAME
+    rm -f $NAME.log
     cd $TEMPDIR
   fi
 
--- ./web2c-6.1/dvipsk/Makefile.in~	Fri Apr 15 17:15:58 1994
+++ ./web2c-6.1/dvipsk/Makefile.in	Wed Apr 20 17:19:18 1994
@@ -89,10 +89,14 @@
 # options
 default_lj = LJ4
 
-# Where MakeTeXPK puts PK files. Making this name include `pk'
-# simplifies the default in kpathsea/paths.h[.in]. By default, MakeTeXPK
-# appends /<mode> to this.
+# Where MakeTeXPK/MakeTeXTFM put PK/TFM files. Making these names include 
+# `pk' and `tfm' simplifies the default in kpathsea/paths.h[.in].
+# By default, MakeTeXPK/MakeTeXTFM appends /<mode> to this.
 mtp_destdir = $(fontdir)/tmp/pk
+mtt_destdir = $(fontdir)/tmp/tfm
+
+# Location of Sauter sources
+sauterdir = $(fontdir)/sauter
 
 # The installed name of the config file.
 configfile = config.ps
@@ -191,6 +195,7 @@
 MakeTeXPK: $(srcdir)/MakeTeXPK.in
 	rm -f MakeTeXPK
 	sed -e 's,@mtp_destdir@,$(mtp_destdir),' \
+	    -e 's,@sauterdir@,$(sauterdir),' \
 	    -e 's,@configdir@,$(configdir),' \
 	    -e 's,@texmf_prefix@,$(texmf_prefix),' \
 	    -e 's,@default_mfmode@,$(default_mfmode),' \
@@ -201,8 +206,9 @@
 	rm -f config.ps
 	sed -e 's,@default_bdpi@,$(default_bdpi),' \
 	    -e 's,@default_mfmode@,$(default_mfmode),' \
-	    -e 's,@default_texsizes@,$(default_texsizes),' \
-	    -e '/^R/s,:, ,g' $(srcdir)/config.ps.in >config.ps
+	    -e 's,@\default_texsizes@,$(default_texsizes),' \
+	    -e '/^R/s,:, ,g' \ -e '/^R/s,\.[0-9]*,,g' \
+	    $(srcdir)/config.ps.in >config.ps
 
 $(kpathsea): $(kpathsea_srcdir)/*.c $(kpathsea_srcdir)/*.h
 	cd $(kpathsea_dir); $(MAKE) $(makeargs)
--- ./web2c-6.1/Makefile.in~	Fri Apr 15 16:36:26 1994
+++ ./web2c-6.1/Makefile.in	Wed Apr 20 17:17:12 1994
@@ -62,6 +62,11 @@
 cg_fontdir = $(fontdir)/cg
 mt_fontdir = $(fontdir)/monotype
 
+# If you don't want latex.fmt to preload John Sauter's # true-size fonts,
+# then set install_sauter=false.  See the file `$(fontdir)/sauter/README'
+# for details.
+install_sauter = true
+
 # Where the configuration files get installed.
 dvips_prefix = $(texmf_prefix)/dvips
 configdir = $(dvips_prefix)
@@ -79,6 +84,14 @@
 default_bdpi = 300
 default_texsizes = @default_texsizes@
 
+# Where MakeTeXPK/MakeTeXTFM put PK/TFM files. Making these names include 
+# `pk' and `tfm' simplifies the default in kpathsea/paths.h[.in].
+# By default, MakeTeXPK/MakeTeXTFM appends /<mode> to this.
+mtp_destdir = $(fontdir)/tmp/pk
+mtt_destdir = $(fontdir)/tmp/tfm
+
+# Location of Sauter sources
+sauterdir = $(fontdir)/sauter
 
 # Full filename of the database file.  It is not an error for this file
 # not to exist.  See the `Filename database' node in the kpathsea
@@ -119,9 +132,13 @@
   fontdir=$(fontdir) \
   fmtdir=$(fmtdir) basedir=$(basedir) \
   texpooldir=$(texpooldir) mfpooldir=$(mfpooldir) \
+  db_name=$(db_name) db_dir=$(db_dir) \
+  sauterdir=$(sauterdir) \
+  install_sauter=$(install_sauter) \
   install_fonts=$(install_fonts) \
   ps_fontdir=$(ps_fontdir) bh_fontdir=$(bh_fontdir) \
   cg_fontdir=$(cg_fontdir) mt_fontdir=$(mt_fontdir) \
+  mtp_destdir=$(mtp_destdir) mtt_destdir=$(mtt_destdir) \
   dvips_prefix=$(dvips_prefix) configdir=$(configdir) \
   headerdir=$(headerdir) psmacrodir=$(psmacrodir) \
   default_texsizes='$(default_texsizes)' \

The third set of diffs should be applied after the second (previous) set...

--- ./web2c-6.1/xdvik/Makefile.in~	Sun Apr 24 19:16:44 1994
+++ ./web2c-6.1/xdvik/Makefile.in	Sun Apr 24 19:17:16 1994
@@ -87,7 +87,7 @@
 
 # Default LaserJet printer.  See the file `dviljk/INSTALL' for available
 # options
-default_lj = LJ4
+default_lj = dvilj dvilj2 dvilj4
 
 # See INSTALL for compilation options.
 DEFS = -DBUTTONS $(XDEFS) -DMAKETEXPK -DBDPI=$(default_bdpi) -DMFMODE=\"$(default_mfmode)\"
--- ./web2c-6.1/dvipsk/Makefile.in~	Sun Apr 24 19:17:44 1994
+++ ./web2c-6.1/dvipsk/Makefile.in	Sun Apr 24 19:18:10 1994
@@ -87,7 +87,7 @@
 
 # Default LaserJet printer.  See the file `dviljk/INSTALL' for available
 # options
-default_lj = LJ4
+default_lj = dvilj dvilj2 dvilj4
 
 # Where MakeTeXPK/MakeTeXTFM put PK/TFM files. Making these names include 
 # `pk' and `tfm' simplifies the default in kpathsea/paths.h[.in].
--- ./web2c-6.1/dvipsk/dvips.c~	Sun Apr 24 16:43:49 1994
+++ ./web2c-6.1/dvipsk/dvips.c	Sun Apr 24 17:50:38 1994
@@ -230,7 +230,8 @@
 "f*  Run as filter                  E*  Try to create EPSF",
 "h f Add header file                F*  Send control-D at end",
 "i*  Separate file per section      K*  Pull comments from inclusions",
-"k*  Print crop marks               M*  Don't make fonts",
+"                                   L*  Log missing fonts - don't make them",
+"k*  Print crop marks               M s METAFONT mode",
 "l # Last page                      N*  No structured comments",
 "m*  Manual feed                    O c Set/change paper offset",
 #if defined(MSDOS) || defined(OS2)
@@ -435,6 +436,7 @@
 /*
  *   Finally, our main routine.
  */
+char *configstring();
 extern void handlepapersize() ;
 #ifdef VMS
 int main()
@@ -744,8 +746,15 @@
 case 'F' :
                sendcontrolD = (*p != '0') ;
                break ;
-case 'M':
+case 'L':
                dontmakefont = (*p != '0') ;
+               break ;
+case 'M' :
+               if (*p == 0 && argv[i+1])
+                  p = argv[++i] ;
+               if ((mfmode = configstring(p, 0))==0)
+                  error("! Bad mfmode parameter (-M).") ;
+               xputenv ("MAKETEX_MODE", mfmode);
                break ;
 case 'N' :
                disablecomments = (*p != '0') ;
--- ./web2c-6.1/dvipsk/dvips.1~	Sun Apr 24 17:43:29 1994
+++ ./web2c-6.1/dvipsk/dvips.1	Sun Apr 24 17:45:52 1994
@@ -200,12 +200,16 @@
 .B -m
 Specify manual feed for printer.
 .TP
-.B -M
+.B -L
 Turns off the automatic font generation facility.  If any fonts are
 missing, commands to generate the fonts are appended to the file
 .I missfont.log
 in the current directory; this file can then be
 executed and deleted to create the missing fonts.
+.TP
+.B -M device
+Set the METAFONT mode to
+.I device.
 .TP
 .B -n num
 At most
--- web2c-6.1/dviljk/Makefile.in~	Sun Apr 24 18:44:12 1994
+++ web2c-6.1/dviljk/Makefile.in	Sun Apr 24 20:16:46 1994
@@ -83,14 +83,14 @@
 
 # Default MetaFont mode.  See the file `modes.mf' for a full list 
 # of available modes.
-default_mfmode = laserjetfour
+default_mfmode = CanonCX
 
-# Default LaserJet printer.  See the file `dviljk/INSTALL' for available
+# Default LaserJet printers.  See the file `dviljk/INSTALL' for available
 # options
-default_lj = LJ4
+default_lj = dvilj dvilj2 dvilj4
 
 # See INSTALL for compilation options.
-DEFS = -DMAKETEXPK_BY_DEFAULT -D$(default_lj) $(XDEFS) -DMFMODE=\"$(default_mfmode)\"
+DEFS = -DMAKETEXPK_BY_DEFAULT $(XDEFS)
 
 CC = @CC@
 # CFLAGS is used for both compilation and linking.
@@ -122,22 +122,32 @@
 INSTALL_DATA = @INSTALL_DATA@
 
 SHELL = /bin/sh
+LN = /bin/ln
 srcdir = @srcdir@
 VPATH = @srcdir@
 
-objects = dvi2xx.o tfm.o
+sources = dvi2xx.c tfm.c
 
 makeargs = $(MFLAGS) SHELL='$(SHELL)' CC='$(CC)' CFLAGS='$(CFLAGS)' $(MAKEARGS)
 installargs = INSTALL='$(INSTALL)' INSTALL_DATA='$(INSTALL_DATA)' \
   fontdir=$(fontdir) \
   bh_fontdir=$(bh_fontdir) cg_fontdir=$(cg_fontdir) mt_fontdir=$(mt_fontdir)
 
-program = dvilj
+programs = $(default_lj)
 
-all: $(program)
+all: $(programs)
 
-$(program): $(objects) $(kpathsea)
-	$(CC) $(LDFLAGS) -o $(program) $(objects) $(LOADLIBES)
+dvilj: $(sources) $(kpathsea)
+	$(CC) $(CPPFLAGS) $(CFLAGS) $(LDFLAGS) -DLJ -DMFMODE=\"CanonCX\" \
+	    -o $@ $(sources) $(LOADLIBES)
+
+dvilj2: $(sources) $(kpathsea)
+	$(CC) $(CPPFLAGS) $(CFLAGS) $(LDFLAGS) -DLJ2P -DMFMODE=\"CanonCX\" \
+	    -o $@ $(sources) $(LOADLIBES)
+
+dvilj4: $(sources) $(kpathsea)
+	$(CC) $(CPPFLAGS) $(CFLAGS) $(LDFLAGS) -DLJ4 -DMFMODE=\"ljfour\" \
+	    -o $@ $(sources) $(LOADLIBES)
 
 $(kpathsea): $(kpathsea_srcdir)/*.c $(kpathsea_srcdir)/*.h
 	cd $(kpathsea_dir); $(MAKE) $(makeargs)
@@ -146,22 +156,31 @@
 install: install-exec install-data
 uninstall: uninstall-exec uninstall-data
 
-install-exec: $(program)
+install-exec: $(programs)
 	$(SHELL) $(srcdir)/../mkdirchain $(bindir)
-	$(INSTALL_PROGRAM) $(program) $(bindir)/$(program)
+	for program in $(programs); do \
+		$(INSTALL_PROGRAM) $(program) $(bindir)/$(program); \
+	done
 uninstall-exec:
-	rm -f $(bindir)/$(program)
+	for program in $(programs); do \
+		rm -f $(bindir)/$(program); \
+	done
 
 install-data:
 # Man page.
 	$(SHELL) $(srcdir)/../mkdirchain $(mandir)
-	$(INSTALL_DATA) $(srcdir)/dvilj.1 $(mandir)/dvilj.$(manext)
+	$(INSTALL_DATA) dvilj.1 $(mandir)/dvilj.$(manext)
+	-for program in $(programs); do \
+		$(LN) $(mandir)/dvilj.$(manext) $(mandir)/$(program).$(manext); \
+	done
 # Fonts.
 	($(install_fonts) && (cd fonts; $(MAKE) $(installargs) install)) \
 	  || true
 
 uninstall-data:
-	rm -f $(mandir)/dvilj.$(manext)
+	for program in $(programs); do \
+		rm -f $(mandir)/$(program).$(manext); \
+	done
 
 
 distname = dviljk
--- ./web2c-6.1/dvi2tty/Makefile.in~	Sun Apr 24 19:19:07 1994
+++ ./web2c-6.1/dvi2tty/Makefile.in	Sun Apr 24 19:19:13 1994
@@ -87,7 +87,7 @@
 
 # Default LaserJet printer.  See the file `dviljk/INSTALL' for available
 # options
-default_lj = LJ4
+default_lj = dvilj dvilj2 dvilj4
 
 # Where MakeTeXPK puts PK files. Making this name include `pk'
 # simplifies the default in kpathsea/paths.h[.in]. By default, MakeTeXPK
--- ./web2c-6.1/makeindex/Makefile.in~	Sun Apr 24 19:19:29 1994
+++ ./web2c-6.1/makeindex/Makefile.in	Sun Apr 24 19:19:34 1994
@@ -87,7 +87,7 @@
 
 # Default LaserJet printer.  See the file `dviljk/INSTALL' for available
 # options
-default_lj = LJ4
+default_lj = dvilj dvilj2 dvilj4
 
 # Where MakeTeXPK puts PK files. Making this name include `pk'
 # simplifies the default in kpathsea/paths.h[.in]. By default, MakeTeXPK
--- ./web2c-6.1/Makefile.in~	Sun Apr 24 19:17:24 1994
+++ ./web2c-6.1/Makefile.in	Sun Apr 24 19:17:33 1994
@@ -105,7 +105,7 @@
 
 # Default LaserJet printer.  See the file `dviljk/INSTALL' for available
 # options
-default_lj = LJ4
+default_lj = dvilj dvilj2 dvilj4
 
 # End of installation directory definitions.
 
--- ./Makefile.in~	Sun Apr 24 19:19:52 1994
+++ ./Makefile.in	Sun Apr 24 19:19:56 1994
@@ -104,7 +104,7 @@
 
 # Default LaserJet printer.  See the file `dviljk/INSTALL' for available
 # options
-default_lj = LJ4
+default_lj = dvilj dvilj2 dvilj4
 
 # End of installation directory definitions.
 

Again, the following  diffs should be applied after the previous.

--- ./web2c-6.1/web2c/mf/Makefile.in~	Thu May  5 19:04:37 1994
+++ ./web2c-6.1/web2c/mf/Makefile.in	Thu May  5 19:07:52 1994
@@ -36,7 +36,7 @@
 
 CC = @CC@
 CFLAGS = -g
-CPPFLAGS = -DMF -I$(srcdir)/../lib -I../..
+CPPFLAGS = $(DEFS) -DMF -I$(srcdir)/../lib -I../..
 
 CCLD = $(CC)
 RANLIB = @RANLIB@
--- ./web2c-6.1/web2c/lib/ourpaths.c~	Thu May  5 19:20:40 1994
+++ ./web2c-6.1/web2c/lib/ourpaths.c	Thu May  5 17:32:18 1994
@@ -78,7 +78,7 @@
   /* Look for it.  Don't use the kpse_find_glyph stuff, since we don't
      have the dpi available separately, and anyway we don't care about
      having pktogf run MakeTeXPK, etc.  */
-  found = kpse_path_search (path, name, 0);
+  found = kpse_path_search (path, name, 1);
 
   /* If we didn't find it, and we're looking for a font, maybe it's
      an alias defined in a mapping file.  This duplicates most of
@@ -101,7 +101,7 @@
           string mapped_name;
           while ((mapped_name = *mapped_names++) && !found)
             {
-              found = kpse_path_search (path, mapped_name, 0);
+              found = kpse_path_search (path, mapped_name, 1);
             }
         }
     }
--- ./web2c-6.1/web2c/lib/MakeTeXTFM.in~	Thu May  5 21:57:10 1994
+++ ./web2c-6.1/web2c/lib/MakeTeXTFM.in	Thu May  5 23:49:38 1994
@@ -19,19 +19,10 @@
 # TEMPDIR needs to be unique for each process because of the possibility
 # of simultaneous processes running this script.
 TEMPDIR=${TMPDIR-/tmp}/mttfm.$$
-NAME=$1
+NAME=`basename "$1" .tfm`
 MODE=${2-@default_mfmode@}
 
-if test -n "$3"; then
-  case "$3" in
-    /*) DESTDIR="$3";;
-     *) DESTDIR="$DESTDIR/$3";;
-  esac
-else
-  DESTDIR=$DESTDIR/$MODE
-fi
-
-TFMNAME=$NAME.'tfm'
+TFMNAME=${NAME}.tfm
 
 # check also in the standard place
 if test -r $DESTDIR/$TFMNAME; then
@@ -88,3 +79,7 @@
 
 cd $DESTDIR || exit 1
 mv tfmtmp.$$ $TFMNAME
+
+# If this line (or an equivalent) is not present, TeX
+# will think MakeTeXTFM failed.  Any other output to stdout will also.
+echo $DESTDIR/$TFMNAME
--- ./web2c-6.1/web2c/tex/Makefile.in~	Thu May  5 19:04:38 1994
+++ ./web2c-6.1/web2c/tex/Makefile.in	Thu May  5 19:14:50 1994
@@ -37,7 +37,7 @@
 # The -DTeX here is used for patgen, too, but that doesn't hurt anything.
 CC = @CC@
 CFLAGS = -g
-CPPFLAGS = -DTeX -I$(srcdir)/../lib -I../..
+CPPFLAGS = $(DEFS) -DTeX -I$(srcdir)/../lib -I../..
 
 CCLD = $(CC)
 LDFLAGS = $(CFLAGS) $(XLDFLAGS)
--- ./web2c-6.1/web2c/Makefile.in~	Thu May  5 23:52:54 1994
+++ ./web2c-6.1/web2c/Makefile.in	Thu May  5 19:07:05 1994
@@ -51,6 +51,11 @@
 # this directory, named for the typeface families of these directories.
 psfontdir = $(fontdir)/adobe
 
+# If you don't want latex.fmt to preload John Sauter's true-size fonts,
+# then set install_sauter=false.  See the file `$(fontdir)/sauter/README'
+# for details.
+install_sauter = true
+
 # Where the configuration files get installed.
 dvips_prefix = $(texmf_prefix)/dvips
 configdir = $(dvips_prefix)
@@ -79,6 +79,9 @@
 mtp_destdir = $(fontdir)/tmp/pk
 mtt_destdir = $(fontdir)/tmp/tfm
 
+# Location of Sauter sources
+sauterdir = $(fontdir)/sauter
+
 # End of installation directory definitions.
 
 # These lines define the format and base files that `make fmts' and
@@ -96,7 +101,7 @@
 
 
 # Compilation options.
-DEFS = $(XDEFS)
+DEFS = $(XDEFS) -DMAKE_TEX_MF_BY_DEFAULT=1 -DMAKE_TEX_TFM_BY_DEFAULT=1
 
 # CFLAGS is used for both compilation and linking.
 CFLAGS = -g $(XCFLAGS)
@@ -150,7 +150,7 @@
 # Where we need to make things.
 # 
 triptrapdirs = dviutil fontutil
-progdirs = $(triptrapdirs) tex mf bibtex web
+progdirs = $(triptrapdirs) lib tex mf bibtex web
 alldirs = $(progdirs) lib man web2c
 
 # What to pass to subdirectories when making various things.
@@ -167,6 +175,8 @@
   prefix=$(prefix) exec_prefix=$(exec_prefix)				\
   bindir=$(bindir) scriptdir=$(scriptdir)				\
   mtt_destdir=$(mtt_destdir)						\
+  install_sauter=$(install_sauter)					\
+  sauterdir=$(sauterdir)						\
   RANLIB='$(RANLIB)' LN='$(LN)' DEFS='$(DEFS)'                          \
   CCLD='$(CCLD)' LDFLAGS='$(LDFLAGS)' LIBS='$(LIBS)' 			\
   x_extra_libs='$(x_extra_libs)' x_include_flags='$(x_include_flags)'	\
