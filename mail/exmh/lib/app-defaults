!
! Application defaults for Exmh
!
! The best place to put your personal defaults for exmh is
! in the beginning of your ~/.exmh-defaults.  You'll note that
! the tail of that file is written by the Preferences dialog.
! If you put anything into ~/.Xresources, then you'll need to
! use "exmh" as the prefix for the resource name (not *).
!
! The reason *resourceName is used here is because multiple
! instances of exmh have different names (exmh, exmh #2, etc),
! plus there is the background process named exmh-bg that shares resources.
! HOWEVER, never put *geometry into a TK resource specifciation
! because that will attempt to set the geometry of *every* widget!
!	Use exmh.geometry instead.
!
! Class				Description
! -----				-----------
! Main				Top row of buttons and title label
! Fdisp				Folder label display
! Fdisp.Frame.Canvas		    and its canvas.
! Fops				Folder operation buttons and folder label
! Ftoc				Folder table of contents display
! Mid				Frame around Face, Msgid, Status, Mops
! Mid.Face			Bitmap display
! Mid.Right.Status.label	Message label
! Mid.Right.Status.msg 		Status line
! Mid.Right.Mops		Message buttons
! Msg				Message display
!
! toplevel windows.
!
! Fltop				Detached toplevel folder label display
! Fltop.Canvas			    and its canvas.
! Clip				Detached message display
! Sedit				Simple editor top-levels
! Help				Help window
! Key				Color key window
! Pref				Preferences dialogs
! Log				Error/debug log
! Error				Error popups
! Pick				Pick dialog
! WhatNow			WhatNow? dialog
! Find				Find dialog
! NewFolder			Create folder dialog
! DeleteFolder			Delete folder dialog
! Dialog 			General popups

*font: fixed

!*Ftoc*Text.font: 6x10
!*Msg*Text.font: fixed
!*Sedit*Text.font: fixed

! To avoid a resizing bug in TK, do not specify geometry resources
! for the toplevel windows.  Instead, use "position", which
! exmh groks.  The bug is that you cannot specify a geometry like
! +10-40 for a toplevel frame (frame creation barfs), and if you
! specify a width and height, it has to be in pixels (because the
! gridded text subwindow isn't created yet) and you don't have
! any clue as to the right size.  If you guess wrong, the window
! will jump from your wrong size to the correct size that has room
! to pack all its subwindows.  Alternatively, go ahead and pick a
! pixel size for the toplevel, but do not specify a geometry for
! the text subwindow.

exmh.geometry:
*position:
exmh.iconposition:
exmh.iconic:		0
*Fltop.iconposition:
*Fltop.iconic:		0
*Fltop*Canvas.width:	500
*Fltop*Canvas.height:	100
*Sedit*Text.height:	24
*Sedit*Text.width:	80
*Clip*Text.height:	48
*Clip*Text.width:	80
*Help*Text.height:	30
*Help*Text.width:	80
*Log*Text.width:	80
*Log*Text.height:	20

! Top-level resources that don't correspond to a TK widget

! Scrollbar location - left or right
*scrollbarSide:		right

! Resources that tweak the folder label display
!	fl_toplevel - put the flist display in a detached, toplevel window
!	fl_font - label font in the flist display canvas
!	fl_curbutton - which button selects the current folder
!	fl_navbutton - which button navigates to subfolders
!	fl_tarbutton - which button selects a folder as the target for moves
!	fl_xgap	  - gap between labels, X direction
!	fl_ygap	  - gap between labels, Y direction

*fl_toplevel: 0
*fl_font: fixed
*fl_tarbutton: 3
*fl_navbutton: 2
*fl_curbutton: 1
*fl_xgap: 8
*fl_ygap: 8

! Colors for the feedback on color displays.
! (Black and white feedback is hardwired. It isn't clear that
!  there is much room to fiddle in a general way.)
!	c_current	Foreground of current message
!	c_currentBg	Background of current message (optional)
!	c_unseen	Foreground of unseen messages
!	c_unseenf	Background of label for folder with unseen messages
!	c_moved		Background of moved messages, bg of target folder label
!	c_deleted	Background of deleted messages
!	c_foreground	Normal forground
!	c_background	Label background
!			You can tweak ftoc background with Ftoc.t.background
!			You can tweak fdisp background with
!				Fdisp*can.background
!			 	Fdisp*cache.background
!	c_popup		Background of fdisp popups.
!	c_label		Foreground for Version, Folder, and MessageID

*c_current: 	violet red
*c_unseen: 	blue
*c_unseenf: 	blue
*c_moved: 	yellow
*c_deleted: 	grey75
*c_foreground: 	black
*c_background: 	white
*c_popup: 	wheat
*c_label:	blue
!
! Status message colors
!
*c_st_normal:	blue
*c_st_error:	purple
*c_st_warn:	red
*c_st_background: medium sea green

!
! Resources that create the Main buttons
! ubuttonlist is meant to be overridden by users to add buttons
!
*Main.buttonlist:	quit pref bind colorkey help
*Main.ubuttonlist:
*Main.menulist:
*Main.umenulist:

*Main.quit.text:	Quit
*Main.quit.command:	Exmh_Done
*Main.pref.text:	Preferences
*Main.pref.command:	Preferences_Dialog
*Main.bind.text:	Bind
*Main.bind.command:	Sedit_Pref
*Main.colorkey.text:	Color Codes
*Main.colorkey.command:	Help_KeyDisplay
*Main.help.text:	Help
*Main.help.command:	Help

!
! Resources that create the Folder ops buttons and menu
!
*Fops.menulist:		more
*Fops.umenulist:

*Fops.more.text: 	More...
*Fops.more.entrylist: 	rescan pack sort find delete catchup scanall scanall2
*Fops.more.uentrylist:

*Fops.more.l_rescan: 	Rescan folder
*Fops.more.c_rescan:	busy Scan_FolderForce ; Msg_ShowSomething
*Fops.more.l_pack:	Pack folder
*Fops.more.c_pack:	busy Folder_Pack ; Msg_ShowSomething
*Fops.more.l_sort:	Sort folder
*Fops.more.c_sort:	busy Folder_Sort ; Msg_ShowSomething
*Fops.more.l_find:	Find all folders
*Fops.more.c_find:	busy Flist_Refresh
*Fops.more.l_delete:	Delete folder
*Fops.more.c_delete:	Folder_Delete
*Fops.more.l_catchup:	Catchup Unseen
*Fops.more.c_catchup:	Pick_MarkSeen
*Fops.more.l_scanall:	Update scan caches
*Fops.more.c_scanall:	Scan_AllFolders
*Fops.more.l_scanall2:	Update all scan caches
*Fops.more.c_scanall2:	Scan_AllFolders 1


*Fops.buttonlist:	commit inc flist find new pick
*Fops.ubuttonlist:

*Fops.commit.text:	Commit
*Fops.commit.command:	Folder_Commit
*Fops.inc.text:		Inc
*Fops.inc.command:	Inc
*Fops.flist.text:	Flist
*Fops.flist.command:	Fdisp_ClearHighlights ; busy Flist_FindUnseen
*Fops.find.text:	Find
*Fops.find.command:	Find_Setup
*Fops.new.text:		New
*Fops.new.command:	Folder_New
*Fops.pick.text:	Pick
*Fops.pick.command:	Pick

!
! Resources that create the Message ops buttons and menu
!
*Mops.menulist:		more
*Mops.umenulist:

*Mops.more.text: 	More...
*Mops.more.entrylist: 	print unmark clip unseen burst distrib save
*Mops.more.uentrylist:

*Mops.more.l_print: 	Print
*Mops.more.c_print:	Print
*Mops.more.l_unmark: 	Unmark
*Mops.more.c_unmark:	Ftoc_Unmark
*Mops.more.l_clip: 	Clip
*Mops.more.c_clip:	Msg_Clip
*Mops.more.l_unseen: 	First Unseen
*Mops.more.c_unseen:	Msg_ShowUnseen
*Mops.more.l_burst: 	Burst Digest
*Mops.more.c_burst:	Msg_BurstDigest
*Mops.more.l_distrib: 	Redistribute
*Mops.more.c_distrib:	Msg_Dist Mh_DistSetup
*Mops.more.l_save: 	Save to file
*Mops.more.c_save:	Msg_Save

*Mops.buttonlist:	move delete next prev comp reply replyall forward
*Mops.ubuttonlist:

*Mops.move.text: 	Move
*Mops.move.command:	Msg_Move
*Mops.delete.text: 	Delete
*Mops.delete.command:	Msg_Remove
*Mops.next.text: 	Next
*Mops.next.command:	Ftoc_Next show
*Mops.prev.text: 	Prev
*Mops.prev.command:	Ftoc_Prev show
*Mops.comp.text: 	Send
*Mops.comp.command:	Msg_Compose Mh_CompSetup
*Mops.reply.text: 	reply
*Mops.reply.command:	Msg_Reply Mh_ReplySetup
*Mops.replyall.text: 	ReplyAll
*Mops.replyall.command:	Msg_Reply Mh_ReplyAllSetup
*Mops.forward.text: 	Forward
*Mops.forward.command:	Msg_Forward Mh_ForwSetup

! The group assignments associate buttons with three states:
!	current: there is a current message
!	  range: there is a range of messages selected
!	nodraft: we are *not* in the drafts folder
!
! In addition, to support a special case, there is
!	   comp: a group with a single item, the Send (or comp) button.

*Mops.groups:		current range nodraft comp

*Mops.g_current:	move delete reply replyall forward
*Mops.gm_current:	Print Unmark Clip Redistribute
*Mops.ug_current:
*Mops.ugm_current:

*Mops.g_range:		move delete
*Mops.gm_range:		Print Unmark
*Mops.ug_range:
*Mops.ugm_range:

*Mops.g_nodraft:	reply replyall forward
*Mops.gm_nodraft:	Redistribute
*Mops.ug_nodraft:
*Mops.ugm_nodraft:

*Mops.g_comp:		comp

!
! MIME message type handlers
! mimeTypes lists the known mime types
! mimeUTypes is meant to be overridden by users with additional types
! mime_type/subtype maps to the TCL procedure to handle the type
!
*mimeTypes: text/plain text/enriched text/richtext text/x-pgp multipart application/octet-stream application/postscript message/external-body message/rfc822 image audio
*mimeUTypes:
!
*mime_text/plain:		Mime_ShowText
*mime_text/enriched:		Mime_ShowText
*mime_text/richtext:		Mime_ShowText
*mime_text/x-pgp:		Mime_ShowText
*mime_multipart:		Mime_ShowMultipart
*mime_application/octet-stream:	Mime_ShowApplicationOctet
*mime_application/postscript:	Mime_ShowPostscript
*mime_message/external-body:	Mime_ShowMessageExternal
*mime_message/rfc822:		Mime_ShowRfc822
*mime_image:			Mime_ShowDirect
*mime_audio:			Mime_ShowAudio

! EOF
