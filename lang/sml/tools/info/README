A package for displaying information on bindings is now available.
The file is called info.sml and contains the definition of a structure Info
which provides two basic functions:

- info: takes the full path of an object and search informations on that
object (same kind as what is displayed when the object was defined).

- search: takes a string and looks for all visible bindings containing that
string as a subpart. It walks through the full tree.

Example:

- Info.info ["+"];
val + : 'a * 'a -> 'a as + : int * int -> int + : real * real -> real

infix 6 +

val it = () : unit
- Info.info ["Array"];
structure Array :
  sig
    eqtype 'a array
    exception Size
    exception Subscript
    val array : int * '1a -> '1a array
    val arrayoflist : '1a list -> '1a array
    val length : 'a array -> int
    val sub : 'a array * int -> 'a
    val tabulate : int * (int -> '1a) -> '1a array
    val update : 'a array * int * 'a -> unit
  end

val it = () : unit
- Info.search "compile";
variable or constructor NewJersey.System.Compile.compile
variable or constructor NewJersey.System.Compile.compileAst
variable or constructor System.Compile.compile
variable or constructor System.Compile.compileAst
val it = () : unit
