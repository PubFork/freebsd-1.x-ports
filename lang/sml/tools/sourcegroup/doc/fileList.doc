(* Copyright (c) 1992 by Carnegie Mellon University *)

(* Gene Rollins (rollins+@cs.cmu.edu)
   School of Computer Science, Carnegie-Mellon Univ, Pittsburgh, PA *)

The structure FileList provides functions for creating lists of filenames,
and functions to filter such lists.


signature FILELIST = sig
 val inDir :bool * string list -> string list
 val inFile :string list -> string list
 val cshExpansion :string -> string list

 val skipFiles :string list -> string list -> string list
 val extensionsOnly :string list -> string list -> string list
end


inDir (recursive, names)
  The list of all files (not starting with ".") in the directories names.  The
  subdirectories are not included in the list. If recursive, the subdirectories
  are recursively entered to look for more files to include in the list.

inFile pointerFiles
  The list of all filenames contained inside the files pointerFiles.  Each file
  in pointerFiles contains a list filenames given as unquoted text separated by
  any number of blanks (spaces, tabs, and newlines).  The filenames are
  relative to the location of the pointer file they were found in.

cshExpansion pattern
  Start a C-shell process to execute the command ("echo " ^ pattern).  The
  result will be a list of file names matching the pattern.

skipFiles skipNames names
  Remove the elements of skipNames from names.

extensionsOnly exts names
  Remove from names, any element whose extension is NOT in the list exts.
  For example:
    extensionsOnly ["sml","sig"] ["foo.sml", "bar.txt", "foobar.sig.bin"]
     = ["foo.sml"]
