Folks,

Here is my port of XLISP-STAT to FreeBSD.  I was going to post this a long
time ago, but I've been having disk troubles recently.  I hope this whole
thing works on someone else's system: I compiled in under the GAMMA 
release, so I can't guarantee it'll work under the 1.0+ releases.  
(Due to my disk troubles, I haven't upgraded...)

This is my first time doing this, so please bear with me. I'm not sure how
much you need/want, so feel free to email back with things I should do.  

First, a little background:

XLISP-STAT is an object oriented statistical language that incorporates 
dynamic graphics over a wide variety of platforms.  X windows is required.
The Xlisp-Stat package is based on a full implementation of David Betz's 
XLISP language, with many, many additions.  The Xlisp-Stat language is 
documented in Tierney (1990), Lisp-Stat, John Wiley & Sons.  Describing the
language in a few sentences is fairly hard.  Once you get it running, try 
the following commands:

(def x (normal-rand 100))  	
(def y (+ x (^ x 2) (uniform-rand 100))) 
(def plot1 (plot-points x y))
(def z (uniform-rand 100))
(def plot2 (spin-plot (list x y z)))

This will generate two plots, one a 2D plot of {x,y} the other a 3D plot. 
Use the buttons on the bottom to spin the plot.  From the plot's menu, you 
may wish to slow down the plot some (esp. on a 486).  Note how when you 
rotate the plots, the point sizes change: the 3D plots incorporate 
depth cuing.  

(defun f (x y)
    (+ (sin x) (^ y 2)))
(def plot3 (spin-function #'f -PI PI -2 2))

This will give you a 3D plot of the function f=sin(x)+y^2 on the 
specified rectangle.  

To get help, you can type (help 'spin-function) or you can type 
(apropos 'rand) to get a list of all commands with "rand" in it then you
can get help on those commands.  (apropos 'rand) will give you a list of 
all of the random number generators in xlispstat.

Technicals:

To run the program, put the following in your bin, as a file named xlispstat:

-------------------------------------------------------------------------------
XLISPLIB=/usr/local/lib/xlispstat/ export XLISPLIB
if test ! -f init.lsp; then INITFILES="${XLISPLIB}common ${XLISPLIB}init";
else INITFILES=
fi
XLISP=xlispstat
exec ${XLISPLIB}${XLISP} ${INITFILES} $*
-------------------------------------------------------------------------------

Unpack xlisprun.tgz into /usr/local/lib/xlispstat, or where you desire.  
Alternatively, make a shell script that changes to where you put xlispstat,
then execs xlispstat from there.  On loading, xlispstat loads a number of 
lisp files that give XLISP-STAT special graphics capabilities.  

The source code I've given to you in xlispsrc.tgz.  I've simply given you 
the complete distribution source code, as publically available, with a new
X11BSDStuff.c file that makes it compile under FreeBSD.  If you recompile
it, you'll get  a LOT of warnings.  Those are "normal."  Most will be 
changes of pointer types.  There should be no errors.  I've given the 
complete source in case something has changed in the most recent releases.
There are instructions for compiling it in the .tgz file.  If you have 
gnu emacs, you can run it from gnu emacs.  You need to change to the 
xlispstat.el.1919 file if you run gnu emacs 19.19. 

I really hope this works on your machines!  If you have questions, please
email me!  I'll see what I can do.

Bret Musser
bjm@stat.umn.edu
