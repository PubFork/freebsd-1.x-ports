--+ Sather to C interface code generated Sun Nov 24 16:18:02 1991 from ccob.
--+
--+ preserve-comment=t.
--+ sather-c-type-alist=
--+   ((INT . int) (REAL . float) (DOUBLE . double) 
--+    (CHAR . char) (BOOL . char) (CKEY . int) 
--+    (CHAN . int) (CARRAY . "ptr *") (CSTRAY . "ptr *") 
--+    (OTHERWISE . ptr) )
--+
--+ The code consists of three parts.
--+ ccob.sa contains Sather and C classes importing from C.
--+ ccob.c contains the corresponding C functions to go with
--+ the Sather interpreter.
--+ ccob.macros contains macros to be included in the
--+ .sather file. Use (include) ccob.macros there.
--+ If you refer to C structures, the ccob.c file must always
--+ be included, with the macros file, too.
--+----------------------------------------------------------------------------


(c_macro) "#include <ccob.h>" -- This file should contain all relevant includes.
 carray_set carray_get create_carray print_cstray print_cstr to_str to_cstr from_int to_int to_cob ob_base_size str_ptr

-- PRESERVED FILE HEADER 
-- -*- Mode: Sather;  -*-
-- File: ccob.sac
-- Author: Heinz Schmidt (hws@ICSI.Berkeley.EDU)
-- Copyright (C) International Computer Science Institute, 1991
--*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
--* FUNCTION:  COMMON C OBJECTS. A foreign function ADT in support of 
--*            COB classes.
--* 
--* NOTE: The .sac version of this code cannot be used directly with the 
--*   Sather compiler. The file contains foreign abstract type definitions. 
--*   to be converted to Sather and C code.
--*
--* RELATED FILES: cob.sa, cob.c
--*
--* HISTORY:
--* Last edited: May 20 23:51 1991 (hws)
--* Created: Mon Dec 17 08:37:25 1990
--*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- END FILE HEADER 

--
--*
--* From Sather runtime: Strings
--*

(c_macro) "#define str_ptr(s) (ptr)(str_ptr_((ptr)(s)))" str_ptr

--
--*  
--* Instances
--*

(c_macro) "#define ob_base_size(typ) (int)(safe_ob_base_size_((int)(typ),"C::ob_base_size access error."))" ob_base_size

--
--*  
--* Sather INTs and COBs -- the macro versions cast only
--*

(c_macro) "#define to_cob(ob) (ptr)((ptr)(ob))" to_cob
(c_macro) "#define to_int(i) (int)((ptr)(i))" to_int
(c_macro) "#define from_int(i) (ptr)((int)(i))" from_int

--
--*
--*  C strings
--*
-- We rely on Sather runtime fns str_ptr_ and makestr_

(c_macro) "#define to_cstr(s) (ptr)(strdup_(str_ptr_((ptr)(s))))" to_cstr
(c_macro) "#define to_str(s) (ptr)(makestr_((ptr)(s)))" to_str

--
-- consider using to_str and OUT instead.

(c_macro) "#define print_cstr(s) {printf((ptr)(s))}" print_cstr

--
-- printing

(c_macro) "#define print_cstray(s) {  int i;  for (i = 0;(ptr *)(s)[i] != 0; i++)    printf("%s\n",(ptr *)(s)[i])}" print_cstray

--
--*
--* C arrays
--*

(c_macro) "#define create_carray(len) (ptr *)(malloc(4*(int)(len)))" create_carray
(c_macro) "#define carray_get(array,index) (ptr)((ptr *)(array)[(int)(index)])" carray_get

(c_macro) "#define carray_set(array,index,val) {(ptr *)(array)[(int)(index)] = (ptr)(val)}" carray_set
