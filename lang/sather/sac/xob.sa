--+ Sather to C interface code generated Thu May 23 14:10:54 1991 from xob.
--+
--+ preserve-comment=t.
--+ sather-c-type-alist=
--+   ((INT . int) (REAL . float) (DOUBLE . double) 
--+    (CHAR . char) (BOOL . char) (CKEY . int) 
--+    (CHAN . int) (CARRAY . "ptr *") (CSTRAY . "ptr *") 
--+    (OTHERWISE . ptr) )
--+
--+ The code consists of three parts.
--+ xob.sa contains Sather and C classes importing from C.
--+ xob.c contains the corresponding C functions to go with
--+ the Sather interpreter.
--+ xob.macros contains macros to be included in the
--+ .sather file. Use (include) xob.macros there.
--+ If you refer to C structures, the xob.c file must always
--+ be included, with the macros file, too.
--+----------------------------------------------------------------------------

-- PRESERVED FILE HEADER 
-- -*- Mode: Sather; -*-
-- File: xvob.sa
-- Author: Heinz Schmidt (hws@icsi.berkeley.edu)
-- Created: Mon Dec 17 08:37:25 1990
-- Copyright (C) 1990, International Computer Science Institute
--*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
--* FUNCTION:  Sather2C interface for accessing Xview data.
--*            Some callbacks receive arguments that they are expected to 
--*            update and use in calls to Xview or to return updated.
--* 
--* NOTE: This is a high-level specification of a foreign function interface
--*   for Sather. / separates corresponding Sather and C names.
--*
--* CLASSES: C_RECT
--* 
--* RELATED PACKAGES: cob.sa, xvaux.sa
--*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- END FILE HEADER 

-- FOREIGN RECT.
-- Points and rectangles are used all over the place, for instance when we 
-- are called back to repaint parts of the window; or to define a clipping 
-- region to the Xview. 

class C_RECT is -- an overlay class for the foreign C structure rect.

   COB; -- a C_RECT is a C object.
        -- Do not use new, copy or deep-copy here. The C functions generated
        -- don't know what to do with Sather-created instances.

-- Constructor --
   create(left:INT; right:INT; width:INT; height:INT):SELF_TYPE is
            res := C::create_c_rect(left,right,width,height)
   end;

-- Readers --
   left:INT is res := C::c_rect_left(self) end;
   right:INT is res := C::c_rect_right(self) end;
   width:INT is res := C::c_rect_width(self) end;
   height:INT is res := C::c_rect_height(self) end;

-- Writers --
   set_left(x:INT) is C::set_c_rect_left(self,x) end;
   set_right(x:INT) is C::set_c_rect_right(self,x) end;
   set_width(x:INT) is C::set_c_rect_width(self,x) end;
   set_height(x:INT) is C::set_c_rect_height(self,x) end;

end; -- class C_RECT

class C is -- the supporting C ADT for class C_RECT

-- Constructor --
   create_c_rect(left:INT; right:INT; width:INT; height:INT):$C_RECT is end;

-- Readers --
   c_rect_left(cob:$C_RECT):INT is end;
   c_rect_right(cob:$C_RECT):INT is end;
   c_rect_width(cob:$C_RECT):INT is end;
   c_rect_height(cob:$C_RECT):INT is end;

-- Writers --
   set_c_rect_left(cob:$C_RECT; x:INT) is end;
   set_c_rect_right(cob:$C_RECT; x:INT) is end;
   set_c_rect_width(cob:$C_RECT; x:INT) is end;
   set_c_rect_height(cob:$C_RECT; x:INT) is end;

end; -- class C

class C is -- constants and functions


--
-- Subst C functions
--
   carray_get(a:CARRAY; n:INT):COB is end;

   carray_set(a:CARRAY; n:INT; v:COB) is end;

end; -- class C
