--+ Sather to C interface code generated Sun Nov 24 16:18:01 1991 from ccob.
--+
--+ preserve-comment=t.
--+ sather-c-type-alist=
--+   ((INT . int) (REAL . float) (DOUBLE . double) 
--+    (CHAR . char) (BOOL . char) (CKEY . int) 
--+    (CHAN . int) (CARRAY . "ptr *") (CSTRAY . "ptr *") 
--+    (OTHERWISE . ptr) )
--+
--+ The code consists of three parts.
--+ ccob.sa contains Sather and C classes importing from C.
--+ ccob.c contains the corresponding C functions to go with
--+ the Sather interpreter.
--+ ccob.macros contains macros to be included in the
--+ .sather file. Use (include) ccob.macros there.
--+ If you refer to C structures, the ccob.c file must always
--+ be included, with the macros file, too.
--+----------------------------------------------------------------------------

-- PRESERVED FILE HEADER 
-- -*- Mode: Sather;  -*-
-- File: ccob.sac
-- Author: Heinz Schmidt (hws@ICSI.Berkeley.EDU)
-- Copyright (C) International Computer Science Institute, 1991
--*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
--* FUNCTION:  COMMON C OBJECTS. A foreign function ADT in support of 
--*            COB classes.
--* 
--* NOTE: The .sac version of this code cannot be used directly with the 
--*   Sather compiler. The file contains foreign abstract type definitions. 
--*   to be converted to Sather and C code.
--*
--* RELATED FILES: cob.sa, cob.c
--*
--* HISTORY:
--* Last edited: May 20 23:51 1991 (hws)
--* Created: Mon Dec 17 08:37:25 1990
--*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- END FILE HEADER 


class C is -- constants and functions

--
--*
--* From Sather runtime: Strings
--*

   str_ptr(s:STR):$CSTR is end;
   make_str_(s:$CSTR):STR is end;

--
--*  
--* Instances
--*

   ob_base_size(typ:INT):INT is end;

--
--*  
--* Sather INTs and COBs -- the macro versions cast only
--*

   to_cob(ob:$OB):$COB is end;
   to_int(i:$COB):INT is end;
   from_int(i:INT):$COB is end;

--
--*
--*  C strings
--*
-- We rely on Sather runtime fns str_ptr_ and makestr_

   to_cstr(s:STR):$CSTR is end;
   to_str(s:$CSTR):STR is end;

--
-- consider using to_str and OUT instead.

   print_cstr(s:$CSTR) is end;

--
--*
--* C string arrays
--*

   strtok_cstray(s1:STR; s2:STR):$CSTRAY is end;

--
-- printing

   print_cstray(s:$CSTRAY) is end;

--
--*
--* C arrays
--*

   create_carray(len:INT):$CARRAY is end;
   carray_get(array:$CARRAY; index:INT):$COB is end;

   carray_set(array:$CARRAY; index:INT; val:$COB) is end;

end; -- class C
