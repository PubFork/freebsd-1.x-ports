-- COPYRIGHT NOTICE: This code is provided "AS IS" WITHOUT ANY WARRANTY
-- and is subject to the terms of the SATHER LIBRARY GENERAL PUBLIC
-- LICENSE contained in the file: "sather/doc/license.txt" of the Sather
-- distribution. The license is also available from ICSI, 1947 Center
-- St., Suite 600, Berkeley CA 94704, USA.
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- $Id: .sa.c_fstat,v 1.1 1994/02/12 03:21:54 hsu Exp $
-- HISTORY:
--* Last edited: Oct 30 00:06 1993 (hws)
--*  Oct 30 00:06 1993 (hws): merge readable .sather syntax
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

macro: "#include <sys/types.h>" 
  create_c_filestat 
  c_st_dev c_st_ino c_st_mode c_st_nlink c_st_uid c_st_gid c_st_rdev 
  c_st_size c_st_atime c_st_mtime c_st_ctime c_st_blksize c_st_blocks

macro: "#include <sys/stat.h>" 
  create_c_filestat 
  c_st_dev c_st_ino c_st_mode c_st_nlink c_st_uid c_st_gid c_st_rdev 
  c_st_size c_st_atime c_st_mtime c_st_ctime c_st_blksize c_st_blocks

macro: "#define create_c_filestat() (ptr)malloc(sizeof(struct stat))"
  create_c_filestat

macro: "#define c_st_dev(cob) ((int)(((struct stat *)cob)->st_dev))" c_st_dev
macro: "#define c_st_ino(cob) ((int)(((struct stat *)cob)->st_ino))" c_st_ino
macro: "#define c_st_mode(cob) ((int)(((struct stat *)cob)->st_mode))" c_st_mode
macro: "#define c_st_nlink(cob) ((int)(((struct stat *)cob)->st_nlink))" c_st_nlink
macro: "#define c_st_uid(cob) ((int)(((struct stat *)cob)->st_uid))" c_st_uid
macro: "#define c_st_gid(cob) ((int)(((struct stat *)cob)->st_gid))" c_st_gid
macro: "#define c_st_rdev(cob) ((int)(((struct stat *)cob)->st_rdev))" c_st_rdev
macro: "#define c_st_size(cob) ((int)(((struct stat *)cob)->st_size))" c_st_size
macro: "#define c_st_atime(cob) ((int)(((struct stat *)cob)->st_atime))" c_st_atime
macro: "#define c_st_mtime(cob) ((int)(((struct stat *)cob)->st_mtime))" c_st_mtime
macro: "#define c_st_ctime(cob) ((int)(((struct stat *)cob)->st_ctime))" c_st_ctime

macro: "#define c_st_blksize(cob) \
((int)(((struct stat *)cob)->st_blksize))" c_st_blksize

macro: "#define c_st_blocks(cob) \
((int)(((struct stat *)cob)->st_blocks))" c_st_blocks
   
-- Writers --
macro: "#define set_c_st_dev(cob,x) {((struct stat *)cob)->st_dev = x;}" set_c_st_dev
macro: "#define set_c_st_ino(cob,x) {((struct stat *)cob)->st_ino = x;}" set_c_st_ino
macro: "#define set_c_st_mode(cob,x) {((struct stat *)cob)->st_mode = x;}" set_c_st_mode

macro: "#define set_c_st_nlink(cob,x) \
{((struct stat *)cob)->st_nlink = x;}" set_c_st_nlink

macro: "#define set_c_st_uid(cob,x) {((struct stat *)cob)->st_uid = x;}" set_c_st_uid
macro: "#define set_c_st_gid(cob,x) {((struct stat *)cob)->st_gid = x;}" set_c_st_gid
macro: "#define set_c_st_rdev(cob,x) {((struct stat *)cob)->st_rdev = x;}" set_c_st_rdev
macro: "#define set_c_st_size(cob,x) {((struct stat *)cob)->st_size = x;}" set_c_st_size

macro: "#define set_c_st_atime(cob,x) \
{((struct stat *)cob)->st_atime = x;}" set_c_st_atime

macro: "#define set_c_st_mtime(cob,x) \
{((struct stat *)cob)->st_mtime = x;}" set_c_st_mtime

macro: "#define set_c_st_ctime(cob,x) \
{((struct stat *)cob)->st_ctime = x;}" set_c_st_ctime

macro: "#define set_c_st_blksize(cob,x) \
{((struct stat *)cob)->st_blksize = x;}" 
  set_c_st_blksize

macro: "#define set_c_st_blocks(cob,x) \
{((struct stat *)cob)->st_blocks = x;}" 
  set_c_st_blocks
   
