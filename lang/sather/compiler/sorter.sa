-- -*- Mode: Sather;  -*-
-- File: sorter.sa
-- Author: Jeff Bilmes (bilmes@ICSI.Berkeley.EDU)
-- Copyright (C) International Computer Science Institute, 1991, 1992, 1993
--
-- COPYRIGHT NOTICE: This code is provided "AS IS" WITHOUT ANY WARRANTY
-- and is subject to the terms of the SATHER LIBRARY GENERAL PUBLIC
-- LICENSE contained in the file: "sather/doc/license.txt" of the Sather
-- distribution. The license is also available from ICSI, 1947 Center
-- St., Suite 600, Berkeley CA 94704, USA.
--
-- Changes: Heinz W. Schmidt (hws@csis.dit.csiro.au)
-- (c) Commonwealth Scientific and Industrial Research Organisation (CSIRO),
-- Australia, 1992, 1993.
-- The modifications are provided "AS IS" WITHOUT ANY WARRANTY and are subject
-- to the terms of the SATHER LIBRARY GENERAL PUBLIC LICENCE referred to above.
--*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
--* FUNCTION: Provide a routine supports sorts arrays of objects subclassed
--*      from SORTOB
--*
--* RCS: $Id: sorter.sa,v 1.1 1994/02/12 03:21:54 hsu Exp $
--* HISTORY:
--* Last edited: Oct 17 05:08 1993 (hws)
--*  Oct 17 05:07 1993 (hws): Sather 1 syntax, copyright note
--* Created: Thu Mar  7 22:24:43 1991 (bilmes)
--*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class SORTER is

   shared array:ARRAY{$SORTOB};

   qsortdoit(l,u:INT) is
      -- Quicksort the nodes between l and u
      if u>l then		-- don't do anything if 1 or fewer
	 r:INT:=(l+u)/2;
	 t:$SORTOB:=array[r];
	 array[r]:=array[l];
	 array[l]:=t;
	 m:INT:=l;
	 i:INT:=l+1;
	 s:$SORTOB:=array[m]; 
	 loop until!(i>u);
	    if array[i].comp(t) < 0 then
	       m:=m+1; s:=array[m];
	       array[m]:=array[i];
	       array[i]:=s;
	    end;
	    i:=i+1
	 end; -- loop
	 s:=array[l]; array[l]:=array[m]; array[m]:=s;
	 qsortdoit(l,m-1); qsortdoit(m+1,u);
      end -- if
   end; -- qsortdoit

   qsort(arr:ARRAY{$SORTOB}; u,l:INT) is
      array := arr;
      qsortdoit(u,l);
   end; -- qsort
   
end; -- class SORTER

--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class SORTOB is

   comp(so:$SORTOB):INT is
      -- abstract routine, should never be called
      -- Subclasses 
   end; -- comp

end; -- class SORTOB

--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
