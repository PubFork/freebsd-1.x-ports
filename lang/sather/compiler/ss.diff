*** ssather.y	Sat Oct 30 01:14:42 1993
--- david.y	Sat Oct 30 11:17:33 1993
***************
*** 1,29 ****
! /* File: ssather.y
!  *
!  * Authors: Steve Omohundro (om@icsi.berkeley.edu) 
!  *           Chu-Cheow Lim (clim@ICSI.Berkeley.EDU)
!  * Copyright (C) International Computer Science Institute, 1991, 1992, 1993 
!  *
!  * COPYRIGHT NOTICE: This code is provided "AS IS" WITHOUT ANY WARRANTY
!  * and is subject to the terms of the SATHER LIBRARY GENERAL PUBLIC
!  * LICENSE contained in the file: "sather/doc/license.txt" of the Sather
!  * distribution. The license is also available from ICSI, 1947 Center
!  * St., Suite 600, Berkeley CA 94704, USA.
!  *
!  * Changes: Heinz W. Schmidt (hws@csis.dit.csiro.au)
!  * (c) Commonwealth Scientific and Industrial Research Organisation (CSIRO),
!  * Australia, 1992, 1993.
!  * The modifications are provided "AS IS" WITHOUT ANY WARRANTY and are subject
!  * to the terms of the SATHER LIBRARY GENERAL PUBLIC LICENCE referred to above.
!  *-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
!  * FUNCTION: YACC (or Bison or BYACC) grammar for the version of Sather written in 
!  *  Sather. Tries to do minimal work in parser (eg. uses IDENTIFIER as
!  *   high up as possible, etc.)
!  *
!  * $Id: ss.diff,v 1.1 1994/02/12 03:21:55 hsu Exp $
!  *
!  * HISTORY: 
!  ** Last edited: Oct 30 01:14 1993 (hws)
!  **  Oct 24 23:20 1993 (hws): add include index
   **  Oct 15 19:05 1993 (hws): fix protect return a stmt NOT A STMT_LIST!
   **  Oct  3 12:14 1993 (hws): 'abstract' classes.
--- 1,4 ----
! /* HISTORY:
!  ** Last edited: Oct 30 11:17 1993 (hws)
   **  Oct 15 19:05 1993 (hws): fix protect return a stmt NOT A STMT_LIST!
   **  Oct  3 12:14 1993 (hws): 'abstract' classes.
***************
*** 37,42 ****
   **  Mar 15 11:58 1992 (hws): integrated exceptions from local compiler.
   **  Nov 27 08:06 1991 (hws): eliminated '=' sign in alias notation.
!  *-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
!  */
  %{
  
--- 12,38 ----
   **  Mar 15 11:58 1992 (hws): integrated exceptions from local compiler.
   **  Nov 27 08:06 1991 (hws): eliminated '=' sign in alias notation.
! /*
! /* YACC (or Bison or BYACC) grammar for the version of Sather written in 
!    Sather. Tries to do minimal work in parser (eg. uses IDENTIFIER as
!    high up as possible, etc.)
! 
!   Authors: Steve Omohundro (om@icsi.berkeley.edu) 
!           Chu-Cheow Lim (clim@ICSI.Berkeley.EDU)
!   Copyright (C) International Computer Science Institute, 1991, 1992, 1993 
! 
!   COPYRIGHT NOTICE: This code is provided "AS IS" WITHOUT ANY WARRANTY
!   and is subject to the terms of the SATHER LIBRARY GENERAL PUBLIC
!   LICENSE contained in the file: "sather/doc/license.txt" of the Sather
!   distribution. The license is also available from ICSI, 1947 Center
!   St., Suite 600, Berkeley CA 94704, USA.
! 
!   Changes: Heinz W. Schmidt (hws@csis.dit.csiro.au)
!   (c) Commonwealth Scientific and Industrial Research Organisation (CSIRO),
!   Australia, 1992, 1993.
!   The modifications are provided "AS IS" WITHOUT ANY WARRANTY and are subject
!   to the terms of the SATHER LIBRARY GENERAL PUBLIC LICENCE referred to above.
!  
!   $Id: ss.diff,v 1.1 1994/02/12 03:21:55 hsu Exp $
! */
  %{
  
***************
*** 45,49 ****
  #include <stdio.h>
  
! #if defined(rs6000)
  #  undef free
  #endif
--- 41,45 ----
  #include <stdio.h>
  
! #if defined(rs6000) || defined(alpha)
  #  undef free
  #endif
***************
*** 162,166 ****
  #define FALSE_IND 35 
  #define IF_IND 10
- #define INCLUDE_IND 75
  #define INVARIANT_IND 67
  #define IS_IND 12
--- 158,161 ----
***************
*** 186,189 ****
--- 181,187 ----
  #define WHILE_IND 74
  
+ /* DPS - added */
+ #define INCLUDE_IND 11
+ 
  #define NOT_OP_IND 1
  #define LT_OP_IND 2
***************
*** 222,227 ****
  
  %token ABSTRACT AGAINST ASSERT ASSIGN ATTR BREAK CASE CLASS CONSTANT DEFINE 
! %token ELSE ELSIF END ENSURE INCLUDE INVARIANT IF IS 
! /*%token INLINE */
  %token LOOP PRIVATE PROTECT RAISE READONLY REQUIRE RETURN SHARED THEN TYPECASE
  %token UNDEFINE UNTIL WHEN WHILE CREF
--- 220,228 ----
  
  %token ABSTRACT AGAINST ASSERT ASSIGN ATTR BREAK CASE CLASS CONSTANT DEFINE 
! %token ELSE ELSIF END ENSURE INVARIANT IF IS 
! 
! /*DPS - was commented out - changed 'inline' to 'include' */
! %token INCLUDE
! 
  %token LOOP PRIVATE PROTECT RAISE READONLY REQUIRE RETURN SHARED THEN TYPECASE
  %token UNDEFINE UNTIL WHEN WHILE CREF
***************
*** 256,260 ****
  ;
  
! class: CLASS TYPID getlnno opt_type_vars IS feature_list END
      { main_process_classdef(0, classob_create(NULL,$2,$3,$4,$6,NULL)); }
  
--- 257,262 ----
  ;
  
! class:
!    CLASS TYPID getlnno opt_type_vars IS feature_list END
      { main_process_classdef(0, classob_create(NULL,$2,$3,$4,$6,NULL)); }
  
***************
*** 267,270 ****
--- 269,279 ----
     | ABSTRACT CLASS '$' TYPID getlnno error IS feature_list END
      { main_process_classdef(0, classob_create(NULL,$4,$5,NULL,$8,1)); }
+ 
+ /* DPS - added two cases to allow ignored, optional type bounds */
+    | CLASS TYPID getlnno opt_type_vars '<' type_spec_list IS feature_list END
+     { main_process_classdef(0, classob_create(NULL,$2,$3,$4,$8,NULL)); }
+ 
+    | ABSTRACT CLASS '$' TYPID getlnno opt_type_vars '<' type_spec_list IS feature_list END
+     { main_process_classdef(0, classob_create(NULL,$4,$5,$6,$10,1)); }
  ;
  
***************
*** 358,366 ****
        lst_featob_mark_abstract($$); 
      }  
! 
    | type_spec
      { $$ = (ptr)lst_featob_push(lst_featob_create(NULL,1),
  				cinh_featob_create(NULL,$1)); }
- 
    | INCLUDE type_spec
      { $$ = (ptr)lst_featob_push(lst_featob_create(NULL,1),
--- 367,374 ----
        lst_featob_mark_abstract($$); 
      }  
! /* DPS - duplicated to add optional include */
    | type_spec
      { $$ = (ptr)lst_featob_push(lst_featob_create(NULL,1),
  				cinh_featob_create(NULL,$1)); }
    | INCLUDE type_spec
      { $$ = (ptr)lst_featob_push(lst_featob_create(NULL,1),
***************
*** 467,470 ****
--- 475,483 ----
                                  /* Declaration of set of variables */
      { $$ = (ptr)any_declob_create(NULL,$1,$3); }
+ /* DPS - implied 'arg' for unnamed single arg */
+   | type_spec
+         { $$ = (ptr)any_declob_create(NULL,
+ 		       lst_int_push(lst_int_create(NULL,1),index_of_arg),
+ 		       $1); }
  ;
  
***************
*** 495,498 ****
--- 508,516 ----
      { $$ = (ptr)$1; }
    | var_dec_list ';' var_dec	/* Several declarations */
+     { $$ = (ptr)lst_declob_append($1,param_declob_create_lst(NULL,$3)); }
+ /* DPS -- made it okay to use commas in arg lists */
+   | var_dec_list ','		/* Extra semi-colon */
+     { $$ = (ptr)$1; }
+   | var_dec_list ',' var_dec	/* Several declarations */
      { $$ = (ptr)lst_declob_append($1,param_declob_create_lst(NULL,$3)); }
  ;
