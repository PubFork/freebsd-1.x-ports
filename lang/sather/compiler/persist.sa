-- -*- Mode: Sather;  -*-
-- File: persist.sa
-- Author: Chu-Cheow Lim
-- Copyright (C) International Computer Science Institute, 1991, 1992, 1993
--
-- COPYRIGHT NOTICE: This code is provided "AS IS" WITHOUT ANY WARRANTY
-- and is subject to the terms of the SATHER LIBRARY GENERAL PUBLIC
-- LICENSE contained in the file: "sather/doc/license.txt" of the Sather
-- distribution. The license is also available from ICSI, 1947 Center
-- St., Suite 600, Berkeley CA 94704, USA.
--
-- Changes: Heinz W. Schmidt (hws@csis.dit.csiro.au)
-- (c) Commonwealth Scientific and Industrial Research Organisation (CSIRO),
-- Australia, 1992, 1993.
-- The modifications are provided "AS IS" WITHOUT ANY WARRANTY and are subject
-- to the terms of the SATHER LIBRARY GENERAL PUBLIC LICENCE referred to above.
--*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
--* FUNCTION:
--* Interface to the (C) save/restore routines for persistent objects.
--*
--* RCS: $Id: persist.sa,v 1.1 1994/02/12 03:21:54 hsu Exp $
--* HISTORY:
--* Last edited: Oct 17 05:06 1993 (hws)
--*  Oct 17 05:05 1993 (hws): Sather 1 syntax, copyright note
--* Created: Mon Jan  7 10:30:46 1991
--*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class PERSIST_OB is
   -- User ensures that the FILE_DESCRIPTOR object contains a valid file 
   -- descriptor.
   
   deep_save(p:$OB; f:FILE_DESCRIPTOR) is 
      C::deep_save_(p, f.fp);
   end; -- deep_save
   
   deep_restore(f:FILE_DESCRIPTOR):$OB is
      C::deep_restore_(C::address_of(res), f.fp);
   end; -- deep_restore

   deep_save_vn(p:$OB; f:FILE_DESCRIPTOR; version:INT) is 
      C::deep_save_vn_(p, f.fp, version);
   end; -- deep_save
   
   deep_restore_vn(f:FILE_DESCRIPTOR; version:INT):$OB is
      C::deep_restore_vn_(C::address_of(res), f.fp, version);
   end; -- deep_restore

end; -- class PERSIST_OB

--------------------------------------------------------------------

class C is
   
   deep_save_(p:$OB; fd:INT) is end;
   deep_restore_(p:$OB; fd:INT) is end;
   deep_save_vn_(p:$OB; fd:INT; v:INT) is end;
   deep_restore_vn_(p:$OB; fd:INT; v:INT) is end;
   address_of(l:$OB):$OB is end;

end; -- class C

--------------------------------------------------------------------

class DEEP_COPY is
   
   deep_copy(ob:$OB):$OB is
      res := C::deep_copy_(ob);
   end; -- deep_copy
   
end; -- class DEEP_COPY

--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class C is
   
   deep_copy_(ob:$OB):$OB is end;
   
end; -- class C

--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

