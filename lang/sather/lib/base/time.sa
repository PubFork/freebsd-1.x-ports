-- -*- Mode: Sather;  -*-
-- File: sather/lib/base/time.sa
-- Author: Stephen M. Omohundro (om@ICSI.Berkeley.EDU)
-- Copyright (C) International Computer Science Institute, 1991, 1992, 1993
--
-- COPYRIGHT NOTICE: This code is provided "AS IS" WITHOUT ANY WARRANTY
-- and is subject to the terms of the SATHER LIBRARY GENERAL PUBLIC
-- LICENSE contained in the file: "sather/doc/license.txt" of the Sather
-- distribution. The license is also available from ICSI, 1947 Center
-- St., Suite 600, Berkeley CA 94704, USA.
--
-- Changes: Heinz W. Schmidt (hws@csis.dit.csiro.au)
-- (c) Commonwealth Scientific and Industrial Research Organisation (CSIRO),
-- Australia, 1992, 1993.
-- The modifications are provided "AS IS" WITHOUT ANY WARRANTY and are subject
-- to the terms of the SATHER LIBRARY GENERAL PUBLIC LICENCE referred to above.
--*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
--* FUNCTION: Time computations and a clock for timing.
--*
--* CLASSES: TIME, TIME_TEST
--* 
--* REQUIRED FILES: 
--*
--* RELATED FILES:
--*
--* RCS: $Id: time.sa,v 1.1 1994/02/12 03:23:17 hsu Exp $
--* HISTORY:
--* Last edited: Oct 17 06:27 1993 (hws)
--*  Oct 17 06:27 1993 (hws): Sather 1 syntax, copyright note
--* Created: Tue Sep 25 17:12:21 1990 (om)
--*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class TIME is
   -- Timing operations.
   
   start_clock is
      -- Start the clock for the timer.
      C::start_clock_;
   end; -- start_clock
   
   get_clock:REAL is
      -- Time since clock started.
      res:=C::get_clock_
   end; -- get_clock
   
   time:DOUBLE is
      -- The time in seconds since 00:00:00 GMT, Jan. 1, 1970 as a double
      -- including milliseconds.
      res:=C::time_;
   end; -- time
   
end; -- class TIME

--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   
class C is
   -- C functions used by TIMER.
   
   start_clock_ is end; -- Start the clock for timer.
   get_clock_:REAL is end; -- Time since clock started
   time_:DOUBLE is end; -- Time in seconds since epoch (incl millliseconds).
   
end; -- class C

--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

class TIME_TEST is
   -- Test the TIME class.
   TIME;
   
   main(a:ARRAY{STR}) is
      OUT::s("Test of the TIME class:").nl;
      OUT::s("time=").d(time).nl;
      OUT::s("time=").d(time).nl;
      OUT::s("time=").d(time).nl;
      n:INT:=1000000; if a.asize>=2 then n:=a[1].to_i/10 end;
      x:INT:=2; y:INT:=4;
      TIME::start_clock;
      i:INT; loop until!(i=n);
	 y:=x+x; y:=x+x; y:=x+x; y:=x+x; y:=x+x;
	 y:=x+x; y:=x+x; y:=x+x; y:=x+x; y:=x+x;
	 i:=i+1
      end; -- loop
      tm:REAL:=TIME::get_clock;
      OUT::s("Test of TIME, ").i(10*n).s(" iterations of y:=x+x took ");
      OUT::r(tm).s(" seconds.").nl;
      TIME::start_clock;
      i:INT; loop until!(i=n);
	 y:=x*x; y:=x*x; y:=x*x; y:=x*x; y:=x*x;
	 y:=x*x; y:=x*x; y:=x*x; y:=x*x; y:=x*x;
	 i:=i+1
      end; -- loop
      tm:REAL:=TIME::get_clock;
      OUT::s("Test of TIME, ").i(10*n).s(" iterations of y:=x*x took ");
      OUT::r(tm).s(" seconds.").nl;
      OUT::s("time=").d(time).nl;
      OUT::s("time=").d(time).nl;
      OUT::s("time=").d(time).nl;
   end; -- main
   
end; -- class TIME_TEST

--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


