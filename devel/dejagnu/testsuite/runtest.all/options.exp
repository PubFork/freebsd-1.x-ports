#   Copyright (C) 1988, 1990, 1991, 1992 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */

# Please email any bugs, comments, and/or additions to this file to:
# bug-dejagnu@prep.ai.mit.edu

# This file was written by Rob Savoye. (rob@cygnus.com)

load_lib util-defs.exp

#
# setup the list. Here the layout:
# 1st field is the command line option.
# 2nd field is the pattern to match. NOTE - No variable substitutions can be use
# 3rd field is an optional message to print with PASS/FAIL.
#

# move the site.exp file so we have no default to confuse us.
if [file exists $objdir/site.exp] then {
    exec mv -f $objdir/site.exp $objdir/site.ignore
}
set utility [list { "" "ERROR: No tool specified, use the --tool option" "No arguments" } \
     { "-v --tool xXx" "Found.*site\..*Loading.*utils\.exp" "Loading library files" } \
     { "-v --tool xXx" "Expect binary is.*Using.*main test driver" "Loading basic packages" } \
       { "-F --tool x" "Illegal Argument \"-F\"" "Bad argument" } \
          { "--tool x" "Couldn't find tool init file" "Bad tool name" } \
            { "--help" "USAGE:*" "Display help" } \
	  { "-v -v -v" "Verbose is now at level 3" "Verbose set correctly" } \
	        { "-V" "Expect version is.*Tcl version is.*Framework version is*" "--version" } \
{ "-v --target m68k-vxworks" "The target is now m68k-vxworks" "--target option" } \
             { "-v -a" "Print all test output to screen" "--all option" } \
   { "-v --srcdir xXx" "Using test sources in xXx" "--srcdir option" } \
   { "-v --objdir xXx" "Using test binaries in xXx" "--objdir option" } \
     { "-v --name xXx" "Testing target xXx" "--name option" } \
     { "-v --baud 666" "The baud rate is now 666" "--baud option" } \
     { "-v --tool xXx" "Testing xXx" "--tool option" } \
        { "-v --debug" "Expect Debugging is ON" "--debug option" } \
           { "-v --D0" "Tcl debugger is ON" "--D0 option" } \
     { "-v --mail xXx" "Mail results to xXx" "--mail option" } \
     { "-v --strace 1" "Source Trace level is now 1.* 1  if" "--strace option" } \
	    ]

foreach i $utility {
    if [util_test "$RUNTEST" "[lindex $i 0]" "" "[lindex $i 1]"] then {
        fail "[lindex $i 2]"
    } else {
        pass "[lindex $i 2]"
    }
}
    
# move the site.exp file back in place
if [file exists $objdir/site.ignore] then {
    exec mv -f $objdir/site.ignore $objdir/site.exp
}

# clean up log files left by the child runtest
if [file exists $objdir/x.sum] then {
    exec rm -f $objdir/x.*
}
if [file exists $objdir/xXx.sum] then {
    exec rm -f $objdir/xXx.*
}
    
# Since we've been causing errors on purpose, unset errorInfo
if [info exists errorInfo] then {
    # FIXME: find a better way to not trash all errors.
    if [string match "*ERROR:*" $errorInfo] then {
	unset errorInfo
    }
}




