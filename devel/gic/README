		GIC -- The Graphical Interface to CVS
			    Version 1.1b3
			   by David Marwood
		-------------------------------------


Introduction
------------
GIC provides a graphical user interface to the Concurrent Version
System (CVS), a powerful revision control system.  GIC is implemented
in the Tcl/Tk programming language and is intended to augment the
sometimes cumbersome CVS command line interface.  Novices should find
GIC to be much easier to learn than the CVS command line.

While GIC is easy to use, it does not contain any documentation on
CVS.  Users of GIC must first learn the concepts of CVS such as
modules and merging, as well as the simple functions, such as
commiting and updating.  The CVS manual page and the README file are
good places to look.


Improvements to GIC
-------------------
Feel free to make changes to GIC.  If you do make any useful changes
such as bug fixes or functionality improvements, please mail them to
me (marwood@cpsc.ucalgary.ca).  If you discover bugs you can't fix
yourself, mail a description of how to create it, the error message
produced, and the version of GIC you have, and I'll see if I can fix
it in the next release.

GIC has lots of potential.  If you'd like to display version numbers
on the main screen, or parse the cvs status output in more detail,
please do.  I know these things can be done, it's just a matter of
doing it.

While I don't mind people changing GIC, I ask that my name remain in
the source code as the author, and that this README file remain
attached to any distribution of GIC.


Obtaining GIC
-------------
GIC can be obtained by anonymous ftp from
ftp.cpsc.ucalgary.ca:/pub/marwood/gic-1.1b3.tar.Z.


Thanks
------
Thanks goes to Brian Berliner, Jeff Polk, and the other developers of
CVS for an excellent utility.  We use it daily in our software
development efforts.

Thanks to John Ousterhout for Tcl and Tk.  Together, they provide an
excellent language with which the task of software development and
implementation becomes much easier.

Thanks to the University of Calgary and, in particular, Saul Greenberg
for providing the time and equipment to develop GIC.

Finally, thanks to all those helpful bug reporters and people who have
contributed pieces to GIC:
Sven Delmas             File selection box
Michael Pilawa          tkerror procedure
Marshall Midden         Makefile
Booker Bense            Scroller on the files/status listboxes
Thomas Nilsson		Much of the directory selection code
			Busy cursor
			Other small bits and ideas

- David Marwood
- marwood@cpsc.ucalgary.ca
