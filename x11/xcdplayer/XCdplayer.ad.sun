! Copyright (C) 1990 Regents of the University of California.
! Permission to use, copy, modify, distribute, and sell this software and
! its documentation for any purpose is hereby granted without fee,
! provided that the above copyright notice appear in all copies and that
! both that copyright notice and this permission notice appear in
! supporting documentation, and that the name of the University of
! California not be used in advertising or publicity pertaining to
! distribution of the software without specific, written prior
! permission.  the University of California makes no representations
! about the suitability of this software for any purpose.  It is provided
! "as is" without express or implied warranty.

XCdplayer*foreground:			Blue
XCdplayer*background:			LightGrey
XCdplayer*borderColor:			Black
XCdplayer*allowShellResize:		True
XCdplayer*resizable:			True
XCdplayer*Font:				-misc-fixed-bold-r-normal--13-*

XCdplayer*logoLabel.foreground:		Gold
XCdplayer*logoLabel.background:		Black

XCdplayer*versionLabel.Font:		 -misc-fixed-medium-r-normal--8-*
XCdplayer*versionLabel.foreground:	Black
XCdplayer*versionLabel.width:		110
XCdplayer*versionLabel.fromHoriz:	logoLabel

! replayThreshold is the number of seconds that must be played before the
! previous track button will take you back to the beginning of the current
! track, rather than the previous one.
XCdplayer*replayThreshold:		4

! scanSkipInterval is the number of seconds skipped at each fast-forward or
! reverse.
XCdplayer*scanSkipInterval:		3
! pauseSkipInterval is the number of seconds skipped at each fast-forward or
! reverse if the CD is paused.
XCdplayer*pauseSkipInterval:		15

! scanPauseInterval is the number of seconds between each fast_forward or
! reverse while holding down the buttons. (Sun CDs have a dreadfully long
! start-up time for the audio to actually become audible, so "hearing the
! track" while scanning isn't very feasible.)
XCdplayer*scanPauseInterval:		0.062
! pausePauseInterval does the same thing when the disc is paused.
XCdplayer*pausePauseInterval:		0.5

! cdInfoDir is the directory to search for stored data about discs.
! NOTE: this must currently be a fully specified path (ie no '~'s, 
! environment vars, etc.  This should only be set if you are using a local
! copy of the application defaults.  The command line option -cdInfoDir <path>
! is provided for overriding the default path (null (= current dir))
!XCdplayer*cdInfoDir:			eg:   /usr/staff/yourname/CDs

XCdplayer*Viewport.allowHoriz:		True
XCdplayer*Viewport.useBottom:		True
XCdplayer*Viewport.forceBars:		False
XCdplayer*Viewport.width:		160
XCdplayer*Viewport.height:		30
XCdplayer*Viewport*thickness:		8
XCdplayer*Viewport.resizable:		False

XCdplayer*Form.defaultDistance:		1
XCdplayer*Form.internalHeight:		0
XCdplayer*Form.internalWidth:		0
XCdplayer*Form.borderWidth:		0

XCdplayer*Label.internalHeight:		0
XCdplayer*Label.internalWidth:		0
XCdplayer*Label.borderWidth:		0
XCdplayer*Label.top:			ChainTop
XCdplayer*Label.bottom:			ChainTop
XCdplayer*Label.left:			ChainLeft
XCdplayer*Label.right:			ChainLeft

XCdplayer*Command.background:		Ivory
XCdplayer*Text.background:		Ivory
XCdplayer*AsciiSink.background:		Ivory
XCdplayer*AsciiSink.foreground:		Red
XCdplayer*Scrollbar.foreground:		White
XCdplayer*Scrollbar.background:		Gold

XCdplayer*Toggle.borderWidth:		1
XCdplayer*Toggle.top:			ChainTop
XCdplayer*Toggle.bottom:		ChainTop
XCdplayer*Toggle.left:			ChainLeft
XCdplayer*Toggle.right:			ChainLeft
XCdplayer*Toggle.background:		Ivory

XCdplayer*ledsLabel.horizDistance:	4
XCdplayer*ledsLabel.fromVert:		versionLabel
XCdplayer*ledsLabel.fromHoriz:		logoLabel

XCdplayer*trackButton.horizDistance:	4
XCdplayer*trackButton.fromVert:		versionLabel
XCdplayer*trackButton.fromHoriz:	ledsLabel
XCdplayer*trackButton.borderWidth:	2
XCdplayer*trackButton.internalHeight:	4
XCdplayer*trackButton.internalWidth:	4

XCdplayer*timerButton.borderWidth:	2
XCdplayer*timerButton.internalHeight:	4
XCdplayer*timerButton.internalWidth:	4
XCdplayer*timerButton.horizDistance:	2
XCdplayer*timerButton.fromVert:		versionLabel
XCdplayer*timerButton.fromHoriz:	trackButton
XCdplayer*timerButton.left:		ChainRight
XCdplayer*timerButton.right:		ChainRight

XCdplayer*volumeScrollbar.horizDistance:4
XCdplayer*volumeScrollbar.fromHoriz:	logoLabel
XCdplayer*volumeScrollbar.fromVert:	trackButton
XCdplayer*volumeScrollbar.orientation:	horizontal
XCdplayer*volumeScrollbar.length:	93
XCdplayer*volumeScrollbar.right:	ChainRight
XCdplayer*volumeScrollbar.left:		ChainRight
XCdplayer*volumeScrollbar.background:	green
XCdplayer*volumeScrollbar.foreground:	white

XCdplayer*titleBarViewport.fromVert:	volumeScrollbar
XCdplayer*titleBar.borderwidth:		0
XCdplayer*titleBar.highlightThickness:	1
XCdplayer*titleBar.foreground:		Red
XCdplayer*titleBar.background:		Ivory
XCdplayer*buttonsForm.fromVert:		logoForm
XCdplayer*buttonsForm.borderWidth:	1

XCdplayer*pauseButton.fromHoriz:	playButton
XCdplayer*stopButton.fromHoriz:		pauseButton
XCdplayer*prevButton.fromHoriz:		stopButton
XCdplayer*nextButton.fromHoriz:		prevButton
XCdplayer*ejectButton.fromHoriz:	nextButton
XCdplayer*audioButton.fromHoriz:	ejectButton

XCdplayer*quitButton.fromVert:		playButton
XCdplayer*cycleButton.fromVert:		playButton
XCdplayer*cycleButton.fromHoriz:	quitButton
XCdplayer*shuffleButton.fromVert:	playButton
XCdplayer*shuffleButton.fromHoriz:	cycleButton
XCdplayer*rewButton.fromVert:		playButton
XCdplayer*rewButton.fromHoriz:		shuffleButton
XCdplayer*ffButton.fromVert:		playButton
XCdplayer*ffButton.fromHoriz:		rewButton
XCdplayer*pgmButton.fromVert:		playButton
XCdplayer*pgmButton.fromHoriz:		ffButton

XCdplayer*stopButton.radioGroup:	playButton
XCdplayer*ejectButton.radioGroup:	playButton
XCdplayer*programForm.fromVert:		buttonsForm
XCdplayer*programForm.borderWidth:	1

XCdplayer*programDisplayViewport.forceBars:	True

XCdplayer*programDisplayForm.background:		Black
XCdplayer*programDisplayForm*Toggle.background:		Black
XCdplayer*programDisplayForm*Toggle.foreground:		White
XCdplayer*programDisplayForm*Toggle.borderWidth:	0
XCdplayer*programDisplayForm*Toggle.highlightThickness:	0
XCdplayer*programDisplayForm*Toggle.internalWidth:	0
XCdplayer*programDisplayForm*Toggle.defaultDistance:	0

XCdplayer*programDisplayForm*Toggle.translations: <EnterWindow>:  highlight(Always) \n\
					<LeaveWindow>:  unhighlight() \n\
					<Btn1Down>,<Btn1Up>:    set() notify()


XCdplayer*trackButton.translations:	#override \
					<EnterWindow>:	highlight(Always) \n\
					<LeaveWindow>:	unhighlight() \n\
					<Btn1Down>:	set() notify() \n\
					<Btn1Up>:	reset() notify()

XCdplayer*playButton.translations:	<EnterWindow>:	highlight(Always) \n\
					<LeaveWindow>:	unhighlight() \n\
					<Btn1Down>:	set() notify()

XCdplayer*stopButton.translations:	<EnterWindow>:	highlight(Always) \n\
					<LeaveWindow>:	unhighlight() \n\
					<Btn1Down>:	set() notify()

XCdplayer*ejectButton.translations:	<EnterWindow>:	highlight(Always) \n\
					<LeaveWindow>:	unhighlight() \n\
					<Btn1Down>:	set() notify()

XCdplayer*audioButton.translations:	<EnterWindow>:	highlight(Always) \n\
					<LeaveWindow>:	unhighlight() \n\
					<Btn1Down>:	set() notify()

XCdplayer*prevButton.translations:	<EnterWindow>:	highlight(Always) \n\
					<LeaveWindow>:	unhighlight() \n\
					<Btn1Down>:	set() notify() \n\
					<Btn1Up>:	unset()

XCdplayer*nextButton.translations:	<EnterWindow>:	highlight(Always) \n\
					<LeaveWindow>:	unhighlight() \n\
					<Btn1Down>:	set() notify() \n\
					<Btn1Up>:	unset()

XCdplayer*rewButton.translations:	<EnterWindow>:	highlight(Always) \n\
					<LeaveWindow>:	unhighlight() \n\
					<Btn1Down>:	set() notify() \n\
					<Btn1Up>:	unset()

XCdplayer*ffButton.translations:	<EnterWindow>:	highlight(Always) \n\
					<LeaveWindow>:	unhighlight() \n\
					<Btn1Down>:	set() notify() \n\
					<Btn1Up>:	unset()

XCdplayer*pgmButton.translations:	#override \
					<EnterWindow>:	highlight(Always) \n\
					<LeaveWindow>:	unhighlight() \n\
					<Btn1Down>:	set() notify() \n
					<Btn1Up>:	reset notify
