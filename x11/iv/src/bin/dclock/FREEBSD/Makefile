# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.65 91/07/25 17:50:17 rws Exp $

# Read "InterViews/template" to understand how this Makefile was generated.
# Edit <InterViews/arch.def> to add support for a new platform.
# Edit <InterViews/iv-freebsd.cf> to change platform-specific parameters.
# Edit <InterViews/local.def> to change site-specific parameters.
# Edit <Imakefile> to change actions that make should perform.

# architecture:  FREEBSD

              SHELL = /bin/sh

              IMAKE = imake
         IMAKEFLAGS = \
	-T "InterViews/template"\
	-I$(CONFIGSRC) -I$(XCONFIGDIR)\
	$(SPECIAL_IMAKEFLAGS)
 SPECIAL_IMAKEFLAGS = -f $(SRC)/Imakefile -DInObjectCodeDir
             DEPEND = makedepend
     DEPEND_CCFLAGS = $(CCDEFINES) $(CCINCLUDES) -I/usr/include/g++
               MAKE = make
           PASSARCH = ARCH="$(ARCH)" SPECIAL_IMAKEFLAGS="$(SPECIAL_IMAKEFLAGS)"
          ARCHORCPU = FREEBSD
               ARCH = $(ARCHORCPU)$(SPECIAL_ARCH)
       SPECIAL_ARCH =

           CCDRIVER = g++
           CCSUFFIX = c
                SRC = ..
              SLASH = /
               SRCS = $(SRC)$(SLASH)*.$(CCSUFFIX)
               OBJS = *.o
               AOUT = a.out

            CCFLAGS = $(APP_CCFLAGS) $(IV_CCFLAGS) $(EXTRA_CCFLAGS)
         IV_CCFLAGS = \
	\
	\
	$(SHARED_CCFLAGS)\
	$(CCDEFINES)\
	$(CCINCLUDES)
      DEBUG_CCFLAGS = -g
   OPTIMIZE_CCFLAGS = -O
     SHARED_CCFLAGS =
      EXTRA_CCFLAGS =

          CCDEFINES = $(APP_CCDEFINES) $(IV_CCDEFINES) $(EXTRA_CCDEFINES)
       IV_CCDEFINES = $(LANGUAGE_CCDEFINES) $(BACKWARD_CCDEFINES)
 LANGUAGE_CCDEFINES = -Dcplusplus_2_1
 BACKWARD_CCDEFINES =
    EXTRA_CCDEFINES =

         CCINCLUDES = $(APP_CCINCLUDES) $(IV_CCINCLUDES) $(EXTRA_CCINCLUDES)
      IV_CCINCLUDES = \
	$(BACKWARD_CCINCLUDES)\
	$(TOP_CCINCLUDES)\
	$(X_CCINCLUDES)
BACKWARD_CCINCLUDES =
     TOP_CCINCLUDES = -I$(INCSRC)
       X_CCINCLUDES = -I$(XINCDIR)
   EXTRA_CCINCLUDES =

          CCLDFLAGS = $(APP_CCLDFLAGS) $(IV_CCLDFLAGS) $(EXTRA_CCLDFLAGS)
       IV_CCLDFLAGS = \
	\
	\
	$(NONSHARED_CCLDFLAGS)
NONSHARED_CCLDFLAGS =
    EXTRA_CCLDFLAGS =

          CCDEPLIBS = $(APP_CCDEPLIBS) $(IV_CCDEPLIBS) $(EXTRA_CCDEPLIBS)
       IV_CCDEPLIBS = \
	$(DEPLIBUNIDRAW)\
	$(DEPLIBGRAPHIC)\
	$(DEPLIBIV)\
	$(DEPLIBXEXT)\
	$(DEPLIBX11)\
	$(DEPLIBM)
    EXTRA_CCDEPLIBS =

           CCLDLIBS = $(APP_CCLDLIBS) $(IV_CCLDLIBS) $(EXTRA_CCLDLIBS)
        IV_CCLDLIBS = \
	$(LIBDIRPATH)\
	$(LDLIBUNIDRAW)\
	$(LDLIBGRAPHIC)\
	$(LDLIBIV)\
	$(XLIBDIRPATH)\
	$(LDLIBXEXT)\
	$(LDLIBX11)\
	$(LDLIBM)\
	$(ABSLIBDIRPATH)
     EXTRA_CCLDLIBS = -lg++

            INSTALL = install
       INSTPGMFLAGS = -s
       INSTBINFLAGS = -m 0755
       INSTUIDFLAGS = -m 4755
       INSTLIBFLAGS = -m 0644
       INSTINCFLAGS = -m 0444
       INSTMANFLAGS = -m 0444
       INSTDATFLAGS = -m 0444
      INSTKMEMFLAGS = -m 4755

                 AR = ar cq
                 AS = as
                 CP = cp
                CPP = /usr/bin/cpp $(EXTRA_CCDEFINES)
      PREPROCESSCMD = $(CCDRIVER) -E $(EXTRA_CCDEFINES)
                 LD = ld
                 LN = ln -s
          MKDIRHIER = $(SHELL) $(SCRIPTSRC)/mkdirhier.sh
                 MV = mv
             RANLIB = ranlib
    RANLIBINSTFLAGS =
                 RM = rm -f
             RM_CMD = $(RM) ,* .emacs_* *..c *.BAK *.CKP *.a *.bak *.ln *.o a.out core errs make.log make.out tags TAGS
              TROFF = psroff

                TOP = ../../../../.
        CURRENT_DIR = ./src/bin/dclock/FREEBSD

              IVSRC = $(TOP)/src
             BINSRC = $(IVSRC)/bin
          CONFIGSRC = $(IVSRC)/config
             INCSRC = $(IVSRC)/include
             LIBSRC = $(IVSRC)/lib
             MANSRC = $(IVSRC)/man
          SCRIPTSRC = $(BINSRC)/scripts

             BINDIR = $(TOP)/installed/bin/$(ARCH)
          CONFIGDIR = $(TOP)/installed/config
             INCDIR = $(TOP)/installed/include
             LIBDIR = $(TOP)/installed/lib/$(ARCH)
          LIBALLDIR = $(TOP)/installed/lib/all
             MANDIR = $(TOP)/installed/man

       ABSCONFIGDIR = /usr/local/interviews/config
          ABSLIBDIR = /usr/local/interviews/lib/$(ARCH)
       ABSLIBALLDIR = /usr/local/interviews/lib/all
         XCONFIGDIR = /usr/X386/lib/X11/config
            XINCDIR = /usr/X386/include
            XLIBDIR = /usr/X386/lib
          PSFONTDIR = /usr/lib/ps

all::

Makefile::
	-@if [ -f Makefile ]; then \
	$(RM) Makefile.bak; \
	$(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE) $(IMAKEFLAGS) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)
Makefiles::
depend::
install::

clean::
	@$(RM_CMD) "#"*

# -------------------------------------------------------------------------

#
# dclock - scalable digital clock
#

 DEPLIBIV = $(LIBSRC)/IV/$(ARCH)/libIV.a
 DEPLIBXEXT =
 DEPLIBX11 =
 DEPLIBM =

 LIBDIRPATH =
 LDLIBIV = -L$(LIBSRC)/IV/$(ARCH) -lIV
 XLIBDIRPATH = -L$(XLIBDIR)
 LDLIBXEXT = -lXext
 LDLIBX11 = -lX11
 LDLIBM = -lm
 ABSLIBDIRPATH =

 BACKWARD_CCDEFINES = -Div2_6_compatible
BACKWARD_CCINCLUDES = -I$(INCSRC)/IV-2_6

PROGRAM	= dclock

all:: $(AOUT)

$(AOUT):  $(CCDEPLIBS)
	-@if [ ! -w $@ ]; then $(RM) $@; else exit 0; fi
	$(CCDRIVER) $(CCLDFLAGS) -o $@ $(OBJS) $(CCLDLIBS)

install:: $(AOUT)
	-@if [ -d $(BINDIR) ]; then exit 0; \
	else (set -x; $(MKDIRHIER) $(BINDIR)); fi
	$(INSTALL) -c $(INSTPGMFLAGS) $(INSTBINFLAGS) $(AOUT) $(BINDIR)/$(PROGRAM)
	$(RM) $(AOUT)

depend::
	$(DEPEND) -s "# DO NOT DELETE" -- $(DEPEND_CCFLAGS) -- $(SRCS)

$(AOUT): clocktime.o
clocktime.o: $(SRC)/clocktime.$(CCSUFFIX)
	@$(RM) clocktime.o clocktime..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/clocktime.$(CCSUFFIX)

$(AOUT): data.o
data.o: $(SRC)/data.$(CCSUFFIX)
	@$(RM) data.o data..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/data.$(CCSUFFIX)

$(AOUT): dclock.o
dclock.o: $(SRC)/dclock.$(CCSUFFIX)
	@$(RM) dclock.o dclock..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/dclock.$(CCSUFFIX)

$(AOUT): dface.o
dface.o: $(SRC)/dface.$(CCSUFFIX)
	@$(RM) dface.o dface..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/dface.$(CCSUFFIX)

$(AOUT): digit.o
digit.o: $(SRC)/digit.$(CCSUFFIX)
	@$(RM) digit.o digit..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/digit.$(CCSUFFIX)

$(AOUT): segment.o
segment.o: $(SRC)/segment.$(CCSUFFIX)
	@$(RM) segment.o segment..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/segment.$(CCSUFFIX)

