# Commands covered:  spawn
#
# This file contains a collection of tests for one or more of the Tcl
# built-in commands.  Sourcing this file into Tcl runs the tests and
# generates output for errors.  No output means no errors were found.

if {[string compare test [info procs test]] == 1} then {source defs}

log_user 0

#exp_internal -f /dev/ttyp5 0

test spawn-1.1 {basic spawn operation} {
	set x [catch {spawn cat}]
	set first_spawn_id $spawn_id; # save for later test
	close;wait
	set x
} {0}

test spawn-1.2 {spawn cat, then simple send/expect sequence} {
    set cat [spawn -noecho cat -u]
    send "a\r"
    expect "a" {set x 1} timeout {set x 0}
    close;wait
    set x
} {1}

test spawn-1.3 {spawn two processes simultaneously} {
    spawn -noecho cat; set cat $spawn_id
    spawn -noecho cat; set cat2 $spawn_id
    set x [expr {0!=[string compare [exp_pid -i $cat2] [exp_pid -i $cat]]}]
    close -i $cat;wait -i $cat;close -i $cat2;wait -i $cat2
    set x
} {1}

test spawn-1.4 {spawn open file} {
	set x 0
	set y 0

	set file [open /tmp/[pid] w]
	puts $file "testing expect's spawn -open"
	close $file
	set pid [spawn -open [open /tmp/[pid]]]
	expect "testing expect's spawn -open" {set x 1}
	expect eof {set y 1}
	exec rm /tmp/[pid]
	wait
	list $x $y $pid
} {1 1 0}

test spawn-1.5 {spawn with no fd leak} {
	spawn cat
	set x [expr $first_spawn_id==$spawn_id]
	close; wait
	set x
} {1}	

# looks to be some control-char problem
#ftest spawn-1.6 {spawn with echo} {
#	spawn cat
#} {spawn cat}
	
ftest spawn-1.7 {spawn with -noecho} {
	spawn -noecho cat
} {}
